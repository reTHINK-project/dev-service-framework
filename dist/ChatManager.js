// version: 0.9.0
// date: Fri Jul 27 2018 19:55:29 GMT+0100 (GMT Daylight Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


!function(c,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("ChatManager",[],e):"object"==typeof exports?exports.ChatManager=e():(c[""]=c[""]||{},c[""].ChatManager=e())}("undefined"!=typeof self?self:this,function(){return function(c){var e={};function l(n){if(e[n])return e[n].exports;var I=e[n]={i:n,l:!1,exports:{}};return c[n].call(I.exports,I,I.exports,l),I.l=!0,I.exports}return l.m=c,l.c=e,l.d=function(c,e,n){l.o(c,e)||Object.defineProperty(c,e,{configurable:!1,enumerable:!0,get:n})},l.n=function(c){var e=c&&c.__esModule?function(){return c.default}:function(){return c};return l.d(e,"a",e),e},l.o=function(c,e){return Object.prototype.hasOwnProperty.call(c,e)},l.p="",l(l.s=167)}([function(module,exports){eval("var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanM/MTVlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0IsdUNBQXVDIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi41LjcnIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcz9lY2FiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){eval("var store = __webpack_require__(36)('wks');\nvar uid = __webpack_require__(23);\nvar Symbol = __webpack_require__(1).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy5qcz83NTJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3RvcmUgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnd2tzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuU3ltYm9sO1xudmFyIFVTRV9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09ICdmdW5jdGlvbic7XG5cbnZhciAkZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuIHN0b3JlW25hbWVdIHx8IChzdG9yZVtuYW1lXSA9XG4gICAgVVNFX1NZTUJPTCAmJiBTeW1ib2xbbmFtZV0gfHwgKFVTRV9TWU1CT0wgPyBTeW1ib2wgOiB1aWQpKCdTeW1ib2wuJyArIG5hbWUpKTtcbn07XG5cbiRleHBvcnRzLnN0b3JlID0gc3RvcmU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzPzY2YjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(13)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzP2Y4NGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGlDQUFpQyxRQUFRLG1CQUFtQixVQUFVLEVBQUUsRUFBRTtBQUMxRSxDQUFDIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZXNjcmlwdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(59);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ("value" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzP2MzMTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQSxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9kZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIik7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVmaW5lUHJvcGVydHkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgKDAsIF9kZWZpbmVQcm9wZXJ0eTIuZGVmYXVsdCkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(1);\nvar core = __webpack_require__(0);\nvar ctx = __webpack_require__(14);\nvar hide = __webpack_require__(11);\nvar has = __webpack_require__(10);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2V4cG9ydC5qcz85MGNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRTtBQUNqRTtBQUNBLGtGQUFrRjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxjQUFjO0FBQ2QsY0FBYztBQUNkLGNBQWM7QUFDZCxlQUFlO0FBQ2YsZUFBZTtBQUNmLGVBQWU7QUFDZixnQkFBZ0I7QUFDaEIiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciBJU19XUkFQID0gdHlwZSAmICRleHBvcnQuVztcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGtleSwgb3duLCBvdXQ7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKG93biAmJiBoYXMoZXhwb3J0cywga2V5KSkgY29udGludWU7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSBvd24gPyB0YXJnZXRba2V5XSA6IHNvdXJjZVtrZXldO1xuICAgIC8vIHByZXZlbnQgZ2xvYmFsIHBvbGx1dGlvbiBmb3IgbmFtZXNwYWNlc1xuICAgIGV4cG9ydHNba2V5XSA9IElTX0dMT0JBTCAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gIT0gJ2Z1bmN0aW9uJyA/IHNvdXJjZVtrZXldXG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICA6IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKVxuICAgIC8vIHdyYXAgZ2xvYmFsIGNvbnN0cnVjdG9ycyBmb3IgcHJldmVudCBjaGFuZ2UgdGhlbSBpbiBsaWJyYXJ5XG4gICAgOiBJU19XUkFQICYmIHRhcmdldFtrZXldID09IG91dCA/IChmdW5jdGlvbiAoQykge1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEMpIHtcbiAgICAgICAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDKCk7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmIChJU19QUk9UTykge1xuICAgICAgKGV4cG9ydHMudmlydHVhbCB8fCAoZXhwb3J0cy52aXJ0dWFsID0ge30pKVtrZXldID0gb3V0O1xuICAgICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLnByb3RvdHlwZS4lTkFNRSVcbiAgICAgIGlmICh0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKSBoaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2V4cG9ydC5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n")},function(module,exports){eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLW9iamVjdC5qcz8xMmE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSAxMiAxMyAxNCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n")},function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(9);\nvar IE8_DOM_DEFINE = __webpack_require__(39);\nvar toPrimitive = __webpack_require__(27);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(4) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcC5qcz83YWYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsWUFBWTtBQUNmO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcC5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(7);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FuLW9iamVjdC5qcz9lZmIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n")},function(module,exports){eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qcz8wZjYyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(8);\nvar createDesc = __webpack_require__(16);\nmodule.exports = __webpack_require__(4) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanM/ODQ5YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGlkZS5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(55);\nvar defined = __webpack_require__(30);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWlvYmplY3QuanM/NGRjNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWlvYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n")},function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ZhaWxzLmpzPzRiY2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qc1xuLy8gbW9kdWxlIGlkID0gMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){eval("// optional / simple context binding\nvar aFunction = __webpack_require__(24);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2N0eC5qcz9mOTkzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n")},function(module,exports){eval("module.exports = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2xpYnJhcnkuanM/M2I4OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gdHJ1ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19saWJyYXJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAxNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,exports){eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanM/NWZjMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n")},function(module,exports){eval("module.exports = {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXJhdG9ycy5qcz9mZGI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyYXRvcnMuanNcbi8vIG1vZHVsZSBpZCA9IDE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(102), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UuanM/ZmZmMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAxOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringify = __webpack_require__(58);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.divideURL = divideURL;\nexports.divideEmail = divideEmail;\nexports.emptyObject = emptyObject;\nexports.deepClone = deepClone;\nexports.getUserURLFromEmail = getUserURLFromEmail;\nexports.getUserEmailFromURL = getUserEmailFromURL;\nexports.convertToUserURL = convertToUserURL;\nexports.checkAttribute = checkAttribute;\nexports.parseAttributes = parseAttributes;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n* Copyright 2016 PT Inovação e Sistemas SA\r\n* Copyright 2016 INESC-ID\r\n* Copyright 2016 QUOBIS NETWORKS SL\r\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n* Copyright 2016 ORANGE SA\r\n* Copyright 2016 Deutsche Telekom AG\r\n* Copyright 2016 Apizee\r\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n**/\n/**\r\n * Support module with some functions will be useful\r\n * @module utils\r\n */\n\n/**\r\n * @typedef divideURL\r\n * @type Object\r\n * @property {string} type The type of URL\r\n * @property {string} domain The domain of URL\r\n * @property {string} identity The identity of URL\r\n */\n\n/**\r\n * Divide an url in type, domain and identity\r\n * @param  {URL.URL} url - url address\r\n * @return {divideURL} the result of divideURL\r\n */\nfunction divideURL(url) {\n\n  function recurse(value) {\n    var regex = /([a-zA-Z-]*)(:\\/\\/(?:\\.)?|:)([-a-zA-Z0-9@:%._\\+~#=]{2,256})([-a-zA-Z0-9@:%._\\+~#=\\/]*)/gi;\n    var subst = '$1,$3,$4';\n    var parts = value.replace(regex, subst).split(',');\n    return parts;\n  }\n\n  var parts = recurse(url);\n\n  // If the url has no scheme\n  if (parts[0] === url && !parts[0].includes('@')) {\n\n    var _result = {\n      type: '',\n      domain: url,\n      identity: ''\n    };\n\n    console.warn('[DivideURL] DivideURL don\\'t support url without scheme. Please review your url address', url);\n\n    return _result;\n  }\n\n  // check if the url has the scheme and includes an @\n  if (parts[0] === url && parts[0].includes('@')) {\n    var scheme = parts[0] === url ? 'smtp' : parts[0];\n    parts = recurse(scheme + '://' + parts[0]);\n  }\n\n  // if the domain includes an @, divide it to domain and identity respectively\n  if (parts[1].includes('@')) {\n    parts[2] = parts[0] + '://' + parts[1];\n    parts[1] = parts[1].substr(parts[1].indexOf('@') + 1);\n  } /*else if (parts[2].includes('/')) {\r\n    parts[2] = parts[2].substr(parts[2].lastIndexOf('/')+1);\r\n    }*/\n\n  var result = {\n    type: parts[0],\n    domain: parts[1],\n    identity: parts[2]\n  };\n\n  return result;\n}\n\nfunction divideEmail(email) {\n  var indexOfAt = email.indexOf('@');\n\n  var result = {\n    username: email.substring(0, indexOfAt),\n    domain: email.substring(indexOfAt + 1, email.length)\n  };\n\n  return result;\n}\n\n/**\r\n * Check if an Object is empty\r\n * @param  {Object} object Object to be checked\r\n * @return {Boolean}       status of Object, empty or not (true|false);\r\n */\nfunction emptyObject(object) {\n  return (0, _keys2.default)(object).length > 0 ? false : true;\n}\n\n/**\r\n * Make a COPY of the original data\r\n * @param  {Object}  obj - object to be cloned\r\n * @return {Object}\r\n */\nfunction deepClone(obj) {\n  //TODO: simple but inefficient JSON deep clone...\n  if (obj) return JSON.parse((0, _stringify2.default)(obj));\n}\n\n/**\r\n * Obtains the user URL that corresponds to a given email\r\n * @param  {string} userEmail The user email\r\n * @return {URL.URL} userURL The user URL\r\n */\nfunction getUserURLFromEmail(userEmail) {\n  var indexOfAt = userEmail.indexOf('@');\n  return 'user://' + userEmail.substring(indexOfAt + 1, userEmail.length) + '/' + userEmail.substring(0, indexOfAt);\n}\n\n/**\r\n * Obtains the user email that corresponds to a given URL\r\n * @param  {URL.URL} userURL The user URL\r\n * @return {string} userEmail The user email\r\n */\nfunction getUserEmailFromURL(userURL) {\n  var url = divideURL(userURL);\n  return url.identity.replace('/', '') + '@' + url.domain; // identity field has '/exampleID' instead of 'exampleID'\n}\n\n/**\r\n * Check if the user identifier is already in the URL format, if not, convert to URL format\r\n * @param  {string}   identifier  user identifier\r\n * @return {string}   userURL    the user URL\r\n */\nfunction convertToUserURL(identifier) {\n\n  // check if the identifier is already in the url format\n  if (identifier.substring(0, 7) === 'user://') {\n    var dividedURL = divideURL(identifier);\n\n    //check if the url is well formated\n    if (dividedURL.domain && dividedURL.identity) {\n      return identifier;\n    } else {\n      throw 'userURL with wrong format';\n    }\n\n    //if not, convert the user email to URL format\n  } else {\n    return getUserURLFromEmail(identifier);\n  }\n}\n\nfunction checkAttribute(path) {\n\n  var regex = /((([a-zA-Z]+):\\/\\/([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})\\/[a-zA-Z0-9\\.]+@[a-zA-Z0-9]+(\\-)?[a-zA-Z0-9]+(\\.)?[a-zA-Z0-9]{2,10}?\\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm;\n\n  var list = [];\n  var final = [];\n  var test = path.match(regex);\n\n  if (test == null) {\n    final = path.split('.');\n  } else {\n    var m = void 0;\n    while ((m = regex.exec(path)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      // The result can be accessed through the `m`-variable.\n      m.forEach(function (match, groupIndex) {\n        if (groupIndex === 0) {\n          list.push(match);\n        }\n      });\n    }\n    var result = void 0;\n    list.forEach(function (url) {\n      result = path.replace(url, '*+*');\n\n      final = result.split('.').map(function (item) {\n        if (item === '*+*') {\n          return url;\n        }\n        return item;\n      });\n    });\n  }\n\n  console.log('[ServiceFramework.Utils.checkAttribute]', final);\n  return final;\n}\n\nfunction parseAttributes(path) {\n  var regex = /([0-9a-zA-Z][-\\w]*):\\/\\//g;\n\n  var string3 = 'identity';\n\n  if (!path.includes('://')) {\n    return path.split('.');\n  } else {\n    var string1 = path.split(regex)[0];\n\n    var array1 = string1.split('.');\n\n    var string2 = path.replace(string1, '');\n\n    if (path.includes(string3)) {\n\n      var array2 = string2.split(string3 + '.');\n\n      console.log('array2 ' + array2);\n\n      string2 = array2[0].slice('.', -1);\n\n      array2 = array2[1].split('.');\n\n      array1.push(string2, string3);\n\n      array1 = array1.concat(array2);\n    } else {\n      array1.push(string2);\n    }\n\n    return array1.filter(Boolean);\n  }\n}\n/*\r\nexport function assign(obj, keyPath, value) {\r\n\r\n  if (!obj) obj = {};\r\n  if (typeof(keyPath) === 'string') keyPath = parseAttributes(keyPath);\r\n\r\n  let lastKeyIndex = keyPath.length - 1;\r\n\r\n  for (var i = 0; i < lastKeyIndex; ++i) {\r\n    let key = keyPath[i];\r\n    if (!(key in obj)) {\r\n      obj[key] = {};\r\n    }\r\n\r\n    obj = obj[key];\r\n\r\n  }\r\n\r\n  obj[keyPath[lastKeyIndex]] = value;\r\n}*///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(45);\nvar enumBugKeys = __webpack_require__(37);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLmpzPzk2NGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMuanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvZi5qcz80N2QzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvZi5qc1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    "use strict";\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module === \'object\' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    "use strict";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = "undefined";\n\n    var logMethods = [\n        "trace",\n        "debug",\n        "info",\n        "warn",\n        "error"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === \'function\') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === \'debug\') {\n            methodName = \'log\';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, \'log\');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn\'t present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = "loglevel";\n      if (name) {\n        storageKey += ":" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || \'silent\').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + "=" + levelName + ";";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + "=");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,\n          "ERROR": 4, "SILENT": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return "No console available for logging";\n              }\n          } else {\n              throw "log.setLevel() called with invalid level: " + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== "string" || name === "") {\n          throw new TypeError("You must supply a name when creating a logger.");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n')},function(module,exports){eval("var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qcz9kYzRhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaWQgPSAwO1xudmFyIHB4ID0gTWF0aC5yYW5kb20oKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL191aWQuanNcbi8vIG1vZHVsZSBpZCA9IDIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///23\n")},function(module,exports){eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanM/OTRlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(91), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzPzY3MWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSAyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25\n')},function(module,exports,__webpack_require__){eval("var def = __webpack_require__(8).f;\nvar has = __webpack_require__(10);\nvar TAG = __webpack_require__(2)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzPzdiYTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0VBQW9FLGlDQUFpQztBQUNyRyIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkZWYgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgdGFnLCBzdGF0KSB7XG4gIGlmIChpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKSBkZWYoaXQsIFRBRywgeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWcgfSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(7);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcz8zMjYzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4vLyBpbnN0ZWFkIG9mIHRoZSBFUzYgc3BlYyB2ZXJzaW9uLCB3ZSBkaWRuJ3QgaW1wbGVtZW50IEBAdG9QcmltaXRpdmUgY2FzZVxuLy8gYW5kIHRoZSBzZWNvbmQgYXJndW1lbnQgLSBmbGFnIC0gcHJlZmVycmVkIHR5cGUgaXMgYSBzdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBTKSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICghUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1wcmltaXRpdmUuanNcbi8vIG1vZHVsZSBpZCA9IDI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSAxMiAxMyAxNCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(7);\nvar document = __webpack_require__(1).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanM/MzhkZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDI4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSAxMiAxMyAxNCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28\n")},function(module,exports){eval("exports.f = {}.propertyIsEnumerable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1waWUuanM/MzY5MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjIiwiZmlsZSI6IjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXBpZS5qc1xuLy8gbW9kdWxlIGlkID0gMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n")},function(module,exports){eval('// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError("Can\'t call method on  " + it);\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RlZmluZWQuanM/ZTc2OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZWZpbmVkLmpzXG4vLyBtb2R1bGUgaWQgPSAzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///30\n')},function(module,exports){eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWludGVnZXIuanM/NTJlMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n")},function(module,exports,__webpack_require__){eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(30);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qcz9iMDFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1vYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///32\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__(47);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanM/Y2YwYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3R5cGVvZjIgPSByZXF1aXJlKFwiLi4vaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBfdHlwZW9mMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cGVvZjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc2VsZiwgY2FsbCkge1xuICBpZiAoIXNlbGYpIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gY2FsbCAmJiAoKHR5cGVvZiBjYWxsID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShjYWxsKSkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanNcbi8vIG1vZHVsZSBpZCA9IDMzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///33\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = __webpack_require__(93);\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = __webpack_require__(97);\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = __webpack_require__(47);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzLmpzPzNkZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9zZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpO1xuXG52YXIgX3NldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NldFByb3RvdHlwZU9mKTtcblxudmFyIF9jcmVhdGUgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlXCIpO1xuXG52YXIgX2NyZWF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGUpO1xuXG52YXIgX3R5cGVvZjIgPSByZXF1aXJlKFwiLi4vaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBfdHlwZW9mMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cGVvZjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgKHR5cGVvZiBzdXBlckNsYXNzID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShzdXBlckNsYXNzKSkpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gKDAsIF9jcmVhdGUyLmRlZmF1bHQpKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQgPyAoMCwgX3NldFByb3RvdHlwZU9mMi5kZWZhdWx0KShzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanNcbi8vIG1vZHVsZSBpZCA9IDM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///34\n')},function(module,exports,__webpack_require__){eval("var shared = __webpack_require__(36)('keys');\nvar uid = __webpack_require__(23);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC1rZXkuanM/NmIxZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCdrZXlzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHNoYXJlZFtrZXldIHx8IChzaGFyZWRba2V5XSA9IHVpZChrZXkpKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLWtleS5qc1xuLy8gbW9kdWxlIGlkID0gMzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///35\n")},function(module,exports,__webpack_require__){eval("var core = __webpack_require__(0);\nvar global = __webpack_require__(1);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(15) ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC5qcz83YmMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDs7QUFFbEQ7QUFDQSxxRUFBcUU7QUFDckUsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB7fSk7XG59KSgndmVyc2lvbnMnLCBbXSkucHVzaCh7XG4gIHZlcnNpb246IGNvcmUudmVyc2lvbixcbiAgbW9kZTogcmVxdWlyZSgnLi9fbGlicmFyeScpID8gJ3B1cmUnIDogJ2dsb2JhbCcsXG4gIGNvcHlyaWdodDogJ8KpIDIwMTggRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknXG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQuanNcbi8vIG1vZHVsZSBpZCA9IDM2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///36\n")},function(module,exports){eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanM/YzY3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanNcbi8vIG1vZHVsZSBpZCA9IDM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///37\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(9);\nvar dPs = __webpack_require__(72);\nvar enumBugKeys = __webpack_require__(37);\nvar IE_PROTO = __webpack_require__(35)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(28)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(56).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1jcmVhdGUuanM/NjI4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAzOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38\n")},function(module,exports,__webpack_require__){eval("module.exports = !__webpack_require__(4) && !__webpack_require__(13)(function () {\n  return Object.defineProperty(__webpack_require__(28)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzPzQ5ZjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxxRUFBc0UsbUJBQW1CLFVBQVUsRUFBRSxFQUFFO0FBQ3ZHLENBQUMiLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzXG4vLyBtb2R1bGUgaWQgPSAzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n")},function(module,exports,__webpack_require__){eval("exports.f = __webpack_require__(2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy1leHQuanM/MmExZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX3drcycpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy1leHQuanNcbi8vIG1vZHVsZSBpZCA9IDQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///40\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(1);\nvar core = __webpack_require__(0);\nvar LIBRARY = __webpack_require__(15);\nvar wksExt = __webpack_require__(40);\nvar defineProperty = __webpack_require__(8).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy1kZWZpbmUuanM/NzJiOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsc0JBQXNCO0FBQ2hGLGtGQUFrRix3QkFBd0I7QUFDMUciLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLWRlZmluZS5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///41\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(89), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzLmpzPzdkOTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSA0MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNSA2IDcgOSAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///42\n')},function(module,exports){eval("exports.f = Object.getOwnPropertySymbols;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BzLmpzP2Q2NDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BzLmpzXG4vLyBtb2R1bGUgaWQgPSA0M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///43\n")},function(module,exports,__webpack_require__){eval("// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(6);\nvar core = __webpack_require__(0);\nvar fails = __webpack_require__(13);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1zYXAuanM/YmFhNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxxREFBcUQsT0FBTyxFQUFFO0FBQzlEIiwiZmlsZSI6IjQ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjKSB7XG4gIHZhciBmbiA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXTtcbiAgdmFyIGV4cCA9IHt9O1xuICBleHBbS0VZXSA9IGV4ZWMoZm4pO1xuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXNhcC5qc1xuLy8gbW9kdWxlIGlkID0gNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///44\n")},function(module,exports,__webpack_require__){eval("var has = __webpack_require__(10);\nvar toIObject = __webpack_require__(12);\nvar arrayIndexOf = __webpack_require__(64)(false);\nvar IE_PROTO = __webpack_require__(35)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzPzIxYjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSU9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgaWYgKGtleSAhPSBJRV9QUk9UTykgaGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanNcbi8vIG1vZHVsZSBpZCA9IDQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///45\n")},function(module,exports,__webpack_require__){eval("var pIE = __webpack_require__(29);\nvar createDesc = __webpack_require__(16);\nvar toIObject = __webpack_require__(12);\nvar toPrimitive = __webpack_require__(27);\nvar has = __webpack_require__(10);\nvar IE8_DOM_DEFINE = __webpack_require__(39);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(4) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BkLmpzPzJjYTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsWUFBWTtBQUNmO0FBQ0EiLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wZC5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///46\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__(79);\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__(81);\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {\n  return typeof obj === "undefined" ? "undefined" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcz9hNDU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLGlIQUFpSCxtQkFBbUIsRUFBRSxtQkFBbUIsNEpBQTRKOztBQUVyVCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6IjQ3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfaXRlcmF0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3JcIik7XG5cbnZhciBfaXRlcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXRlcmF0b3IpO1xuXG52YXIgX3N5bWJvbCA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL3N5bWJvbFwiKTtcblxudmFyIF9zeW1ib2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3ltYm9sKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBfaXRlcmF0b3IyLmRlZmF1bHQgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mKF9pdGVyYXRvcjIuZGVmYXVsdCkgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IF9zeW1ib2wyLmRlZmF1bHQgJiYgb2JqICE9PSBfc3ltYm9sMi5kZWZhdWx0LnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qc1xuLy8gbW9kdWxlIGlkID0gNDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///47\n')},function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(15);\nvar $export = __webpack_require__(6);\nvar redefine = __webpack_require__(50);\nvar hide = __webpack_require__(11);\nvar Iterators = __webpack_require__(17);\nvar $iterCreate = __webpack_require__(71);\nvar setToStringTag = __webpack_require__(26);\nvar getPrototypeOf = __webpack_require__(53);\nvar ITERATOR = __webpack_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzP2JjODAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBOztBQUVBLDhCQUE4QixhQUFhOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLG9DQUFvQztBQUM3RSw2Q0FBNkMsb0NBQW9DO0FBQ2pGLEtBQUssNEJBQTRCLG9DQUFvQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0Esa0NBQWtDLDJCQUEyQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgJGl0ZXJDcmVhdGUgPSByZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEJVR0dZID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpOyAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG52YXIgRkZfSVRFUkFUT1IgPSAnQEBpdGVyYXRvcic7XG52YXIgS0VZUyA9ICdrZXlzJztcbnZhciBWQUxVRVMgPSAndmFsdWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpIHtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICBpZiAoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pIHJldHVybiBwcm90b1traW5kXTtcbiAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHID0gTkFNRSArICcgSXRlcmF0b3InO1xuICB2YXIgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTO1xuICB2YXIgVkFMVUVTX0JVRyA9IGZhbHNlO1xuICB2YXIgcHJvdG8gPSBCYXNlLnByb3RvdHlwZTtcbiAgdmFyICRuYXRpdmUgPSBwcm90b1tJVEVSQVRPUl0gfHwgcHJvdG9bRkZfSVRFUkFUT1JdIHx8IERFRkFVTFQgJiYgcHJvdG9bREVGQVVMVF07XG4gIHZhciAkZGVmYXVsdCA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpO1xuICB2YXIgJGVudHJpZXMgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkO1xuICB2YXIgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmU7XG4gIHZhciBtZXRob2RzLCBrZXksIEl0ZXJhdG9yUHJvdG90eXBlO1xuICAvLyBGaXggbmF0aXZlXG4gIGlmICgkYW55TmF0aXZlKSB7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UoKSkpO1xuICAgIGlmIChJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSAmJiBJdGVyYXRvclByb3RvdHlwZS5uZXh0KSB7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYgKCFMSUJSQVJZICYmIHR5cGVvZiBJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0gIT0gJ2Z1bmN0aW9uJykgaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpO1xuICAgIH1cbiAgfVxuICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGXG4gIGlmIChERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpIHtcbiAgICBWQUxVRVNfQlVHID0gdHJ1ZTtcbiAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTtcbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYgKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKSB7XG4gICAgaGlkZShwcm90bywgSVRFUkFUT1IsICRkZWZhdWx0KTtcbiAgfVxuICAvLyBQbHVnIGZvciBsaWJyYXJ5XG4gIEl0ZXJhdG9yc1tOQU1FXSA9ICRkZWZhdWx0O1xuICBJdGVyYXRvcnNbVEFHXSA9IHJldHVyblRoaXM7XG4gIGlmIChERUZBVUxUKSB7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKFZBTFVFUyksXG4gICAgICBrZXlzOiBJU19TRVQgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSBmb3IgKGtleSBpbiBtZXRob2RzKSB7XG4gICAgICBpZiAoIShrZXkgaW4gcHJvdG8pKSByZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzXG4vLyBtb2R1bGUgaWQgPSA0OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n")},function(module,exports,__webpack_require__){eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(31);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWxlbmd0aC5qcz80MTExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEIiwiZmlsZSI6IjQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzXG4vLyBtb2R1bGUgaWQgPSA0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///49\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(11);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLmpzP2YzY2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS5qc1xuLy8gbW9kdWxlIGlkID0gNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = __webpack_require__(24);\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX25ldy1wcm9taXNlLWNhcGFiaWxpdHkuanM/YTgwNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyAyNS40LjEuNSBOZXdQcm9taXNlQ2FwYWJpbGl0eShDKVxudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcblxuZnVuY3Rpb24gUHJvbWlzZUNhcGFiaWxpdHkoQykge1xuICB2YXIgcmVzb2x2ZSwgcmVqZWN0O1xuICB0aGlzLnByb21pc2UgPSBuZXcgQyhmdW5jdGlvbiAoJCRyZXNvbHZlLCAkJHJlamVjdCkge1xuICAgIGlmIChyZXNvbHZlICE9PSB1bmRlZmluZWQgfHwgcmVqZWN0ICE9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTtcbiAgICByZXNvbHZlID0gJCRyZXNvbHZlO1xuICAgIHJlamVjdCA9ICQkcmVqZWN0O1xuICB9KTtcbiAgdGhpcy5yZXNvbHZlID0gYUZ1bmN0aW9uKHJlc29sdmUpO1xuICB0aGlzLnJlamVjdCA9IGFGdW5jdGlvbihyZWplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gKEMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlQ2FwYWJpbGl0eShDKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbmV3LXByb21pc2UtY2FwYWJpbGl0eS5qc1xuLy8gbW9kdWxlIGlkID0gNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $at = __webpack_require__(70)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(48)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcz9jZDA0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixjQUFjO0FBQ2Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsQ0FBQyIsImZpbGUiOiI1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qc1xuLy8gbW9kdWxlIGlkID0gNTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///52\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(10);\nvar toObject = __webpack_require__(32);\nvar IE_PROTO = __webpack_require__(35)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanM/M2YzYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuOSAvIDE1LjIuMy4yIE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiAoTykge1xuICBPID0gdG9PYmplY3QoTyk7XG4gIGlmIChoYXMoTywgSUVfUFJPVE8pKSByZXR1cm4gT1tJRV9QUk9UT107XG4gIGlmICh0eXBlb2YgTy5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmIE8gaW5zdGFuY2VvZiBPLmNvbnN0cnVjdG9yKSB7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ3BvLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(73);\nvar global = __webpack_require__(1);\nvar hide = __webpack_require__(11);\nvar Iterators = __webpack_require__(17);\nvar TO_STRING_TAG = __webpack_require__(2)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcz9mYWQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgVE9fU1RSSU5HX1RBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG52YXIgRE9NSXRlcmFibGVzID0gKCdDU1NSdWxlTGlzdCxDU1NTdHlsZURlY2xhcmF0aW9uLENTU1ZhbHVlTGlzdCxDbGllbnRSZWN0TGlzdCxET01SZWN0TGlzdCxET01TdHJpbmdMaXN0LCcgK1xuICAnRE9NVG9rZW5MaXN0LERhdGFUcmFuc2Zlckl0ZW1MaXN0LEZpbGVMaXN0LEhUTUxBbGxDb2xsZWN0aW9uLEhUTUxDb2xsZWN0aW9uLEhUTUxGb3JtRWxlbWVudCxIVE1MU2VsZWN0RWxlbWVudCwnICtcbiAgJ01lZGlhTGlzdCxNaW1lVHlwZUFycmF5LE5hbWVkTm9kZU1hcCxOb2RlTGlzdCxQYWludFJlcXVlc3RMaXN0LFBsdWdpbixQbHVnaW5BcnJheSxTVkdMZW5ndGhMaXN0LFNWR051bWJlckxpc3QsJyArXG4gICdTVkdQYXRoU2VnTGlzdCxTVkdQb2ludExpc3QsU1ZHU3RyaW5nTGlzdCxTVkdUcmFuc2Zvcm1MaXN0LFNvdXJjZUJ1ZmZlckxpc3QsU3R5bGVTaGVldExpc3QsVGV4dFRyYWNrQ3VlTGlzdCwnICtcbiAgJ1RleHRUcmFja0xpc3QsVG91Y2hMaXN0Jykuc3BsaXQoJywnKTtcblxuZm9yICh2YXIgaSA9IDA7IGkgPCBET01JdGVyYWJsZXMubGVuZ3RoOyBpKyspIHtcbiAgdmFyIE5BTUUgPSBET01JdGVyYWJsZXNbaV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICBpZiAocHJvdG8gJiYgIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgSXRlcmF0b3JzW05BTUVdID0gSXRlcmF0b3JzLkFycmF5O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gNTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///54\n")},function(module,exports,__webpack_require__){eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(21);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lvYmplY3QuanM/MzE0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lvYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDU1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///55\n")},function(module,exports,__webpack_require__){eval("var document = __webpack_require__(1).document;\nmodule.exports = document && document.documentElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2h0bWwuanM/NDRmMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6IjU2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///56\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(45);\nvar hiddenKeys = __webpack_require__(37).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BuLmpzPzlmNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI1Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKS5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4uanNcbi8vIG1vZHVsZSBpZCA9IDU3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///57\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(76), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5LmpzPzlhZjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCIiwiZmlsZSI6IjU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5LmpzXG4vLyBtb2R1bGUgaWQgPSA1OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDEwIDEyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n')},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(61), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanM/MGI4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IiLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5LmpzXG4vLyBtb2R1bGUgaWQgPSA1OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n')},function(module,exports){eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///60\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(62);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanM/ZjViMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKSB7XG4gIHJldHVybiAkT2JqZWN0LmRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2MpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5LmpzXG4vLyBtb2R1bGUgaWQgPSA2MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTIgMTMgMTQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///61\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(6);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(4), 'Object', { defineProperty: __webpack_require__(8).f });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkuanM/OTgyOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0Esb0VBQXVFLDJDQUE0QyIsImZpbGUiOiI2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuNCAvIDE1LjIuMy42IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydHk6IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYgfSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDEyIDEzIDE0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///62\n")},function(module,exports,__webpack_require__){eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(21);\nvar TAG = __webpack_require__(2)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NsYXNzb2YuanM/NDU4ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrQkFBa0IsRUFBRTs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLFlBQVk7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2My5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldHRpbmcgdGFnIGZyb20gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG4vLyBFUzMgd3JvbmcgaGVyZVxudmFyIEFSRyA9IGNvZihmdW5jdGlvbiAoKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPT0gJ0FyZ3VtZW50cyc7XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIFNjcmlwdCBBY2Nlc3MgRGVuaWVkIGVycm9yXG52YXIgdHJ5R2V0ID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgTywgVCwgQjtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyAnVW5kZWZpbmVkJyA6IGl0ID09PSBudWxsID8gJ051bGwnXG4gICAgLy8gQEB0b1N0cmluZ1RhZyBjYXNlXG4gICAgOiB0eXBlb2YgKFQgPSB0cnlHZXQoTyA9IE9iamVjdChpdCksIFRBRykpID09ICdzdHJpbmcnID8gVFxuICAgIC8vIGJ1aWx0aW5UYWcgY2FzZVxuICAgIDogQVJHID8gY29mKE8pXG4gICAgLy8gRVMzIGFyZ3VtZW50cyBmYWxsYmFja1xuICAgIDogKEIgPSBjb2YoTykpID09ICdPYmplY3QnICYmIHR5cGVvZiBPLmNhbGxlZSA9PSAnZnVuY3Rpb24nID8gJ0FyZ3VtZW50cycgOiBCO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jbGFzc29mLmpzXG4vLyBtb2R1bGUgaWQgPSA2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///63\n")},function(module,exports,__webpack_require__){eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(12);\nvar toLength = __webpack_require__(49);\nvar toAbsoluteIndex = __webpack_require__(65);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzP2JjNTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxZQUFZLGVBQWU7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiI2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpO1xuICAgIHZhciB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgICBpZiAodmFsdWUgIT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSB7XG4gICAgICBpZiAoT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzXG4vLyBtb2R1bGUgaWQgPSA2NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///64\n")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(31);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWFic29sdXRlLWluZGV4LmpzPzdlNDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1hYnNvbHV0ZS1pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIDExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///65\n")},function(module,exports,__webpack_require__){eval("// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = __webpack_require__(9);\nvar aFunction = __webpack_require__(24);\nvar SPECIES = __webpack_require__(2)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanM/YjdjYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjMuMjAgU3BlY2llc0NvbnN0cnVjdG9yKE8sIGRlZmF1bHRDb25zdHJ1Y3RvcilcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIEQpIHtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvcjtcbiAgdmFyIFM7XG4gIHJldHVybiBDID09PSB1bmRlZmluZWQgfHwgKFMgPSBhbk9iamVjdChDKVtTUEVDSUVTXSkgPT0gdW5kZWZpbmVkID8gRCA6IGFGdW5jdGlvbihTKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc3BlY2llcy1jb25zdHJ1Y3Rvci5qc1xuLy8gbW9kdWxlIGlkID0gNjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///66\n")},function(module,exports,__webpack_require__){eval("var ctx = __webpack_require__(14);\nvar invoke = __webpack_require__(108);\nvar html = __webpack_require__(56);\nvar cel = __webpack_require__(28);\nvar global = __webpack_require__(1);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (__webpack_require__(21)(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Rhc2suanM/MmY4ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjY3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY2VsID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBzZXRUYXNrID0gZ2xvYmFsLnNldEltbWVkaWF0ZTtcbnZhciBjbGVhclRhc2sgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGU7XG52YXIgTWVzc2FnZUNoYW5uZWwgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWw7XG52YXIgRGlzcGF0Y2ggPSBnbG9iYWwuRGlzcGF0Y2g7XG52YXIgY291bnRlciA9IDA7XG52YXIgcXVldWUgPSB7fTtcbnZhciBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJztcbnZhciBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpZCA9ICt0aGlzO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gIGlmIChxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmICghc2V0VGFzayB8fCAhY2xlYXJUYXNrKSB7XG4gIHNldFRhc2sgPSBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoZm4pIHtcbiAgICB2YXIgYXJncyA9IFtdO1xuICAgIHZhciBpID0gMTtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcXVldWVbKytjb3VudGVyXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKSB7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmIChyZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2VzcycpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIFNwaGVyZSAoSlMgZ2FtZSBlbmdpbmUpIERpc3BhdGNoIEFQSVxuICB9IGVsc2UgaWYgKERpc3BhdGNoICYmIERpc3BhdGNoLm5vdykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBEaXNwYXRjaC5ub3coY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIH0gZWxzZSBpZiAoTWVzc2FnZUNoYW5uZWwpIHtcbiAgICBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgcG9ydCA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIgJiYgdHlwZW9mIHBvc3RNZXNzYWdlID09ICdmdW5jdGlvbicgJiYgIWdsb2JhbC5pbXBvcnRTY3JpcHRzKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShpZCArICcnLCAnKicpO1xuICAgIH07XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZiAoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0JykpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICBydW4uY2FsbChpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXRUYXNrLFxuICBjbGVhcjogY2xlYXJUYXNrXG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Rhc2suanNcbi8vIG1vZHVsZSBpZCA9IDY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n")},function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3BlcmZvcm0uanM/NzRkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLEdBQUc7QUFDSCxZQUFZO0FBQ1o7QUFDQSIsImZpbGUiOiI2OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4geyBlOiBmYWxzZSwgdjogZXhlYygpIH07XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4geyBlOiB0cnVlLCB2OiBlIH07XG4gIH1cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcGVyZm9ybS5qc1xuLy8gbW9kdWxlIGlkID0gNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///68\n")},function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(9);\nvar isObject = __webpack_require__(7);\nvar newPromiseCapability = __webpack_require__(51);\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Byb21pc2UtcmVzb2x2ZS5qcz83Yzk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjY5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQywgeCkge1xuICBhbk9iamVjdChDKTtcbiAgaWYgKGlzT2JqZWN0KHgpICYmIHguY29uc3RydWN0b3IgPT09IEMpIHJldHVybiB4O1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKEMpO1xuICB2YXIgcmVzb2x2ZSA9IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmU7XG4gIHJlc29sdmUoeCk7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9taXNlLXJlc29sdmUuanNcbi8vIG1vZHVsZSBpZCA9IDY5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///69\n")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(31);\nvar defined = __webpack_require__(30);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3N0cmluZy1hdC5qcz84N2FlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3N0cmluZy1hdC5qc1xuLy8gbW9kdWxlIGlkID0gNzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///70\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar create = __webpack_require__(38);\nvar descriptor = __webpack_require__(16);\nvar setToStringTag = __webpack_require__(26);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(11)(IteratorPrototype, __webpack_require__(2)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzP2Y3ODUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRGQUFrRixhQUFhLEVBQUU7O0FBRWpHO0FBQ0EscURBQXFELDRCQUE0QjtBQUNqRjtBQUNBIiwiZmlsZSI6IjcxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBkZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpIH0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDcxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///71\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(8);\nvar anObject = __webpack_require__(9);\nvar getKeys = __webpack_require__(20);\n\nmodule.exports = __webpack_require__(4) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcHMuanM/YWEyYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjcyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcHMuanNcbi8vIG1vZHVsZSBpZCA9IDcyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar addToUnscopables = __webpack_require__(74);\nvar step = __webpack_require__(75);\nvar Iterators = __webpack_require__(17);\nvar toIObject = __webpack_require__(12);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(48)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzP2M0NjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjczLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kXG4vLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIga2luZCA9IHRoaXMuX2s7XG4gIHZhciBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYgKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKSB7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIE9baW5kZXhdKTtcbiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pO1xufSwgJ3ZhbHVlcycpO1xuXG4vLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpXG5JdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvci5qc1xuLy8gbW9kdWxlIGlkID0gNzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///73\n")},function(module,exports){eval("module.exports = function () { /* empty */ };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qcz9lMjY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhCQUE4QiIsImZpbGUiOiI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qc1xuLy8gbW9kdWxlIGlkID0gNzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n")},function(module,exports){eval("module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItc3RlcC5qcz8xMDY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsVUFBVTtBQUNWIiwiZmlsZSI6Ijc1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZG9uZSwgdmFsdWUpIHtcbiAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmUgfTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1zdGVwLmpzXG4vLyBtb2R1bGUgaWQgPSA3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75\n")},function(module,exports,__webpack_require__){eval("var core = __webpack_require__(0);\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5LmpzP2FhNDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSx1Q0FBdUMsNEJBQTRCO0FBQ25FLHlDQUF5QztBQUN6QztBQUNBIiwiZmlsZSI6Ijc2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvcmUgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJyk7XG52YXIgJEpTT04gPSBjb3JlLkpTT04gfHwgKGNvcmUuSlNPTiA9IHsgc3RyaW5naWZ5OiBKU09OLnN0cmluZ2lmeSB9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgcmV0dXJuICRKU09OLnN0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJndW1lbnRzKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkuanNcbi8vIG1vZHVsZSBpZCA9IDc2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggMTAgMTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///76\n")},function(module,exports,__webpack_require__){eval("var META = __webpack_require__(23)('meta');\nvar isObject = __webpack_require__(7);\nvar has = __webpack_require__(10);\nvar setDesc = __webpack_require__(8).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(13)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX21ldGEuanM/ZDNhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsQ0FBQztBQUNEO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsU0FBUztBQUNULEdBQUcsRUFBRTtBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBNRVRBID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHNldERlc2MgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGlkID0gMDtcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlIHx8IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRydWU7XG59O1xudmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xudmFyIHNldE1ldGEgPSBmdW5jdGlvbiAoaXQpIHtcbiAgc2V0RGVzYyhpdCwgTUVUQSwgeyB2YWx1ZToge1xuICAgIGk6ICdPJyArICsraWQsIC8vIG9iamVjdCBJRFxuICAgIHc6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gfSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICAvLyByZXR1cm4gcHJpbWl0aXZlIHdpdGggcHJlZml4XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnID8gaXQgOiAodHlwZW9mIGl0ID09ICdzdHJpbmcnID8gJ1MnIDogJ1AnKSArIGl0O1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuICdGJztcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gJ0UnO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQV0uaTtcbn07XG52YXIgZ2V0V2VhayA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKSBzZXRNZXRhKGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciBtZXRhID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIEtFWTogTUVUQSxcbiAgTkVFRDogZmFsc2UsXG4gIGZhc3RLZXk6IGZhc3RLZXksXG4gIGdldFdlYWs6IGdldFdlYWssXG4gIG9uRnJlZXplOiBvbkZyZWV6ZVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19tZXRhLmpzXG4vLyBtb2R1bGUgaWQgPSA3N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///77\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(119), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9hc3NpZ24uanM/YzI4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IiLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2Fzc2lnblwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduLmpzXG4vLyBtb2R1bGUgaWQgPSA3OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgOSAxMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///78\n')},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(80), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbC9pdGVyYXRvci5qcz82NzM4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQiIsImZpbGUiOiI3OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSA3OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79\n')},function(module,exports,__webpack_require__){eval("__webpack_require__(52);\n__webpack_require__(54);\nmodule.exports = __webpack_require__(40).f('iterator');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvci5qcz9mZTdlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsImZpbGUiOiI4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX3drcy1leHQnKS5mKCdpdGVyYXRvcicpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvci5qc1xuLy8gbW9kdWxlIGlkID0gODBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///80\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(82), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbC5qcz9lNTA1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQiIsImZpbGUiOiI4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2xcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sLmpzXG4vLyBtb2R1bGUgaWQgPSA4MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///81\n')},function(module,exports,__webpack_require__){eval("__webpack_require__(83);\n__webpack_require__(60);\n__webpack_require__(87);\n__webpack_require__(88);\nmodule.exports = __webpack_require__(0).Symbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pbmRleC5qcz8wNzA3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5zeW1ib2wnKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlN5bWJvbDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDgyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///82\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(1);\nvar has = __webpack_require__(10);\nvar DESCRIPTORS = __webpack_require__(4);\nvar $export = __webpack_require__(6);\nvar redefine = __webpack_require__(50);\nvar META = __webpack_require__(77).KEY;\nvar $fails = __webpack_require__(13);\nvar shared = __webpack_require__(36);\nvar setToStringTag = __webpack_require__(26);\nvar uid = __webpack_require__(23);\nvar wks = __webpack_require__(2);\nvar wksExt = __webpack_require__(40);\nvar wksDefine = __webpack_require__(41);\nvar enumKeys = __webpack_require__(84);\nvar isArray = __webpack_require__(85);\nvar anObject = __webpack_require__(9);\nvar isObject = __webpack_require__(7);\nvar toIObject = __webpack_require__(12);\nvar toPrimitive = __webpack_require__(27);\nvar createDesc = __webpack_require__(16);\nvar _create = __webpack_require__(38);\nvar gOPNExt = __webpack_require__(86);\nvar $GOPD = __webpack_require__(46);\nvar $DP = __webpack_require__(8);\nvar $keys = __webpack_require__(20);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(57).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(29).f = $propertyIsEnumerable;\n  __webpack_require__(43).f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(15)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(11)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN5bWJvbC5qcz83ZDY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsc0JBQXNCLHVCQUF1QixXQUFXLElBQUk7QUFDNUQsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSxzQkFBc0IsbUNBQW1DO0FBQ3pELEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxnQ0FBZ0M7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBEQUEwRCxrQkFBa0I7O0FBRTVFO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1QkFBdUI7O0FBRTNDLG9EQUFvRCw2QkFBNkI7O0FBRWpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCwwQkFBMEIsZUFBZSxFQUFFO0FBQzNDLDBCQUEwQixnQkFBZ0I7QUFDMUMsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELE9BQU8sUUFBUSxpQ0FBaUM7QUFDcEcsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4My5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIEVDTUFTY3JpcHQgNiBzeW1ib2xzIHNoaW1cbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBNRVRBID0gcmVxdWlyZSgnLi9fbWV0YScpLktFWTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciB3a3NFeHQgPSByZXF1aXJlKCcuL193a3MtZXh0Jyk7XG52YXIgd2tzRGVmaW5lID0gcmVxdWlyZSgnLi9fd2tzLWRlZmluZScpO1xudmFyIGVudW1LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1rZXlzJyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBnT1BORXh0ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0Jyk7XG52YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BEID0gJEdPUEQuZjtcbnZhciBkUCA9ICREUC5mO1xudmFyIGdPUE4gPSBnT1BORXh0LmY7XG52YXIgJFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgJEpTT04gPSBnbG9iYWwuSlNPTjtcbnZhciBfc3RyaW5naWZ5ID0gJEpTT04gJiYgJEpTT04uc3RyaW5naWZ5O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIEhJRERFTiA9IHdrcygnX2hpZGRlbicpO1xudmFyIFRPX1BSSU1JVElWRSA9IHdrcygndG9QcmltaXRpdmUnKTtcbnZhciBpc0VudW0gPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBTeW1ib2xSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXJlZ2lzdHJ5Jyk7XG52YXIgQWxsU3ltYm9scyA9IHNoYXJlZCgnc3ltYm9scycpO1xudmFyIE9QU3ltYm9scyA9IHNoYXJlZCgnb3Atc3ltYm9scycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0W1BST1RPVFlQRV07XG52YXIgVVNFX05BVElWRSA9IHR5cGVvZiAkU3ltYm9sID09ICdmdW5jdGlvbic7XG52YXIgUU9iamVjdCA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRQKHRoaXMsICdhJywgeyB2YWx1ZTogNyB9KS5hOyB9XG4gIH0pKS5hICE9IDc7XG59KSA/IGZ1bmN0aW9uIChpdCwga2V5LCBEKSB7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZiAocHJvdG9EZXNjKSBkZWxldGUgT2JqZWN0UHJvdG9ba2V5XTtcbiAgZFAoaXQsIGtleSwgRCk7XG4gIGlmIChwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKSBkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpO1xufSA6IGRQO1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpIHtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90bykgJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTtcbiAgYW5PYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBhbk9iamVjdChEKTtcbiAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFELmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzKGl0LCBISURERU4pKSBkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7XG4gICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkgaXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7IGVudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpIH0pO1xuICAgIH0gcmV0dXJuIHNldFN5bWJvbERlc2MoaXQsIGtleSwgRCk7XG4gIH0gcmV0dXJuIGRQKGl0LCBrZXksIEQpO1xufTtcbnZhciAkZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoaXQsIFApIHtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpO1xuICB2YXIgaSA9IDA7XG4gIHZhciBsID0ga2V5cy5sZW5ndGg7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChsID4gaSkgJGRlZmluZVByb3BlcnR5KGl0LCBrZXkgPSBrZXlzW2krK10sIFBba2V5XSk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgJGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpdCwgUCkge1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkge1xuICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpO1xuICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgaXQgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBEID0gZ09QRChpdCwga2V5KTtcbiAgaWYgKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSkgRC5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgcmV0dXJuIEQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICB2YXIgbmFtZXMgPSBnT1BOKHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoIWhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiBrZXkgIT0gSElEREVOICYmIGtleSAhPSBNRVRBKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgdmFyIElTX09QID0gaXQgPT09IE9iamVjdFByb3RvO1xuICB2YXIgbmFtZXMgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmIChoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpIHJlc3VsdC5wdXNoKEFsbFN5bWJvbHNba2V5XSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIDE5LjQuMS4xIFN5bWJvbChbZGVzY3JpcHRpb25dKVxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgaWYgKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKSB0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTtcbiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvKSAkc2V0LmNhbGwoT1BTeW1ib2xzLCB2YWx1ZSk7XG4gICAgICBpZiAoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSkgdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTtcbiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG4gICAgfTtcbiAgICBpZiAoREVTQ1JJUFRPUlMgJiYgc2V0dGVyKSBzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXQgfSk7XG4gICAgcmV0dXJuIHdyYXAodGFnKTtcbiAgfTtcbiAgcmVkZWZpbmUoJFN5bWJvbFtQUk9UT1RZUEVdLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mID0gJGRlZmluZVByb3BlcnR5O1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJykuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5JykpIHtcbiAgICByZWRlZmluZShPYmplY3RQcm90bywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJHByb3BlcnR5SXNFbnVtZXJhYmxlLCB0cnVlKTtcbiAgfVxuXG4gIHdrc0V4dC5mID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFN5bWJvbDogJFN5bWJvbCB9KTtcblxuZm9yICh2YXIgZXM2U3ltYm9scyA9IChcbiAgLy8gMTkuNC4yLjIsIDE5LjQuMi4zLCAxOS40LjIuNCwgMTkuNC4yLjYsIDE5LjQuMi44LCAxOS40LjIuOSwgMTkuNC4yLjEwLCAxOS40LjIuMTEsIDE5LjQuMi4xMiwgMTkuNC4yLjEzLCAxOS40LjIuMTRcbiAgJ2hhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzJ1xuKS5zcGxpdCgnLCcpLCBqID0gMDsgZXM2U3ltYm9scy5sZW5ndGggPiBqOyl3a3MoZXM2U3ltYm9sc1tqKytdKTtcblxuZm9yICh2YXIgd2VsbEtub3duU3ltYm9scyA9ICRrZXlzKHdrcy5zdG9yZSksIGsgPSAwOyB3ZWxsS25vd25TeW1ib2xzLmxlbmd0aCA+IGs7KSB3a3NEZWZpbmUod2VsbEtub3duU3ltYm9sc1trKytdKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ1N5bWJvbCcsIHtcbiAgLy8gMTkuNC4yLjEgU3ltYm9sLmZvcihrZXkpXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgICBmb3IgKHZhciBrZXkgaW4gU3ltYm9sUmVnaXN0cnkpIGlmIChTeW1ib2xSZWdpc3RyeVtrZXldID09PSBzeW0pIHJldHVybiBrZXk7XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgUyA9ICRTeW1ib2woKTtcbiAgLy8gTVMgRWRnZSBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMge31cbiAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gIHJldHVybiBfc3RyaW5naWZ5KFtTXSkgIT0gJ1tudWxsXScgfHwgX3N0cmluZ2lmeSh7IGE6IFMgfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9Jztcbn0pKSwgJ0pTT04nLCB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7XG4gICAgdmFyIGFyZ3MgPSBbaXRdO1xuICAgIHZhciBpID0gMTtcbiAgICB2YXIgcmVwbGFjZXIsICRyZXBsYWNlcjtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgJHJlcGxhY2VyID0gcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmICghaXNPYmplY3QocmVwbGFjZXIpICYmIGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICBpZiAoIWlzQXJyYXkocmVwbGFjZXIpKSByZXBsYWNlciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mICRyZXBsYWNlciA9PSAnZnVuY3Rpb24nKSB2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYgKCFpc1N5bWJvbCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIGFyZ3NbMV0gPSByZXBsYWNlcjtcbiAgICByZXR1cm4gX3N0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJncyk7XG4gIH1cbn0pO1xuXG4vLyAxOS40LjMuNCBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdKGhpbnQpXG4kU3ltYm9sW1BST1RPVFlQRV1bVE9fUFJJTUlUSVZFXSB8fCByZXF1aXJlKCcuL19oaWRlJykoJFN5bWJvbFtQUk9UT1RZUEVdLCBUT19QUklNSVRJVkUsICRTeW1ib2xbUFJPVE9UWVBFXS52YWx1ZU9mKTtcbi8vIDE5LjQuMy41IFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKCRTeW1ib2wsICdTeW1ib2wnKTtcbi8vIDIwLjIuMS45IE1hdGhbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKE1hdGgsICdNYXRoJywgdHJ1ZSk7XG4vLyAyNC4zLjMgSlNPTltAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoZ2xvYmFsLkpTT04sICdKU09OJywgdHJ1ZSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3ltYm9sLmpzXG4vLyBtb2R1bGUgaWQgPSA4M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///83\n")},function(module,exports,__webpack_require__){eval("// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(20);\nvar gOPS = __webpack_require__(43);\nvar pIE = __webpack_require__(29);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0ta2V5cy5qcz81ZGNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ijg0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gZ2V0S2V5cyhpdCk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZiAoZ2V0U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCk7XG4gICAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChzeW1ib2xzLmxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWtleXMuanNcbi8vIG1vZHVsZSBpZCA9IDg0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///84\n")},function(module,exports,__webpack_require__){eval("// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(21);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLWFycmF5LmpzP2VkNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLWFycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSA4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///85\n")},function(module,exports,__webpack_require__){eval("// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(12);\nvar gOPN = __webpack_require__(57).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BuLWV4dC5qcz80NmI3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI4Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdPUE4oaXQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BuLWV4dC5qc1xuLy8gbW9kdWxlIGlkID0gODZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///86\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(41)('asyncIterator');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvci5qcz8zOTg5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijg3LmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSA4N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///87\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(41)('observable');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlLmpzPzQxNjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiODguanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ29ic2VydmFibGUnKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gODhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///88\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(90);\nmodule.exports = __webpack_require__(0).Object.keys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzLmpzPzhjNTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsImZpbGUiOiI4OS5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Qua2V5cztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cy5qc1xuLy8gbW9kdWxlIGlkID0gODlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDUgNiA3IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///89\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(32);\nvar $keys = __webpack_require__(20);\n\n__webpack_require__(44)('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzLmpzPzA5ZGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiI5MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xNCBPYmplY3Qua2V5cyhPKVxudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2tleXMnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBrZXlzKGl0KSB7XG4gICAgcmV0dXJuICRrZXlzKHRvT2JqZWN0KGl0KSk7XG4gIH07XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qc1xuLy8gbW9kdWxlIGlkID0gOTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDUgNiA3IDkgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///90\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(92);\nmodule.exports = __webpack_require__(0).Object.getPrototypeOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzPzdkMmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsImZpbGUiOiI5MS5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDkxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///91\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = __webpack_require__(32);\nvar $getPrototypeOf = __webpack_require__(53);\n\n__webpack_require__(44)('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mLmpzPzJhMWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiI5Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi45IE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgJGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldFByb3RvdHlwZU9mJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvdG90eXBlT2YoaXQpIHtcbiAgICByZXR1cm4gJGdldFByb3RvdHlwZU9mKHRvT2JqZWN0KGl0KSk7XG4gIH07XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZi5qc1xuLy8gbW9kdWxlIGlkID0gOTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///92\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(94), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzPzkyMjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCIiwiZmlsZSI6IjkzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSA5M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///93\n')},function(module,exports,__webpack_require__){eval("__webpack_require__(95);\nmodule.exports = __webpack_require__(0).Object.setPrototypeOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzPzhiZjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsImZpbGUiOiI5NC5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Quc2V0UHJvdG90eXBlT2Y7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDk0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///94\n")},function(module,exports,__webpack_require__){eval("// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(6);\n$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(96).set });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzPzdiMTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLDhCQUE4Qiw4Q0FBOEMiLCJmaWxlIjoiOTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSA5NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///95\n")},function(module,exports,__webpack_require__){eval("// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(7);\nvar anObject = __webpack_require__(9);\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__(14)(Function.call, __webpack_require__(46).f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC1wcm90by5qcz82NWE0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxZQUFZLGNBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHO0FBQ1I7QUFDQSIsImZpbGUiOiI5Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgY2hlY2sgPSBmdW5jdGlvbiAoTywgcHJvdG8pIHtcbiAgYW5PYmplY3QoTyk7XG4gIGlmICghaXNPYmplY3QocHJvdG8pICYmIHByb3RvICE9PSBudWxsKSB0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbiAodGVzdCwgYnVnZ3ksIHNldCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0ID0gcmVxdWlyZSgnLi9fY3R4JykoRnVuY3Rpb24uY2FsbCwgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mKE9iamVjdC5wcm90b3R5cGUsICdfX3Byb3RvX18nKS5zZXQsIDIpO1xuICAgICAgICBzZXQodGVzdCwgW10pO1xuICAgICAgICBidWdneSA9ICEodGVzdCBpbnN0YW5jZW9mIEFycmF5KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pIHtcbiAgICAgICAgY2hlY2soTywgcHJvdG8pO1xuICAgICAgICBpZiAoYnVnZ3kpIE8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtcHJvdG8uanNcbi8vIG1vZHVsZSBpZCA9IDk2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///96\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(98), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUuanM/M2FmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IiLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA5N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///97\n')},function(module,exports,__webpack_require__){eval("__webpack_require__(99);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUuanM/YTBjZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ijk4LmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGUoUCwgRCkge1xuICByZXR1cm4gJE9iamVjdC5jcmVhdGUoUCwgRCk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDk4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///98\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(6);\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: __webpack_require__(38) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUuanM/YjA1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFzQyIsImZpbGUiOiI5OS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBjcmVhdGU6IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKSB9KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA5OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///99\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getPrototypeOf = __webpack_require__(25);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _getOwnPropertyDescriptor = __webpack_require__(125);\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);\n\n  if (desc === undefined) {\n    var parent = (0, _getPrototypeOf2.default)(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if ("value" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldC5qcz9jODRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9nZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTtcblxudmFyIF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpO1xuXG52YXIgX2dldE93blByb3BlcnR5RGVzY3JpcHRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuICB2YXIgZGVzYyA9ICgwLCBfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yMi5kZWZhdWx0KShvYmplY3QsIHByb3BlcnR5KTtcblxuICBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHBhcmVudCA9ICgwLCBfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKG9iamVjdCk7XG5cbiAgICBpZiAocGFyZW50ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHtcbiAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7XG5cbiAgICBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAxMDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///100\n')},function(module,exports,__webpack_require__){eval("var classof = __webpack_require__(63);\nvar ITERATOR = __webpack_require__(2)('iterator');\nvar Iterators = __webpack_require__(17);\nmodule.exports = __webpack_require__(0).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzP2RkZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ICE9IHVuZGVmaW5lZCkgcmV0dXJuIGl0W0lURVJBVE9SXVxuICAgIHx8IGl0WydAQGl0ZXJhdG9yJ11cbiAgICB8fCBJdGVyYXRvcnNbY2xhc3NvZihpdCldO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qc1xuLy8gbW9kdWxlIGlkID0gMTAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///101\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(60);\n__webpack_require__(52);\n__webpack_require__(54);\n__webpack_require__(103);\n__webpack_require__(114);\n__webpack_require__(115);\nmodule.exports = __webpack_require__(0).Promise;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UuanM/NTM5OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5wcm9taXNlLnRyeScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJykuUHJvbWlzZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///102\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(15);\nvar global = __webpack_require__(1);\nvar ctx = __webpack_require__(14);\nvar classof = __webpack_require__(63);\nvar $export = __webpack_require__(6);\nvar isObject = __webpack_require__(7);\nvar aFunction = __webpack_require__(24);\nvar anInstance = __webpack_require__(104);\nvar forOf = __webpack_require__(105);\nvar speciesConstructor = __webpack_require__(66);\nvar task = __webpack_require__(67).set;\nvar microtask = __webpack_require__(109)();\nvar newPromiseCapabilityModule = __webpack_require__(51);\nvar perform = __webpack_require__(68);\nvar userAgent = __webpack_require__(110);\nvar promiseResolve = __webpack_require__(69);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__webpack_require__(2)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = __webpack_require__(111)($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__webpack_require__(26)($Promise, PROMISE);\n__webpack_require__(112)(PROMISE);\nWrapper = __webpack_require__(0)[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(113)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///103\n")},function(module,exports){eval("module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FuLWluc3RhbmNlLmpzP2Q4YWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6IjEwNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpIHtcbiAgaWYgKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FuLWluc3RhbmNlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///104\n")},function(module,exports,__webpack_require__){eval("var ctx = __webpack_require__(14);\nvar call = __webpack_require__(106);\nvar isArrayIter = __webpack_require__(107);\nvar anObject = __webpack_require__(9);\nvar toLength = __webpack_require__(49);\nvar getIterFn = __webpack_require__(101);\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Zvci1vZi5qcz8zNTZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxpQkFBaUIsRUFBRTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0EsR0FBRyw0Q0FBNEMsZ0NBQWdDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Zvci1vZi5qc1xuLy8gbW9kdWxlIGlkID0gMTA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///105\n")},function(module,exports,__webpack_require__){eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(9);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY2FsbC5qcz85YWM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEwNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3JcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcykge1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkgYW5PYmplY3QocmV0LmNhbGwoaXRlcmF0b3IpKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY2FsbC5qc1xuLy8gbW9kdWxlIGlkID0gMTA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///106\n")},function(module,exports,__webpack_require__){eval("// check on default Array iterator\nvar Iterators = __webpack_require__(17);\nvar ITERATOR = __webpack_require__(2)('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLWFycmF5LWl0ZXIuanM/MzIxYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTA3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qc1xuLy8gbW9kdWxlIGlkID0gMTA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///107\n")},function(module,exports){eval("// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ludm9rZS5qcz85MjdiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiMTA4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgYXJncywgdGhhdCkge1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiB1biA/IGZuKClcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCk7XG4gICAgY2FzZSAxOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgY2FzZSA0OiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgfSByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJncyk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ludm9rZS5qc1xuLy8gbW9kdWxlIGlkID0gMTA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///108\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(1);\nvar macrotask = __webpack_require__(67).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __webpack_require__(21)(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX21pY3JvdGFzay5qcz9mMzYzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHVDQUF1QyxzQkFBc0IsRUFBRTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiIxMDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbWFjcm90YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBPYnNlcnZlciA9IGdsb2JhbC5NdXRhdGlvbk9ic2VydmVyIHx8IGdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBQcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhlYWQsIGxhc3QsIG5vdGlmeTtcblxuICB2YXIgZmx1c2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBhcmVudCwgZm47XG4gICAgaWYgKGlzTm9kZSAmJiAocGFyZW50ID0gcHJvY2Vzcy5kb21haW4pKSBwYXJlbnQuZXhpdCgpO1xuICAgIHdoaWxlIChoZWFkKSB7XG4gICAgICBmbiA9IGhlYWQuZm47XG4gICAgICBoZWFkID0gaGVhZC5uZXh0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZm4oKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGhlYWQpIG5vdGlmeSgpO1xuICAgICAgICBlbHNlIGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5lbnRlcigpO1xuICB9O1xuXG4gIC8vIE5vZGUuanNcbiAgaWYgKGlzTm9kZSkge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpO1xuICAgIH07XG4gIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlciwgZXhjZXB0IGlPUyBTYWZhcmkgLSBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMzM5XG4gIH0gZWxzZSBpZiAoT2JzZXJ2ZXIgJiYgIShnbG9iYWwubmF2aWdhdG9yICYmIGdsb2JhbC5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSkpIHtcbiAgICB2YXIgdG9nZ2xlID0gdHJ1ZTtcbiAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwgeyBjaGFyYWN0ZXJEYXRhOiB0cnVlIH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIG5vZGUuZGF0YSA9IHRvZ2dsZSA9ICF0b2dnbGU7XG4gICAgfTtcbiAgLy8gZW52aXJvbm1lbnRzIHdpdGggbWF5YmUgbm9uLWNvbXBsZXRlbHkgY29ycmVjdCwgYnV0IGV4aXN0ZW50IFByb21pc2VcbiAgfSBlbHNlIGlmIChQcm9taXNlICYmIFByb21pc2UucmVzb2x2ZSkge1xuICAgIC8vIFByb21pc2UucmVzb2x2ZSB3aXRob3V0IGFuIGFyZ3VtZW50IHRocm93cyBhbiBlcnJvciBpbiBMRyBXZWJPUyAyXG4gICAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9taXNlLnRoZW4oZmx1c2gpO1xuICAgIH07XG4gIC8vIGZvciBvdGhlciBlbnZpcm9ubWVudHMgLSBtYWNyb3Rhc2sgYmFzZWQgb246XG4gIC8vIC0gc2V0SW1tZWRpYXRlXG4gIC8vIC0gTWVzc2FnZUNoYW5uZWxcbiAgLy8gLSB3aW5kb3cucG9zdE1lc3NhZ1xuICAvLyAtIG9ucmVhZHlzdGF0ZWNoYW5nZVxuICAvLyAtIHNldFRpbWVvdXRcbiAgfSBlbHNlIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBzdHJhbmdlIElFICsgd2VicGFjayBkZXYgc2VydmVyIGJ1ZyAtIHVzZSAuY2FsbChnbG9iYWwpXG4gICAgICBtYWNyb3Rhc2suY2FsbChnbG9iYWwsIGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChmbikge1xuICAgIHZhciB0YXNrID0geyBmbjogZm4sIG5leHQ6IHVuZGVmaW5lZCB9O1xuICAgIGlmIChsYXN0KSBsYXN0Lm5leHQgPSB0YXNrO1xuICAgIGlmICghaGVhZCkge1xuICAgICAgaGVhZCA9IHRhc2s7XG4gICAgICBub3RpZnkoKTtcbiAgICB9IGxhc3QgPSB0YXNrO1xuICB9O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19taWNyb3Rhc2suanNcbi8vIG1vZHVsZSBpZCA9IDEwOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///109\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(1);\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VzZXItYWdlbnQuanM/ODk0NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBIiwiZmlsZSI6IjExMC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBuYXZpZ2F0b3IgPSBnbG9iYWwubmF2aWdhdG9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdmlnYXRvciAmJiBuYXZpZ2F0b3IudXNlckFnZW50IHx8ICcnO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VzZXItYWdlbnQuanNcbi8vIG1vZHVsZSBpZCA9IDExMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgMTAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///110\n")},function(module,exports,__webpack_require__){eval("var hide = __webpack_require__(11);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcz9jNDdmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiMTExLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNyYywgc2FmZSkge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgaWYgKHNhZmUgJiYgdGFyZ2V0W2tleV0pIHRhcmdldFtrZXldID0gc3JjW2tleV07XG4gICAgZWxzZSBoaWRlKHRhcmdldCwga2V5LCBzcmNba2V5XSk7XG4gIH0gcmV0dXJuIHRhcmdldDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcmVkZWZpbmUtYWxsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///111\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar global = __webpack_require__(1);\nvar core = __webpack_require__(0);\nvar dP = __webpack_require__(8);\nvar DESCRIPTORS = __webpack_require__(4);\nvar SPECIES = __webpack_require__(2)('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC1zcGVjaWVzLmpzPzZkMWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGFBQWE7QUFDbkMsR0FBRztBQUNIIiwiZmlsZSI6IjExMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSB0eXBlb2YgY29yZVtLRVldID09ICdmdW5jdGlvbicgPyBjb3JlW0tFWV0gOiBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC1zcGVjaWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///112\n")},function(module,exports,__webpack_require__){eval("var ITERATOR = __webpack_require__(2)('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGV0ZWN0LmpzPzc1OGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDLHFCQUFxQjtBQUN0RDtBQUNBLGlDQUFpQyxTQUFTLEVBQUU7QUFDNUMsQ0FBQyxZQUFZOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixTQUFTLHFCQUFxQjtBQUMzRCxpQ0FBaUMsYUFBYTtBQUM5QztBQUNBLEdBQUcsWUFBWTtBQUNmO0FBQ0EiLCJmaWxlIjoiMTEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgU0FGRV9DTE9TSU5HID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTtcbiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24gKCkgeyBTQUZFX0NMT1NJTkcgPSB0cnVlOyB9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICBBcnJheS5mcm9tKHJpdGVyLCBmdW5jdGlvbiAoKSB7IHRocm93IDI7IH0pO1xufSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMsIHNraXBDbG9zaW5nKSB7XG4gIGlmICghc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgPSBbN107XG4gICAgdmFyIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4geyBkb25lOiBzYWZlID0gdHJ1ZSB9OyB9O1xuICAgIGFycltJVEVSQVRPUl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBzYWZlO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRldGVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMTEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///113\n")},function(module,exports,__webpack_require__){"use strict";eval("// https://github.com/tc39/proposal-promise-finally\n\nvar $export = __webpack_require__(6);\nvar core = __webpack_require__(0);\nvar global = __webpack_require__(1);\nvar speciesConstructor = __webpack_require__(66);\nvar promiseResolve = __webpack_require__(69);\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseS5qcz8xMmEwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxVQUFVLEVBQUU7QUFDMUUsS0FBSztBQUNMO0FBQ0EsOERBQThELFNBQVMsRUFBRTtBQUN6RSxLQUFLO0FBQ0w7QUFDQSxDQUFDLEVBQUUiLCJmaWxlIjoiMTE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS1maW5hbGx5XG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnUHJvbWlzZScsIHsgJ2ZpbmFsbHknOiBmdW5jdGlvbiAob25GaW5hbGx5KSB7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsIGNvcmUuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZSk7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIG9uRmluYWxseSA9PSAnZnVuY3Rpb24nO1xuICByZXR1cm4gdGhpcy50aGVuKFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoeCkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHksXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyB0aHJvdyBlOyB9KTtcbiAgICB9IDogb25GaW5hbGx5XG4gICk7XG59IH0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseS5qc1xuLy8gbW9kdWxlIGlkID0gMTE0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///114\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/tc39/proposal-promise-try\nvar $export = __webpack_require__(6);\nvar newPromiseCapability = __webpack_require__(51);\nvar perform = __webpack_require__(68);\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UudHJ5LmpzPzhjYTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUUiLCJmaWxlIjoiMTE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS10cnlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG52YXIgcGVyZm9ybSA9IHJlcXVpcmUoJy4vX3BlcmZvcm0nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdQcm9taXNlJywgeyAndHJ5JzogZnVuY3Rpb24gKGNhbGxiYWNrZm4pIHtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZih0aGlzKTtcbiAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oY2FsbGJhY2tmbik7XG4gIChyZXN1bHQuZSA/IHByb21pc2VDYXBhYmlsaXR5LnJlamVjdCA6IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmUpKHJlc3VsdC52KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59IH0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnByb21pc2UudHJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAxMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///115\n")},,function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectType = exports.ChangeType = undefined;\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\n__webpack_require__(123);\n\nvar _utils = __webpack_require__(19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar objectType = { ARRAY: '[object Array]', OBJECT: '[object Object]' };\n\n/**\r\n * @access private\r\n * Main class that maintains a JSON object, and observes changes in this object, recursively.\r\n * Internal objects and arrays are also observed.\r\n */\n\nvar SyncObject = function () {\n  function SyncObject(initialData) {\n    (0, _classCallCheck3.default)(this, SyncObject);\n\n    var _this = this;\n\n    _this._observers = [];\n    _this._filters = {};\n\n    this._data = initialData || {};\n\n    this._internalObserve(this._data);\n  }\n\n  (0, _createClass3.default)(SyncObject, [{\n    key: 'observe',\n    value: function observe(callback) {\n      this._observers.push(callback);\n    }\n  }, {\n    key: 'find',\n    value: function find(path) {\n      var list = (0, _utils.parseAttributes)(path);\n\n      return this._findWithSplit(list);\n    }\n  }, {\n    key: 'findBefore',\n    value: function findBefore(path) {\n      var result = {};\n      var list = (0, _utils.parseAttributes)(path);\n      result.last = list.pop();\n      result.obj = this._findWithSplit(list);\n\n      return result;\n    }\n  }, {\n    key: '_findWithSplit',\n    value: function _findWithSplit(list) {\n      var obj = this._data;\n      list.forEach(function (value) {\n        obj = obj[value];\n      });\n\n      return obj;\n    }\n  }, {\n    key: '_internalObserve',\n    value: function _internalObserve(object) {\n      var _this2 = this;\n\n      var handler = function handler(changeset) {\n\n        changeset.every(function (change) {\n          _this2._onChanges(change);\n        });\n      };\n\n      this._data = Object.deepObserve(object, handler);\n    }\n  }, {\n    key: '_fireEvent',\n    value: function _fireEvent(event) {\n      this._observers.forEach(function (callback) {\n        callback(event);\n      });\n    }\n  }, {\n    key: '_onChanges',\n    value: function _onChanges(change) {\n\n      var obj = change.object;\n      var objType = void 0;\n\n      if (obj.constructor === Object) {\n        objType = ObjectType.OBJECT;\n      }\n\n      if (obj.constructor === Array) {\n        objType = ObjectType.ARRAY;\n      }\n\n      var fieldString = change.keypath;\n\n      // console.log('Field:', fieldString);\n      // console.log('type:', change.type);\n\n      //let oldValue = change.oldValue;\n      var newValue = obj[change.name];\n\n      // console.info(change.type + ' | Field: ' + fieldString + ' | New Value:', JSON.stringify(newValue), fieldString.includes('length'));\n\n      if (change.type === 'update' && !fieldString.includes('.length')) {\n        this._fireEvent({\n          cType: ChangeType.UPDATE,\n          oType: objType,\n          field: fieldString,\n          data: newValue\n        });\n      }\n\n      if (change.type === 'add') {\n        this._fireEvent({\n          cType: ChangeType.ADD,\n          oType: objType,\n          field: fieldString,\n          data: newValue\n        });\n      }\n\n      if (change.type === 'delete') {\n        this._fireEvent({\n          cType: ChangeType.REMOVE,\n          oType: objType,\n          field: fieldString\n        });\n      }\n    }\n  }, {\n    key: 'data',\n    get: function get() {\n      return this._data;\n    }\n  }]);\n  return SyncObject;\n}();\n\nvar ChangeType = exports.ChangeType = { UPDATE: 'update', ADD: 'add', REMOVE: 'remove' };\nvar ObjectType = exports.ObjectType = { OBJECT: 'object', ARRAY: 'array' };\nexports.default = SyncObject;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3luY2hlci9Qcm94eU9iamVjdC5qcz85OGI3Il0sIm5hbWVzIjpbIm9iamVjdFR5cGUiLCJBUlJBWSIsIk9CSkVDVCIsIlN5bmNPYmplY3QiLCJpbml0aWFsRGF0YSIsIl90aGlzIiwiX29ic2VydmVycyIsIl9maWx0ZXJzIiwiX2RhdGEiLCJfaW50ZXJuYWxPYnNlcnZlIiwiY2FsbGJhY2siLCJwdXNoIiwicGF0aCIsImxpc3QiLCJfZmluZFdpdGhTcGxpdCIsInJlc3VsdCIsImxhc3QiLCJwb3AiLCJvYmoiLCJmb3JFYWNoIiwidmFsdWUiLCJvYmplY3QiLCJoYW5kbGVyIiwiY2hhbmdlc2V0IiwiZXZlcnkiLCJjaGFuZ2UiLCJfb25DaGFuZ2VzIiwiT2JqZWN0IiwiZGVlcE9ic2VydmUiLCJldmVudCIsIm9ialR5cGUiLCJjb25zdHJ1Y3RvciIsIk9iamVjdFR5cGUiLCJBcnJheSIsImZpZWxkU3RyaW5nIiwia2V5cGF0aCIsIm5ld1ZhbHVlIiwibmFtZSIsInR5cGUiLCJpbmNsdWRlcyIsIl9maXJlRXZlbnQiLCJjVHlwZSIsIkNoYW5nZVR5cGUiLCJVUERBVEUiLCJvVHlwZSIsImZpZWxkIiwiZGF0YSIsIkFERCIsIlJFTU9WRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxhQUFhLEVBQUNDLE9BQU8sZ0JBQVIsRUFBMEJDLFFBQVEsaUJBQWxDLEVBQW5COztBQUVBOzs7Ozs7SUFLTUMsVTtBQUVKLHNCQUFZQyxXQUFaLEVBQXlCO0FBQUE7O0FBQ3ZCLFFBQUlDLFFBQVEsSUFBWjs7QUFFQUEsVUFBTUMsVUFBTixHQUFtQixFQUFuQjtBQUNBRCxVQUFNRSxRQUFOLEdBQWlCLEVBQWpCOztBQUVBLFNBQUtDLEtBQUwsR0FBYUosZUFBZSxFQUE1Qjs7QUFFQSxTQUFLSyxnQkFBTCxDQUFzQixLQUFLRCxLQUEzQjtBQUNEOzs7OzRCQUlPRSxRLEVBQVU7QUFDaEIsV0FBS0osVUFBTCxDQUFnQkssSUFBaEIsQ0FBcUJELFFBQXJCO0FBQ0Q7Ozt5QkFFSUUsSSxFQUFNO0FBQ1QsVUFBSUMsT0FBTyw0QkFBZ0JELElBQWhCLENBQVg7O0FBRUEsYUFBTyxLQUFLRSxjQUFMLENBQW9CRCxJQUFwQixDQUFQO0FBQ0Q7OzsrQkFFVUQsSSxFQUFNO0FBQ2YsVUFBSUcsU0FBUyxFQUFiO0FBQ0EsVUFBSUYsT0FBTyw0QkFBZ0JELElBQWhCLENBQVg7QUFDQUcsYUFBT0MsSUFBUCxHQUFjSCxLQUFLSSxHQUFMLEVBQWQ7QUFDQUYsYUFBT0csR0FBUCxHQUFhLEtBQUtKLGNBQUwsQ0FBb0JELElBQXBCLENBQWI7O0FBRUEsYUFBT0UsTUFBUDtBQUNEOzs7bUNBRWNGLEksRUFBTTtBQUNuQixVQUFJSyxNQUFNLEtBQUtWLEtBQWY7QUFDQUssV0FBS00sT0FBTCxDQUFhLFVBQUNDLEtBQUQsRUFBVztBQUN0QkYsY0FBTUEsSUFBSUUsS0FBSixDQUFOO0FBQ0QsT0FGRDs7QUFJQSxhQUFPRixHQUFQO0FBQ0Q7OztxQ0FFZ0JHLE0sRUFBUTtBQUFBOztBQUV2QixVQUFJQyxVQUFVLFNBQVZBLE9BQVUsQ0FBQ0MsU0FBRCxFQUFlOztBQUUzQkEsa0JBQVVDLEtBQVYsQ0FBZ0IsVUFBQ0MsTUFBRCxFQUFZO0FBQzFCLGlCQUFLQyxVQUFMLENBQWdCRCxNQUFoQjtBQUNELFNBRkQ7QUFJRCxPQU5EOztBQVFBLFdBQUtqQixLQUFMLEdBQWFtQixPQUFPQyxXQUFQLENBQW1CUCxNQUFuQixFQUEyQkMsT0FBM0IsQ0FBYjtBQUVEOzs7K0JBRVVPLEssRUFBTztBQUNoQixXQUFLdkIsVUFBTCxDQUFnQmEsT0FBaEIsQ0FBd0IsVUFBQ1QsUUFBRCxFQUFjO0FBQ3BDQSxpQkFBU21CLEtBQVQ7QUFDRCxPQUZEO0FBR0Q7OzsrQkFFVUosTSxFQUFROztBQUVqQixVQUFJUCxNQUFNTyxPQUFPSixNQUFqQjtBQUNBLFVBQUlTLGdCQUFKOztBQUVBLFVBQUlaLElBQUlhLFdBQUosS0FBb0JKLE1BQXhCLEVBQWdDO0FBQzlCRyxrQkFBVUUsV0FBVzlCLE1BQXJCO0FBQ0Q7O0FBRUQsVUFBSWdCLElBQUlhLFdBQUosS0FBb0JFLEtBQXhCLEVBQStCO0FBQzdCSCxrQkFBVUUsV0FBVy9CLEtBQXJCO0FBQ0Q7O0FBRUQsVUFBSWlDLGNBQWNULE9BQU9VLE9BQXpCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxVQUFJQyxXQUFXbEIsSUFBSU8sT0FBT1ksSUFBWCxDQUFmOztBQUVBOztBQUVBLFVBQUlaLE9BQU9hLElBQVAsS0FBZ0IsUUFBaEIsSUFBNEIsQ0FBQ0osWUFBWUssUUFBWixDQUFxQixTQUFyQixDQUFqQyxFQUFrRTtBQUNoRSxhQUFLQyxVQUFMLENBQWdCO0FBQ2RDLGlCQUFPQyxXQUFXQyxNQURKO0FBRWRDLGlCQUFPZCxPQUZPO0FBR2RlLGlCQUFPWCxXQUhPO0FBSWRZLGdCQUFNVjtBQUpRLFNBQWhCO0FBTUQ7O0FBRUQsVUFBSVgsT0FBT2EsSUFBUCxLQUFnQixLQUFwQixFQUEyQjtBQUN6QixhQUFLRSxVQUFMLENBQWdCO0FBQ2RDLGlCQUFPQyxXQUFXSyxHQURKO0FBRWRILGlCQUFPZCxPQUZPO0FBR2RlLGlCQUFPWCxXQUhPO0FBSWRZLGdCQUFNVjtBQUpRLFNBQWhCO0FBTUQ7O0FBRUQsVUFBSVgsT0FBT2EsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtBQUM1QixhQUFLRSxVQUFMLENBQWdCO0FBQ2RDLGlCQUFPQyxXQUFXTSxNQURKO0FBRWRKLGlCQUFPZCxPQUZPO0FBR2RlLGlCQUFPWDtBQUhPLFNBQWhCO0FBS0Q7QUFDRjs7O3dCQWxHVTtBQUFFLGFBQU8sS0FBSzFCLEtBQVo7QUFBb0I7Ozs7O0FBc0c1QixJQUFJa0Msa0NBQWEsRUFBQ0MsUUFBUSxRQUFULEVBQW1CSSxLQUFLLEtBQXhCLEVBQStCQyxRQUFRLFFBQXZDLEVBQWpCO0FBQ0EsSUFBSWhCLGtDQUFhLEVBQUM5QixRQUFRLFFBQVQsRUFBbUJELE9BQU8sT0FBMUIsRUFBakI7a0JBQ1FFLFUiLCJmaWxlIjoiMTE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdwcm94eS1vYnNlcnZlJztcclxuaW1wb3J0IHtwYXJzZUF0dHJpYnV0ZXN9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbmNvbnN0IG9iamVjdFR5cGUgPSB7QVJSQVk6ICdbb2JqZWN0IEFycmF5XScsIE9CSkVDVDogJ1tvYmplY3QgT2JqZWN0XScgfTtcclxuXHJcbi8qKlxyXG4gKiBAYWNjZXNzIHByaXZhdGVcclxuICogTWFpbiBjbGFzcyB0aGF0IG1haW50YWlucyBhIEpTT04gb2JqZWN0LCBhbmQgb2JzZXJ2ZXMgY2hhbmdlcyBpbiB0aGlzIG9iamVjdCwgcmVjdXJzaXZlbHkuXHJcbiAqIEludGVybmFsIG9iamVjdHMgYW5kIGFycmF5cyBhcmUgYWxzbyBvYnNlcnZlZC5cclxuICovXHJcbmNsYXNzIFN5bmNPYmplY3Qge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihpbml0aWFsRGF0YSkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fb2JzZXJ2ZXJzID0gW107XHJcbiAgICBfdGhpcy5fZmlsdGVycyA9IHt9O1xyXG5cclxuICAgIHRoaXMuX2RhdGEgPSBpbml0aWFsRGF0YSB8fCB7fTtcclxuXHJcbiAgICB0aGlzLl9pbnRlcm5hbE9ic2VydmUodGhpcy5fZGF0YSk7XHJcbiAgfVxyXG5cclxuICBnZXQgZGF0YSgpIHsgcmV0dXJuIHRoaXMuX2RhdGE7IH1cclxuXHJcbiAgb2JzZXJ2ZShjYWxsYmFjaykge1xyXG4gICAgdGhpcy5fb2JzZXJ2ZXJzLnB1c2goY2FsbGJhY2spO1xyXG4gIH1cclxuXHJcbiAgZmluZChwYXRoKSB7XHJcbiAgICBsZXQgbGlzdCA9IHBhcnNlQXR0cmlidXRlcyhwYXRoKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZmluZFdpdGhTcGxpdChsaXN0KTtcclxuICB9XHJcblxyXG4gIGZpbmRCZWZvcmUocGF0aCkge1xyXG4gICAgbGV0IHJlc3VsdCA9IHt9O1xyXG4gICAgbGV0IGxpc3QgPSBwYXJzZUF0dHJpYnV0ZXMocGF0aCk7XHJcbiAgICByZXN1bHQubGFzdCA9IGxpc3QucG9wKCk7XHJcbiAgICByZXN1bHQub2JqID0gdGhpcy5fZmluZFdpdGhTcGxpdChsaXN0KTtcclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuXHJcbiAgX2ZpbmRXaXRoU3BsaXQobGlzdCkge1xyXG4gICAgbGV0IG9iaiA9IHRoaXMuX2RhdGE7XHJcbiAgICBsaXN0LmZvckVhY2goKHZhbHVlKSA9PiB7XHJcbiAgICAgIG9iaiA9IG9ialt2YWx1ZV07XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gb2JqO1xyXG4gIH1cclxuXHJcbiAgX2ludGVybmFsT2JzZXJ2ZShvYmplY3QpIHtcclxuXHJcbiAgICBsZXQgaGFuZGxlciA9IChjaGFuZ2VzZXQpID0+IHtcclxuXHJcbiAgICAgIGNoYW5nZXNldC5ldmVyeSgoY2hhbmdlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fb25DaGFuZ2VzKGNoYW5nZSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5fZGF0YSA9IE9iamVjdC5kZWVwT2JzZXJ2ZShvYmplY3QsIGhhbmRsZXIpO1xyXG5cclxuICB9XHJcblxyXG4gIF9maXJlRXZlbnQoZXZlbnQpIHtcclxuICAgIHRoaXMuX29ic2VydmVycy5mb3JFYWNoKChjYWxsYmFjaykgPT4ge1xyXG4gICAgICBjYWxsYmFjayhldmVudCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9vbkNoYW5nZXMoY2hhbmdlKSB7XHJcblxyXG4gICAgbGV0IG9iaiA9IGNoYW5nZS5vYmplY3Q7XHJcbiAgICBsZXQgb2JqVHlwZTtcclxuXHJcbiAgICBpZiAob2JqLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHtcclxuICAgICAgb2JqVHlwZSA9IE9iamVjdFR5cGUuT0JKRUNUO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvYmouY29uc3RydWN0b3IgPT09IEFycmF5KSB7XHJcbiAgICAgIG9ialR5cGUgPSBPYmplY3RUeXBlLkFSUkFZO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBmaWVsZFN0cmluZyA9IGNoYW5nZS5rZXlwYXRoO1xyXG5cclxuICAgIC8vIGNvbnNvbGUubG9nKCdGaWVsZDonLCBmaWVsZFN0cmluZyk7XHJcbiAgICAvLyBjb25zb2xlLmxvZygndHlwZTonLCBjaGFuZ2UudHlwZSk7XHJcblxyXG4gICAgLy9sZXQgb2xkVmFsdWUgPSBjaGFuZ2Uub2xkVmFsdWU7XHJcbiAgICBsZXQgbmV3VmFsdWUgPSBvYmpbY2hhbmdlLm5hbWVdO1xyXG5cclxuICAgIC8vIGNvbnNvbGUuaW5mbyhjaGFuZ2UudHlwZSArICcgfCBGaWVsZDogJyArIGZpZWxkU3RyaW5nICsgJyB8IE5ldyBWYWx1ZTonLCBKU09OLnN0cmluZ2lmeShuZXdWYWx1ZSksIGZpZWxkU3RyaW5nLmluY2x1ZGVzKCdsZW5ndGgnKSk7XHJcblxyXG4gICAgaWYgKGNoYW5nZS50eXBlID09PSAndXBkYXRlJyAmJiAhZmllbGRTdHJpbmcuaW5jbHVkZXMoJy5sZW5ndGgnKSkge1xyXG4gICAgICB0aGlzLl9maXJlRXZlbnQoe1xyXG4gICAgICAgIGNUeXBlOiBDaGFuZ2VUeXBlLlVQREFURSxcclxuICAgICAgICBvVHlwZTogb2JqVHlwZSxcclxuICAgICAgICBmaWVsZDogZmllbGRTdHJpbmcsXHJcbiAgICAgICAgZGF0YTogbmV3VmFsdWVcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNoYW5nZS50eXBlID09PSAnYWRkJykge1xyXG4gICAgICB0aGlzLl9maXJlRXZlbnQoe1xyXG4gICAgICAgIGNUeXBlOiBDaGFuZ2VUeXBlLkFERCxcclxuICAgICAgICBvVHlwZTogb2JqVHlwZSxcclxuICAgICAgICBmaWVsZDogZmllbGRTdHJpbmcsXHJcbiAgICAgICAgZGF0YTogbmV3VmFsdWVcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNoYW5nZS50eXBlID09PSAnZGVsZXRlJykge1xyXG4gICAgICB0aGlzLl9maXJlRXZlbnQoe1xyXG4gICAgICAgIGNUeXBlOiBDaGFuZ2VUeXBlLlJFTU9WRSxcclxuICAgICAgICBvVHlwZTogb2JqVHlwZSxcclxuICAgICAgICBmaWVsZDogZmllbGRTdHJpbmdcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGxldCBDaGFuZ2VUeXBlID0ge1VQREFURTogJ3VwZGF0ZScsIEFERDogJ2FkZCcsIFJFTU9WRTogJ3JlbW92ZSd9O1xyXG5leHBvcnQgbGV0IE9iamVjdFR5cGUgPSB7T0JKRUNUOiAnb2JqZWN0JywgQVJSQVk6ICdhcnJheSd9O1xyXG5leHBvcnQgZGVmYXVsdCBTeW5jT2JqZWN0O1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc3luY2hlci9Qcm94eU9iamVjdC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///117\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _ProxyObject = __webpack_require__(117);\n\nvar _ProxyObject2 = _interopRequireDefault(_ProxyObject);\n\nvar _utils = __webpack_require__(19);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('DataObjectChild'); /**\r\n                                               * Copyright 2016 PT Inovação e Sistemas SA\r\n                                               * Copyright 2016 INESC-ID\r\n                                               * Copyright 2016 QUOBIS NETWORKS SL\r\n                                               * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                               * Copyright 2016 ORANGE SA\r\n                                               * Copyright 2016 Deutsche Telekom AG\r\n                                               * Copyright 2016 Apizee\r\n                                               * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                               *\r\n                                               * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                               * you may not use this file except in compliance with the License.\r\n                                               * You may obtain a copy of the License at\r\n                                               *\r\n                                               *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                               *\r\n                                               * Unless required by applicable law or agreed to in writing, software\r\n                                               * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                               * See the License for the specific language governing permissions and\r\n                                               * limitations under the License.\r\n                                               **/\n// Log System\n\n/**\r\n * The class returned from the DataObject addChildren call or from onAddChildren if remotely created.\r\n */\nvar DataObjectChild /* implements SyncStatus */ = function () {\n  /* private\r\n    ----event handlers----\r\n  _onResponseHandler: (event) => void\r\n  */\n\n  /**\r\n   * @ignore\r\n   * Should not be used directly by Hyperties. It's called by the DataObject.addChild\r\n   */\n  function DataObjectChild(input) {\n    (0, _classCallCheck3.default)(this, DataObjectChild);\n\n    var _this = this;\n\n    function throwMandatoryParmMissingError(par) {\n      throw '[DataObjectChild] ' + par + ' mandatory parameter is missing';\n    }\n\n    input.parent ? _this._parent = input.parent : throwMandatoryParmMissingError('parent');\n    input.url ? _this._url = input.url : throwMandatoryParmMissingError('url');\n    input.created ? _this._created = input.created : throwMandatoryParmMissingError('created');\n    input.reporter ? _this._reporter = input.reporter : throwMandatoryParmMissingError('reporter');\n    input.runtime ? _this._runtime = input.runtime : throwMandatoryParmMissingError('runtime');\n    input.schema ? _this._schema = input.schema : throwMandatoryParmMissingError('schema');\n    input.parentObject ? _this._parentObject = input.parentObject : throwMandatoryParmMissingError('parentObject');\n\n    if (input.name) _this._name = input.name;\n    if (input.description) _this._description = input.description;\n    if (input.tags) _this._tags = input.tags;\n    if (input.resources) _this._resources = input.resources;\n    if (input.observerStorage) _this._observerStorage = input.observerStorage;\n    if (input.publicObservation) _this._publicObservation = input.publicObservation;\n\n    _this._childId = input.url;\n\n    if (input.data) {\n      _this._syncObj = new _ProxyObject2.default(input.data);\n    } else {\n      _this._syncObj = new _ProxyObject2.default({});\n    }\n\n    log.log('[DataObjectChild -  Constructor] - ', _this._syncObj);\n\n    _this._bus = _this._parentObject._bus;\n    _this._owner = _this._parentObject._owner;\n\n    _this._allocateListeners();\n\n    _this._metadata = input;\n\n    // delete _this._metadata.data;\n    delete _this._metadata.parentObject;\n\n    _this._sharingStatus = false;\n  }\n\n  (0, _createClass3.default)(DataObjectChild, [{\n    key: 'share',\n\n\n    /**\r\n     * This function is used to share the child Object among authorised Hyperties\r\n     * @param  {boolean}     reporter  If true the child object is only shared to Parent reporter\r\n     * @return {Promise<JSON>}        It returns a promise with the sharing results.\r\n     */\n\n    value: function share(toReporter) {\n      var _this = this;\n\n      _this._sharingStatus = new _promise2.default(function (resolve, reject) {\n\n        var to = void 0;\n        var reporter = toReporter;\n\n        if (reporter) {\n          to = _this.metadata.parent;\n        } else to = _this.metadata.parent + '/children/' + _this.metadata.children;\n\n        var childValue = _this.metadata;\n        childValue.data = _this.data;\n\n        //FLOW-OUT: this message will be sent directly to a resource child address: MessageBus\n        var requestMsg = {\n          type: 'create', from: _this.metadata.reporter, to: to,\n          body: { resource: childValue.url, value: childValue }\n        };\n\n        if (_this.identity) {\n          requestMsg.body.identity = _this.identity;\n        }\n\n        //to be used to disable mutual authentication for legacy users\n\n        if (_this._parentObject.data.hasOwnProperty('mutual')) requestMsg.body.mutual = _this._parentObject.data.mutual;\n\n        if (_this._parentObject.metadata.reporter === _this.metadata.reporter) {\n          _this._bus.postMessage((0, _utils.deepClone)(requestMsg));\n          return resolve();\n        } else {\n\n          var callback = function callback(reply) {\n\n            if (reply.to === _this._reporter) {\n              _this._bus.removeResponseListener(requestMsg.from, reply.id);\n\n              log.log('[Syncher.DataObjectChild.share] Parent reporter reply ', reply);\n\n              var result = {\n                code: reply.body && reply.body.code ? reply.body.code : 500,\n                desc: reply.body && reply.body.desc ? reply.body.desc : 'Unknown'\n              };\n\n              if (reply.body.code < 300) {\n                return resolve(result);\n              } else return reject(result);\n            }\n          };\n\n          var id = _this._bus.postMessage((0, _utils.deepClone)(requestMsg), callback, false);\n\n          setTimeout(function () {\n\n            // If Reporter does  not reply the promise is rejected\n            _this._bus.removeResponseListener(requestMsg.from, id);\n\n            var result = {\n              code: 408,\n              desc: 'timout'\n            };\n            return reject(result);\n          }, 3000);\n        }\n      });\n    }\n\n    /**\r\n       * This function is used to share the child Object among authorised Hyperties\r\n       * @param  {boolean}     reporter  If true the child object is only shared to Parent reporter\r\n       * @return {Promise<JSON>}        It returns a promise with the sharing results.\r\n       */\n\n  }, {\n    key: 'store',\n    value: function store() {\n      var _this = this;\n\n      var child = {};\n      var key = _this.metadata.children + '.' + _this.metadata.url;\n\n      child.value = _this.metadata;\n      child.identity = _this.identity;\n\n      var msg = {\n\n        from: _this.metadata.reporter,\n        to: _this._parentObject._syncher._subURL,\n        type: 'create',\n        body: {\n          resource: _this.metadata.parent,\n          attribute: key,\n          value: child\n        }\n      };\n\n      log.log('[DataObjectChild.store]:', msg);\n\n      _this._bus.postMessage(msg);\n    }\n  }, {\n    key: '_allocateListeners',\n    value: function _allocateListeners() {\n      var _this = this;\n\n      //this is only needed for children reporters\n      if (_this._reporter === _this._owner) {\n        _this._listener = _this._bus.addListener(_this._reporter, function (msg) {\n          if (msg.type === 'response' && msg.id === _this._msgId) {\n            log.log('DataObjectChild.onResponse:', msg);\n            _this._onResponse(msg);\n          }\n        });\n      }\n    }\n  }, {\n    key: '_releaseListeners',\n    value: function _releaseListeners() {\n      var _this = this;\n\n      if (_this._listener) {\n        _this._listener.remove();\n      }\n    }\n\n    /**\r\n     * Release and delete object data\r\n     */\n\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      var _this = this;\n\n      _this._releaseListeners();\n\n      //TODO: send delete message ?\n\n      // nothing to be done\n      // return new Promise((resolve) => {\n      //   log.log('[DataObjectChild.delete]');\n      //   resolve();\n      // });\n    }\n\n    /**\r\n     * All Metadata about the Child Data Object\r\n     * @type {Object} -\r\n     */\n\n  }, {\n    key: 'onChange',\n\n\n    /**\r\n     * Register the change listeners sent by the reporter child\r\n     * @param {function(event: MsgEvent)} callback\r\n     */\n    value: function onChange(callback) {\n      this._syncObj.observe(function (event) {\n        log.log('[DataObjectChild - observer] - ', event);\n        callback(event);\n      });\n    }\n\n    /**\r\n     * Setup the callback to process response notifications of the creates\r\n     * @param {function(event: MsgEvent)} callback\r\n     */\n\n  }, {\n    key: 'onResponse',\n    value: function onResponse(callback) {\n      this._onResponseHandler = callback;\n    }\n\n    //FLOW-IN: message received from a remote DataObject -> _onChildCreate\n\n  }, {\n    key: '_onResponse',\n    value: function _onResponse(msg) {\n      var _this = this;\n\n      var event = {\n        type: msg.type,\n        url: msg.body.source,\n        code: msg.body.code\n      };\n\n      if (_this._onResponseHandler) {\n        _this._onResponseHandler(event);\n      }\n    }\n  }, {\n    key: 'shareable',\n    get: function get() {\n      var shareable = this.metadata;\n      shareable.data = this.data;\n\n      return shareable;\n    }\n  }, {\n    key: 'metadata',\n    get: function get() {\n      return this._metadata;\n    }\n\n    /**\r\n     * Children ID generated on addChildren. Unique identifier\r\n     * @type {URL} - URL of the format <HypertyURL>#<numeric-sequence>\r\n     */\n\n  }, {\n    key: 'childId',\n    get: function get() {\n      return this._childId;\n    }\n\n    /**\r\n     * Data Structure to be synchronized.\r\n     * @type {JSON} - JSON structure that should follow the defined schema, if any.\r\n     */\n\n  }, {\n    key: 'sharingStatus',\n    get: function get() {\n      return this._sharingStatus;\n    }\n\n    /**\r\n      * Data Structure to be synchronized.\r\n      * @type {JSON} - JSON structure that should follow the defined schema, if any.\r\n      */\n\n  }, {\n    key: 'data',\n    get: function get() {\n      return this._syncObj.data;\n    }\n\n    /**\r\n     * Set for this dataObjectChild an identity\r\n     * @method identity\r\n     * @param  {Identity} identity identity from who created the message\r\n     */\n\n  }, {\n    key: 'identity',\n    set: function set(identity) {\n      this._identity = identity;\n    }\n\n    /**\r\n     * Get for this dataObjectChild an identity\r\n     * @method identity\r\n     * @return {Identity} identity from who created the message\r\n     */\n    ,\n    get: function get() {\n      return this._identity;\n    }\n  }]);\n  return DataObjectChild;\n}();\n\nexports.default = DataObjectChild;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3luY2hlci9EYXRhT2JqZWN0Q2hpbGQuanM/MDViYSJdLCJuYW1lcyI6WyJsb2dnZXIiLCJsb2ciLCJnZXRMb2dnZXIiLCJEYXRhT2JqZWN0Q2hpbGQiLCJpbnB1dCIsIl90aGlzIiwidGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yIiwicGFyIiwicGFyZW50IiwiX3BhcmVudCIsInVybCIsIl91cmwiLCJjcmVhdGVkIiwiX2NyZWF0ZWQiLCJyZXBvcnRlciIsIl9yZXBvcnRlciIsInJ1bnRpbWUiLCJfcnVudGltZSIsInNjaGVtYSIsIl9zY2hlbWEiLCJwYXJlbnRPYmplY3QiLCJfcGFyZW50T2JqZWN0IiwibmFtZSIsIl9uYW1lIiwiZGVzY3JpcHRpb24iLCJfZGVzY3JpcHRpb24iLCJ0YWdzIiwiX3RhZ3MiLCJyZXNvdXJjZXMiLCJfcmVzb3VyY2VzIiwib2JzZXJ2ZXJTdG9yYWdlIiwiX29ic2VydmVyU3RvcmFnZSIsInB1YmxpY09ic2VydmF0aW9uIiwiX3B1YmxpY09ic2VydmF0aW9uIiwiX2NoaWxkSWQiLCJkYXRhIiwiX3N5bmNPYmoiLCJTeW5jT2JqZWN0IiwiX2J1cyIsIl9vd25lciIsIl9hbGxvY2F0ZUxpc3RlbmVycyIsIl9tZXRhZGF0YSIsIl9zaGFyaW5nU3RhdHVzIiwidG9SZXBvcnRlciIsInJlc29sdmUiLCJyZWplY3QiLCJ0byIsIm1ldGFkYXRhIiwiY2hpbGRyZW4iLCJjaGlsZFZhbHVlIiwicmVxdWVzdE1zZyIsInR5cGUiLCJmcm9tIiwiYm9keSIsInJlc291cmNlIiwidmFsdWUiLCJpZGVudGl0eSIsImhhc093blByb3BlcnR5IiwibXV0dWFsIiwicG9zdE1lc3NhZ2UiLCJjYWxsYmFjayIsInJlcGx5IiwicmVtb3ZlUmVzcG9uc2VMaXN0ZW5lciIsImlkIiwicmVzdWx0IiwiY29kZSIsImRlc2MiLCJzZXRUaW1lb3V0IiwiY2hpbGQiLCJrZXkiLCJtc2ciLCJfc3luY2hlciIsIl9zdWJVUkwiLCJhdHRyaWJ1dGUiLCJfbGlzdGVuZXIiLCJhZGRMaXN0ZW5lciIsIl9tc2dJZCIsIl9vblJlc3BvbnNlIiwicmVtb3ZlIiwiX3JlbGVhc2VMaXN0ZW5lcnMiLCJvYnNlcnZlIiwiZXZlbnQiLCJfb25SZXNwb25zZUhhbmRsZXIiLCJzb3VyY2UiLCJzaGFyZWFibGUiLCJfaWRlbnRpdHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTs7SUFBWUEsTTs7QUFHWjs7OztBQUVBOzs7Ozs7QUFKQSxJQUFJQyxNQUFNRCxPQUFPRSxTQUFQLENBQWlCLGlCQUFqQixDQUFWLEMsQ0F4QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkE7O0FBUUE7OztJQUdNQyxlLENBQWdCLDJCO0FBQ3BCOzs7OztBQU1BOzs7O0FBSUEsMkJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFDakIsUUFBSUMsUUFBUSxJQUFaOztBQUVBLGFBQVNDLDhCQUFULENBQXdDQyxHQUF4QyxFQUE2QztBQUMzQyxZQUFNLHVCQUF1QkEsR0FBdkIsR0FBNkIsaUNBQW5DO0FBQ0Q7O0FBRURILFVBQU1JLE1BQU4sR0FBZ0JILE1BQU1JLE9BQU4sR0FBZ0JMLE1BQU1JLE1BQXRDLEdBQStDRiwrQkFBK0IsUUFBL0IsQ0FBL0M7QUFDQUYsVUFBTU0sR0FBTixHQUFhTCxNQUFNTSxJQUFOLEdBQWFQLE1BQU1NLEdBQWhDLEdBQXNDSiwrQkFBK0IsS0FBL0IsQ0FBdEM7QUFDQUYsVUFBTVEsT0FBTixHQUFnQlAsTUFBTVEsUUFBTixHQUFpQlQsTUFBTVEsT0FBdkMsR0FBaUROLCtCQUErQixTQUEvQixDQUFqRDtBQUNBRixVQUFNVSxRQUFOLEdBQWlCVCxNQUFNVSxTQUFOLEdBQWtCWCxNQUFNVSxRQUF6QyxHQUFvRFIsK0JBQStCLFVBQS9CLENBQXBEO0FBQ0FGLFVBQU1ZLE9BQU4sR0FBZ0JYLE1BQU1ZLFFBQU4sR0FBaUJiLE1BQU1ZLE9BQXZDLEdBQWlEViwrQkFBK0IsU0FBL0IsQ0FBakQ7QUFDQUYsVUFBTWMsTUFBTixHQUFlYixNQUFNYyxPQUFOLEdBQWdCZixNQUFNYyxNQUFyQyxHQUE4Q1osK0JBQStCLFFBQS9CLENBQTlDO0FBQ0FGLFVBQU1nQixZQUFOLEdBQXFCZixNQUFNZ0IsYUFBTixHQUFzQmpCLE1BQU1nQixZQUFqRCxHQUFnRWQsK0JBQStCLGNBQS9CLENBQWhFOztBQUVBLFFBQUlGLE1BQU1rQixJQUFWLEVBQWdCakIsTUFBTWtCLEtBQU4sR0FBY25CLE1BQU1rQixJQUFwQjtBQUNoQixRQUFJbEIsTUFBTW9CLFdBQVYsRUFBdUJuQixNQUFNb0IsWUFBTixHQUFxQnJCLE1BQU1vQixXQUEzQjtBQUN2QixRQUFJcEIsTUFBTXNCLElBQVYsRUFBZ0JyQixNQUFNc0IsS0FBTixHQUFjdkIsTUFBTXNCLElBQXBCO0FBQ2hCLFFBQUl0QixNQUFNd0IsU0FBVixFQUFxQnZCLE1BQU13QixVQUFOLEdBQW1CekIsTUFBTXdCLFNBQXpCO0FBQ3JCLFFBQUl4QixNQUFNMEIsZUFBVixFQUEyQnpCLE1BQU0wQixnQkFBTixHQUF5QjNCLE1BQU0wQixlQUEvQjtBQUMzQixRQUFJMUIsTUFBTTRCLGlCQUFWLEVBQTZCM0IsTUFBTTRCLGtCQUFOLEdBQTJCN0IsTUFBTTRCLGlCQUFqQzs7QUFFN0IzQixVQUFNNkIsUUFBTixHQUFpQjlCLE1BQU1NLEdBQXZCOztBQUVBLFFBQUlOLE1BQU0rQixJQUFWLEVBQWdCO0FBQ2Q5QixZQUFNK0IsUUFBTixHQUFpQixJQUFJQyxxQkFBSixDQUFlakMsTUFBTStCLElBQXJCLENBQWpCO0FBQ0QsS0FGRCxNQUVPO0FBQ0w5QixZQUFNK0IsUUFBTixHQUFpQixJQUFJQyxxQkFBSixDQUFlLEVBQWYsQ0FBakI7QUFDRDs7QUFFRHBDLFFBQUlBLEdBQUosQ0FBUSxxQ0FBUixFQUErQ0ksTUFBTStCLFFBQXJEOztBQUVBL0IsVUFBTWlDLElBQU4sR0FBYWpDLE1BQU1nQixhQUFOLENBQW9CaUIsSUFBakM7QUFDQWpDLFVBQU1rQyxNQUFOLEdBQWVsQyxNQUFNZ0IsYUFBTixDQUFvQmtCLE1BQW5DOztBQUVBbEMsVUFBTW1DLGtCQUFOOztBQUVBbkMsVUFBTW9DLFNBQU4sR0FBa0JyQyxLQUFsQjs7QUFFQTtBQUNBLFdBQU9DLE1BQU1vQyxTQUFOLENBQWdCckIsWUFBdkI7O0FBRUFmLFVBQU1xQyxjQUFOLEdBQXVCLEtBQXZCO0FBRUQ7Ozs7OztBQVNEOzs7Ozs7MEJBTU1DLFUsRUFBWTtBQUNoQixVQUFJdEMsUUFBUSxJQUFaOztBQUVBQSxZQUFNcUMsY0FBTixHQUF1QixzQkFBWSxVQUFDRSxPQUFELEVBQVVDLE1BQVYsRUFBcUI7O0FBRXRELFlBQUlDLFdBQUo7QUFDQSxZQUFJaEMsV0FBVzZCLFVBQWY7O0FBRUEsWUFBSTdCLFFBQUosRUFBYztBQUNaZ0MsZUFBS3pDLE1BQU0wQyxRQUFOLENBQWV2QyxNQUFwQjtBQUNELFNBRkQsTUFFT3NDLEtBQUt6QyxNQUFNMEMsUUFBTixDQUFldkMsTUFBZixHQUF3QixZQUF4QixHQUF1Q0gsTUFBTTBDLFFBQU4sQ0FBZUMsUUFBM0Q7O0FBRVAsWUFBSUMsYUFBYTVDLE1BQU0wQyxRQUF2QjtBQUNBRSxtQkFBV2QsSUFBWCxHQUFrQjlCLE1BQU04QixJQUF4Qjs7QUFFQTtBQUNBLFlBQUllLGFBQWE7QUFDZkMsZ0JBQU0sUUFEUyxFQUNDQyxNQUFNL0MsTUFBTTBDLFFBQU4sQ0FBZWpDLFFBRHRCLEVBQ2dDZ0MsSUFBSUEsRUFEcEM7QUFFZk8sZ0JBQU0sRUFBRUMsVUFBVUwsV0FBV3ZDLEdBQXZCLEVBQTRCNkMsT0FBT04sVUFBbkM7QUFGUyxTQUFqQjs7QUFLQSxZQUFJNUMsTUFBTW1ELFFBQVYsRUFBeUI7QUFDdkJOLHFCQUFXRyxJQUFYLENBQWdCRyxRQUFoQixHQUEyQm5ELE1BQU1tRCxRQUFqQztBQUNEOztBQUVEOztBQUVBLFlBQUluRCxNQUFNZ0IsYUFBTixDQUFvQmMsSUFBcEIsQ0FBeUJzQixjQUF6QixDQUF3QyxRQUF4QyxDQUFKLEVBQXVEUCxXQUFXRyxJQUFYLENBQWdCSyxNQUFoQixHQUF5QnJELE1BQU1nQixhQUFOLENBQW9CYyxJQUFwQixDQUF5QnVCLE1BQWxEOztBQUV2RCxZQUFJckQsTUFBTWdCLGFBQU4sQ0FBb0IwQixRQUFwQixDQUE2QmpDLFFBQTdCLEtBQTBDVCxNQUFNMEMsUUFBTixDQUFlakMsUUFBN0QsRUFBdUU7QUFDckVULGdCQUFNaUMsSUFBTixDQUFXcUIsV0FBWCxDQUF1QixzQkFBVVQsVUFBVixDQUF2QjtBQUNBLGlCQUFPTixTQUFQO0FBQ0QsU0FIRCxNQUdPOztBQUVMLGNBQUlnQixXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsS0FBRCxFQUFXOztBQUV4QixnQkFBSUEsTUFBTWYsRUFBTixLQUFhekMsTUFBTVUsU0FBdkIsRUFBa0M7QUFDaENWLG9CQUFNaUMsSUFBTixDQUFXd0Isc0JBQVgsQ0FBa0NaLFdBQVdFLElBQTdDLEVBQW1EUyxNQUFNRSxFQUF6RDs7QUFFQTlELGtCQUFJQSxHQUFKLENBQVEsd0RBQVIsRUFBa0U0RCxLQUFsRTs7QUFFQSxrQkFBSUcsU0FBUztBQUNYQyxzQkFBTUosTUFBTVIsSUFBTixJQUFjUSxNQUFNUixJQUFOLENBQVdZLElBQXpCLEdBQWdDSixNQUFNUixJQUFOLENBQVdZLElBQTNDLEdBQWtELEdBRDdDO0FBRVhDLHNCQUFNTCxNQUFNUixJQUFOLElBQWNRLE1BQU1SLElBQU4sQ0FBV2EsSUFBekIsR0FBZ0NMLE1BQU1SLElBQU4sQ0FBV2EsSUFBM0MsR0FBa0Q7QUFGN0MsZUFBYjs7QUFLQSxrQkFBSUwsTUFBTVIsSUFBTixDQUFXWSxJQUFYLEdBQWtCLEdBQXRCLEVBQTJCO0FBQ3pCLHVCQUFPckIsUUFBUW9CLE1BQVIsQ0FBUDtBQUNELGVBRkQsTUFFTyxPQUFPbkIsT0FBT21CLE1BQVAsQ0FBUDtBQUVSO0FBQ0YsV0FqQkQ7O0FBbUJBLGNBQUlELEtBQUsxRCxNQUFNaUMsSUFBTixDQUFXcUIsV0FBWCxDQUF1QixzQkFBVVQsVUFBVixDQUF2QixFQUE4Q1UsUUFBOUMsRUFBd0QsS0FBeEQsQ0FBVDs7QUFFQU8scUJBQVcsWUFBSzs7QUFFZDtBQUNBOUQsa0JBQU1pQyxJQUFOLENBQVd3QixzQkFBWCxDQUFrQ1osV0FBV0UsSUFBN0MsRUFBbURXLEVBQW5EOztBQUVBLGdCQUFJQyxTQUFTO0FBQ1hDLG9CQUFNLEdBREs7QUFFWEMsb0JBQU07QUFGSyxhQUFiO0FBSUEsbUJBQU9yQixPQUFPbUIsTUFBUCxDQUFQO0FBRUQsV0FYRCxFQVdHLElBWEg7QUFhRDtBQUNGLE9BbEVzQixDQUF2QjtBQW9FRDs7QUFFRDs7Ozs7Ozs7NEJBTVE7QUFDTixVQUFJM0QsUUFBUSxJQUFaOztBQUVBLFVBQUkrRCxRQUFRLEVBQVo7QUFDQSxVQUFJQyxNQUFNaEUsTUFBTTBDLFFBQU4sQ0FBZUMsUUFBZixHQUEwQixHQUExQixHQUFnQzNDLE1BQU0wQyxRQUFOLENBQWVyQyxHQUF6RDs7QUFFQTBELFlBQU1iLEtBQU4sR0FBY2xELE1BQU0wQyxRQUFwQjtBQUNBcUIsWUFBTVosUUFBTixHQUFpQm5ELE1BQU1tRCxRQUF2Qjs7QUFFQSxVQUFJYyxNQUFNOztBQUVSbEIsY0FBTS9DLE1BQU0wQyxRQUFOLENBQWVqQyxRQUZiO0FBR1JnQyxZQUFJekMsTUFBTWdCLGFBQU4sQ0FBb0JrRCxRQUFwQixDQUE2QkMsT0FIekI7QUFJUnJCLGNBQU0sUUFKRTtBQUtSRSxjQUFNO0FBQ0pDLG9CQUFVakQsTUFBTTBDLFFBQU4sQ0FBZXZDLE1BRHJCO0FBRUppRSxxQkFBV0osR0FGUDtBQUdKZCxpQkFBT2E7QUFISDtBQUxFLE9BQVY7O0FBWUFuRSxVQUFJQSxHQUFKLENBQVEsMEJBQVIsRUFBb0NxRSxHQUFwQzs7QUFFQWpFLFlBQU1pQyxJQUFOLENBQVdxQixXQUFYLENBQXVCVyxHQUF2QjtBQUNEOzs7eUNBRW9CO0FBQ25CLFVBQUlqRSxRQUFRLElBQVo7O0FBRUE7QUFDQSxVQUFJQSxNQUFNVSxTQUFOLEtBQW9CVixNQUFNa0MsTUFBOUIsRUFBc0M7QUFDcENsQyxjQUFNcUUsU0FBTixHQUFrQnJFLE1BQU1pQyxJQUFOLENBQVdxQyxXQUFYLENBQXVCdEUsTUFBTVUsU0FBN0IsRUFBd0MsVUFBQ3VELEdBQUQsRUFBUztBQUNqRSxjQUFJQSxJQUFJbkIsSUFBSixLQUFhLFVBQWIsSUFBMkJtQixJQUFJUCxFQUFKLEtBQVcxRCxNQUFNdUUsTUFBaEQsRUFBd0Q7QUFDdEQzRSxnQkFBSUEsR0FBSixDQUFRLDZCQUFSLEVBQXVDcUUsR0FBdkM7QUFDQWpFLGtCQUFNd0UsV0FBTixDQUFrQlAsR0FBbEI7QUFDRDtBQUNGLFNBTGlCLENBQWxCO0FBTUQ7QUFDRjs7O3dDQUVtQjtBQUNsQixVQUFJakUsUUFBUSxJQUFaOztBQUVBLFVBQUlBLE1BQU1xRSxTQUFWLEVBQXFCO0FBQ25CckUsY0FBTXFFLFNBQU4sQ0FBZ0JJLE1BQWhCO0FBQ0Q7QUFDRjs7QUFFRDs7Ozs7OzhCQUdTO0FBQ1AsVUFBSXpFLFFBQVEsSUFBWjs7QUFHQUEsWUFBTTBFLGlCQUFOOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRDs7QUFFRDs7Ozs7Ozs7O0FBMENBOzs7OzZCQUlTbkIsUSxFQUFVO0FBQ2pCLFdBQUt4QixRQUFMLENBQWM0QyxPQUFkLENBQXNCLFVBQUNDLEtBQUQsRUFBVztBQUMvQmhGLFlBQUlBLEdBQUosQ0FBUSxpQ0FBUixFQUEyQ2dGLEtBQTNDO0FBQ0FyQixpQkFBU3FCLEtBQVQ7QUFDRCxPQUhEO0FBSUQ7O0FBRUQ7Ozs7Ozs7K0JBSVdyQixRLEVBQVU7QUFDbkIsV0FBS3NCLGtCQUFMLEdBQTBCdEIsUUFBMUI7QUFDRDs7QUFFRDs7OztnQ0FDWVUsRyxFQUFLO0FBQ2YsVUFBSWpFLFFBQVEsSUFBWjs7QUFFQSxVQUFJNEUsUUFBUTtBQUNWOUIsY0FBTW1CLElBQUluQixJQURBO0FBRVZ6QyxhQUFLNEQsSUFBSWpCLElBQUosQ0FBUzhCLE1BRko7QUFHVmxCLGNBQU1LLElBQUlqQixJQUFKLENBQVNZO0FBSEwsT0FBWjs7QUFNQSxVQUFJNUQsTUFBTTZFLGtCQUFWLEVBQThCO0FBQzVCN0UsY0FBTTZFLGtCQUFOLENBQXlCRCxLQUF6QjtBQUNEO0FBQ0Y7Ozt3QkF4T2U7QUFDZCxVQUFJRyxZQUFZLEtBQUtyQyxRQUFyQjtBQUNBcUMsZ0JBQVVqRCxJQUFWLEdBQWlCLEtBQUtBLElBQXRCOztBQUVBLGFBQU9pRCxTQUFQO0FBQ0Q7Ozt3QkE2SmM7QUFBRSxhQUFPLEtBQUszQyxTQUFaO0FBQXdCOztBQUV6Qzs7Ozs7Ozt3QkFJYztBQUFFLGFBQU8sS0FBS1AsUUFBWjtBQUF1Qjs7QUFFdkM7Ozs7Ozs7d0JBS29CO0FBQ2xCLGFBQU8sS0FBS1EsY0FBWjtBQUNEOztBQUVEOzs7Ozs7O3dCQUtXO0FBQUUsYUFBTyxLQUFLTixRQUFMLENBQWNELElBQXJCO0FBQTRCOztBQUV6Qzs7Ozs7Ozs7c0JBS2FxQixRLEVBQVU7QUFBRSxXQUFLNkIsU0FBTCxHQUFpQjdCLFFBQWpCO0FBQTRCOztBQUVyRDs7Ozs7O3dCQUtlO0FBQUUsYUFBTyxLQUFLNkIsU0FBWjtBQUF3Qjs7Ozs7a0JBc0M1QmxGLGUiLCJmaWxlIjoiMTE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xyXG4vLyBMb2cgU3lzdGVtXHJcbmltcG9ydCAqIGFzIGxvZ2dlciBmcm9tICdsb2dsZXZlbCc7XHJcbmxldCBsb2cgPSBsb2dnZXIuZ2V0TG9nZ2VyKCdEYXRhT2JqZWN0Q2hpbGQnKTtcclxuXHJcbmltcG9ydCBTeW5jT2JqZWN0IGZyb20gJy4vUHJveHlPYmplY3QnO1xyXG5cclxuaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMuanMnO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBjbGFzcyByZXR1cm5lZCBmcm9tIHRoZSBEYXRhT2JqZWN0IGFkZENoaWxkcmVuIGNhbGwgb3IgZnJvbSBvbkFkZENoaWxkcmVuIGlmIHJlbW90ZWx5IGNyZWF0ZWQuXHJcbiAqL1xyXG5jbGFzcyBEYXRhT2JqZWN0Q2hpbGQgLyogaW1wbGVtZW50cyBTeW5jU3RhdHVzICovIHtcclxuICAvKiBwcml2YXRlXHJcblxyXG4gIC0tLS1ldmVudCBoYW5kbGVycy0tLS1cclxuICBfb25SZXNwb25zZUhhbmRsZXI6IChldmVudCkgPT4gdm9pZFxyXG4gICovXHJcblxyXG4gIC8qKlxyXG4gICAqIEBpZ25vcmVcclxuICAgKiBTaG91bGQgbm90IGJlIHVzZWQgZGlyZWN0bHkgYnkgSHlwZXJ0aWVzLiBJdCdzIGNhbGxlZCBieSB0aGUgRGF0YU9iamVjdC5hZGRDaGlsZFxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGlucHV0KSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGZ1bmN0aW9uIHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcihwYXIpIHtcclxuICAgICAgdGhyb3cgJ1tEYXRhT2JqZWN0Q2hpbGRdICcgKyBwYXIgKyAnIG1hbmRhdG9yeSBwYXJhbWV0ZXIgaXMgbWlzc2luZyc7XHJcbiAgICB9XHJcblxyXG4gICAgaW5wdXQucGFyZW50ID8gIF90aGlzLl9wYXJlbnQgPSBpbnB1dC5wYXJlbnQgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3BhcmVudCcpO1xyXG4gICAgaW5wdXQudXJsID8gIF90aGlzLl91cmwgPSBpbnB1dC51cmwgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3VybCcpO1xyXG4gICAgaW5wdXQuY3JlYXRlZCA/IF90aGlzLl9jcmVhdGVkID0gaW5wdXQuY3JlYXRlZCA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcignY3JlYXRlZCcpO1xyXG4gICAgaW5wdXQucmVwb3J0ZXIgPyBfdGhpcy5fcmVwb3J0ZXIgPSBpbnB1dC5yZXBvcnRlciA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigncmVwb3J0ZXInKTtcclxuICAgIGlucHV0LnJ1bnRpbWUgPyBfdGhpcy5fcnVudGltZSA9IGlucHV0LnJ1bnRpbWUgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3J1bnRpbWUnKTtcclxuICAgIGlucHV0LnNjaGVtYSA/IF90aGlzLl9zY2hlbWEgPSBpbnB1dC5zY2hlbWEgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3NjaGVtYScpO1xyXG4gICAgaW5wdXQucGFyZW50T2JqZWN0ID8gX3RoaXMuX3BhcmVudE9iamVjdCA9IGlucHV0LnBhcmVudE9iamVjdCA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigncGFyZW50T2JqZWN0Jyk7XHJcblxyXG4gICAgaWYgKGlucHV0Lm5hbWUpIF90aGlzLl9uYW1lID0gaW5wdXQubmFtZTtcclxuICAgIGlmIChpbnB1dC5kZXNjcmlwdGlvbikgX3RoaXMuX2Rlc2NyaXB0aW9uID0gaW5wdXQuZGVzY3JpcHRpb247XHJcbiAgICBpZiAoaW5wdXQudGFncykgX3RoaXMuX3RhZ3MgPSBpbnB1dC50YWdzO1xyXG4gICAgaWYgKGlucHV0LnJlc291cmNlcykgX3RoaXMuX3Jlc291cmNlcyA9IGlucHV0LnJlc291cmNlcztcclxuICAgIGlmIChpbnB1dC5vYnNlcnZlclN0b3JhZ2UpIF90aGlzLl9vYnNlcnZlclN0b3JhZ2UgPSBpbnB1dC5vYnNlcnZlclN0b3JhZ2U7XHJcbiAgICBpZiAoaW5wdXQucHVibGljT2JzZXJ2YXRpb24pIF90aGlzLl9wdWJsaWNPYnNlcnZhdGlvbiA9IGlucHV0LnB1YmxpY09ic2VydmF0aW9uO1xyXG5cclxuICAgIF90aGlzLl9jaGlsZElkID0gaW5wdXQudXJsO1xyXG5cclxuICAgIGlmIChpbnB1dC5kYXRhKSB7XHJcbiAgICAgIF90aGlzLl9zeW5jT2JqID0gbmV3IFN5bmNPYmplY3QoaW5wdXQuZGF0YSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBfdGhpcy5fc3luY09iaiA9IG5ldyBTeW5jT2JqZWN0KHt9KTtcclxuICAgIH1cclxuXHJcbiAgICBsb2cubG9nKCdbRGF0YU9iamVjdENoaWxkIC0gIENvbnN0cnVjdG9yXSAtICcsIF90aGlzLl9zeW5jT2JqKTtcclxuXHJcbiAgICBfdGhpcy5fYnVzID0gX3RoaXMuX3BhcmVudE9iamVjdC5fYnVzO1xyXG4gICAgX3RoaXMuX293bmVyID0gX3RoaXMuX3BhcmVudE9iamVjdC5fb3duZXI7XHJcblxyXG4gICAgX3RoaXMuX2FsbG9jYXRlTGlzdGVuZXJzKCk7XHJcblxyXG4gICAgX3RoaXMuX21ldGFkYXRhID0gaW5wdXQ7XHJcblxyXG4gICAgLy8gZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5kYXRhO1xyXG4gICAgZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5wYXJlbnRPYmplY3Q7XHJcblxyXG4gICAgX3RoaXMuX3NoYXJpbmdTdGF0dXMgPSBmYWxzZTtcclxuXHJcbiAgfVxyXG5cclxuICBnZXQgc2hhcmVhYmxlKCkge1xyXG4gICAgbGV0IHNoYXJlYWJsZSA9IHRoaXMubWV0YWRhdGE7XHJcbiAgICBzaGFyZWFibGUuZGF0YSA9IHRoaXMuZGF0YTtcclxuXHJcbiAgICByZXR1cm4gc2hhcmVhYmxlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVGhpcyBmdW5jdGlvbiBpcyB1c2VkIHRvIHNoYXJlIHRoZSBjaGlsZCBPYmplY3QgYW1vbmcgYXV0aG9yaXNlZCBIeXBlcnRpZXNcclxuICAgKiBAcGFyYW0gIHtib29sZWFufSAgICAgcmVwb3J0ZXIgIElmIHRydWUgdGhlIGNoaWxkIG9iamVjdCBpcyBvbmx5IHNoYXJlZCB0byBQYXJlbnQgcmVwb3J0ZXJcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPEpTT04+fSAgICAgICAgSXQgcmV0dXJucyBhIHByb21pc2Ugd2l0aCB0aGUgc2hhcmluZyByZXN1bHRzLlxyXG4gICAqL1xyXG5cclxuICBzaGFyZSh0b1JlcG9ydGVyKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIF90aGlzLl9zaGFyaW5nU3RhdHVzID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cclxuICAgICAgbGV0IHRvO1xyXG4gICAgICBsZXQgcmVwb3J0ZXIgPSB0b1JlcG9ydGVyO1xyXG5cclxuICAgICAgaWYgKHJlcG9ydGVyKSB7XHJcbiAgICAgICAgdG8gPSBfdGhpcy5tZXRhZGF0YS5wYXJlbnQ7XHJcbiAgICAgIH0gZWxzZSB0byA9IF90aGlzLm1ldGFkYXRhLnBhcmVudCArICcvY2hpbGRyZW4vJyArIF90aGlzLm1ldGFkYXRhLmNoaWxkcmVuO1xyXG5cclxuICAgICAgbGV0IGNoaWxkVmFsdWUgPSBfdGhpcy5tZXRhZGF0YTtcclxuICAgICAgY2hpbGRWYWx1ZS5kYXRhID0gX3RoaXMuZGF0YTtcclxuXHJcbiAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgZGlyZWN0bHkgdG8gYSByZXNvdXJjZSBjaGlsZCBhZGRyZXNzOiBNZXNzYWdlQnVzXHJcbiAgICAgIGxldCByZXF1ZXN0TXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdjcmVhdGUnLCBmcm9tOiBfdGhpcy5tZXRhZGF0YS5yZXBvcnRlciwgdG86IHRvLFxyXG4gICAgICAgIGJvZHk6IHsgcmVzb3VyY2U6IGNoaWxkVmFsdWUudXJsLCB2YWx1ZTogY2hpbGRWYWx1ZSB9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBpZiAoX3RoaXMuaWRlbnRpdHkpICAgICAge1xyXG4gICAgICAgIHJlcXVlc3RNc2cuYm9keS5pZGVudGl0eSA9IF90aGlzLmlkZW50aXR5O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvL3RvIGJlIHVzZWQgdG8gZGlzYWJsZSBtdXR1YWwgYXV0aGVudGljYXRpb24gZm9yIGxlZ2FjeSB1c2Vyc1xyXG5cclxuICAgICAgaWYgKF90aGlzLl9wYXJlbnRPYmplY3QuZGF0YS5oYXNPd25Qcm9wZXJ0eSgnbXV0dWFsJykpIHJlcXVlc3RNc2cuYm9keS5tdXR1YWwgPSBfdGhpcy5fcGFyZW50T2JqZWN0LmRhdGEubXV0dWFsO1xyXG5cclxuICAgICAgaWYgKF90aGlzLl9wYXJlbnRPYmplY3QubWV0YWRhdGEucmVwb3J0ZXIgPT09IF90aGlzLm1ldGFkYXRhLnJlcG9ydGVyKSB7XHJcbiAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShkZWVwQ2xvbmUocmVxdWVzdE1zZykpO1xyXG4gICAgICAgIHJldHVybiByZXNvbHZlKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgIGxldCBjYWxsYmFjayA9IChyZXBseSkgPT4ge1xyXG5cclxuICAgICAgICAgIGlmIChyZXBseS50byA9PT0gX3RoaXMuX3JlcG9ydGVyKSB7XHJcbiAgICAgICAgICAgIF90aGlzLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyZXF1ZXN0TXNnLmZyb20sIHJlcGx5LmlkKTtcclxuXHJcbiAgICAgICAgICAgIGxvZy5sb2coJ1tTeW5jaGVyLkRhdGFPYmplY3RDaGlsZC5zaGFyZV0gUGFyZW50IHJlcG9ydGVyIHJlcGx5ICcsIHJlcGx5KTtcclxuXHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSB7XHJcbiAgICAgICAgICAgICAgY29kZTogcmVwbHkuYm9keSAmJiByZXBseS5ib2R5LmNvZGUgPyByZXBseS5ib2R5LmNvZGUgOiA1MDAsXHJcbiAgICAgICAgICAgICAgZGVzYzogcmVwbHkuYm9keSAmJiByZXBseS5ib2R5LmRlc2MgPyByZXBseS5ib2R5LmRlc2MgOiAnVW5rbm93bidcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPCAzMDApIHtcclxuICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShyZXN1bHQpO1xyXG4gICAgICAgICAgICB9IGVsc2UgcmV0dXJuIHJlamVjdChyZXN1bHQpO1xyXG5cclxuICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBsZXQgaWQgPSBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKGRlZXBDbG9uZShyZXF1ZXN0TXNnKSwgY2FsbGJhY2ssIGZhbHNlKTtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCgoKT0+IHtcclxuXHJcbiAgICAgICAgICAvLyBJZiBSZXBvcnRlciBkb2VzICBub3QgcmVwbHkgdGhlIHByb21pc2UgaXMgcmVqZWN0ZWRcclxuICAgICAgICAgIF90aGlzLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyZXF1ZXN0TXNnLmZyb20sIGlkKTtcclxuXHJcbiAgICAgICAgICBsZXQgcmVzdWx0ID0ge1xyXG4gICAgICAgICAgICBjb2RlOiA0MDgsXHJcbiAgICAgICAgICAgIGRlc2M6ICd0aW1vdXQnXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgcmV0dXJuIHJlamVjdChyZXN1bHQpO1xyXG5cclxuICAgICAgICB9LCAzMDAwKTtcclxuXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogVGhpcyBmdW5jdGlvbiBpcyB1c2VkIHRvIHNoYXJlIHRoZSBjaGlsZCBPYmplY3QgYW1vbmcgYXV0aG9yaXNlZCBIeXBlcnRpZXNcclxuICAgICAqIEBwYXJhbSAge2Jvb2xlYW59ICAgICByZXBvcnRlciAgSWYgdHJ1ZSB0aGUgY2hpbGQgb2JqZWN0IGlzIG9ubHkgc2hhcmVkIHRvIFBhcmVudCByZXBvcnRlclxyXG4gICAgICogQHJldHVybiB7UHJvbWlzZTxKU09OPn0gICAgICAgIEl0IHJldHVybnMgYSBwcm9taXNlIHdpdGggdGhlIHNoYXJpbmcgcmVzdWx0cy5cclxuICAgICAqL1xyXG5cclxuICBzdG9yZSgpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgbGV0IGNoaWxkID0ge307XHJcbiAgICBsZXQga2V5ID0gX3RoaXMubWV0YWRhdGEuY2hpbGRyZW4gKyAnLicgKyBfdGhpcy5tZXRhZGF0YS51cmw7XHJcblxyXG4gICAgY2hpbGQudmFsdWUgPSBfdGhpcy5tZXRhZGF0YTtcclxuICAgIGNoaWxkLmlkZW50aXR5ID0gX3RoaXMuaWRlbnRpdHk7XHJcblxyXG4gICAgbGV0IG1zZyA9IHtcclxuXHJcbiAgICAgIGZyb206IF90aGlzLm1ldGFkYXRhLnJlcG9ydGVyLFxyXG4gICAgICB0bzogX3RoaXMuX3BhcmVudE9iamVjdC5fc3luY2hlci5fc3ViVVJMLFxyXG4gICAgICB0eXBlOiAnY3JlYXRlJyxcclxuICAgICAgYm9keToge1xyXG4gICAgICAgIHJlc291cmNlOiBfdGhpcy5tZXRhZGF0YS5wYXJlbnQsXHJcbiAgICAgICAgYXR0cmlidXRlOiBrZXksXHJcbiAgICAgICAgdmFsdWU6IGNoaWxkXHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgbG9nLmxvZygnW0RhdGFPYmplY3RDaGlsZC5zdG9yZV06JywgbXNnKTtcclxuXHJcbiAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKG1zZyk7XHJcbiAgfVxyXG5cclxuICBfYWxsb2NhdGVMaXN0ZW5lcnMoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIC8vdGhpcyBpcyBvbmx5IG5lZWRlZCBmb3IgY2hpbGRyZW4gcmVwb3J0ZXJzXHJcbiAgICBpZiAoX3RoaXMuX3JlcG9ydGVyID09PSBfdGhpcy5fb3duZXIpIHtcclxuICAgICAgX3RoaXMuX2xpc3RlbmVyID0gX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihfdGhpcy5fcmVwb3J0ZXIsIChtc2cpID0+IHtcclxuICAgICAgICBpZiAobXNnLnR5cGUgPT09ICdyZXNwb25zZScgJiYgbXNnLmlkID09PSBfdGhpcy5fbXNnSWQpIHtcclxuICAgICAgICAgIGxvZy5sb2coJ0RhdGFPYmplY3RDaGlsZC5vblJlc3BvbnNlOicsIG1zZyk7XHJcbiAgICAgICAgICBfdGhpcy5fb25SZXNwb25zZShtc2cpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfcmVsZWFzZUxpc3RlbmVycygpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgaWYgKF90aGlzLl9saXN0ZW5lcikge1xyXG4gICAgICBfdGhpcy5fbGlzdGVuZXIucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWxlYXNlIGFuZCBkZWxldGUgb2JqZWN0IGRhdGFcclxuICAgKi9cclxuICBkZWxldGUoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuXHJcbiAgICBfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO1xyXG5cclxuICAgIC8vVE9ETzogc2VuZCBkZWxldGUgbWVzc2FnZSA/XHJcblxyXG4gICAgLy8gbm90aGluZyB0byBiZSBkb25lXHJcbiAgICAvLyByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcclxuICAgIC8vICAgbG9nLmxvZygnW0RhdGFPYmplY3RDaGlsZC5kZWxldGVdJyk7XHJcbiAgICAvLyAgIHJlc29sdmUoKTtcclxuICAgIC8vIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWxsIE1ldGFkYXRhIGFib3V0IHRoZSBDaGlsZCBEYXRhIE9iamVjdFxyXG4gICAqIEB0eXBlIHtPYmplY3R9IC1cclxuICAgKi9cclxuICBnZXQgbWV0YWRhdGEoKSB7IHJldHVybiB0aGlzLl9tZXRhZGF0YTsgfVxyXG5cclxuICAvKipcclxuICAgKiBDaGlsZHJlbiBJRCBnZW5lcmF0ZWQgb24gYWRkQ2hpbGRyZW4uIFVuaXF1ZSBpZGVudGlmaWVyXHJcbiAgICogQHR5cGUge1VSTH0gLSBVUkwgb2YgdGhlIGZvcm1hdCA8SHlwZXJ0eVVSTD4jPG51bWVyaWMtc2VxdWVuY2U+XHJcbiAgICovXHJcbiAgZ2V0IGNoaWxkSWQoKSB7IHJldHVybiB0aGlzLl9jaGlsZElkOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIERhdGEgU3RydWN0dXJlIHRvIGJlIHN5bmNocm9uaXplZC5cclxuICAgKiBAdHlwZSB7SlNPTn0gLSBKU09OIHN0cnVjdHVyZSB0aGF0IHNob3VsZCBmb2xsb3cgdGhlIGRlZmluZWQgc2NoZW1hLCBpZiBhbnkuXHJcbiAgICovXHJcblxyXG4gIGdldCBzaGFyaW5nU3RhdHVzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3NoYXJpbmdTdGF0dXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICogRGF0YSBTdHJ1Y3R1cmUgdG8gYmUgc3luY2hyb25pemVkLlxyXG4gICAgKiBAdHlwZSB7SlNPTn0gLSBKU09OIHN0cnVjdHVyZSB0aGF0IHNob3VsZCBmb2xsb3cgdGhlIGRlZmluZWQgc2NoZW1hLCBpZiBhbnkuXHJcbiAgICAqL1xyXG5cclxuICBnZXQgZGF0YSgpIHsgcmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YTsgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXQgZm9yIHRoaXMgZGF0YU9iamVjdENoaWxkIGFuIGlkZW50aXR5XHJcbiAgICogQG1ldGhvZCBpZGVudGl0eVxyXG4gICAqIEBwYXJhbSAge0lkZW50aXR5fSBpZGVudGl0eSBpZGVudGl0eSBmcm9tIHdobyBjcmVhdGVkIHRoZSBtZXNzYWdlXHJcbiAgICovXHJcbiAgc2V0IGlkZW50aXR5KGlkZW50aXR5KSB7IHRoaXMuX2lkZW50aXR5ID0gaWRlbnRpdHk7IH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IGZvciB0aGlzIGRhdGFPYmplY3RDaGlsZCBhbiBpZGVudGl0eVxyXG4gICAqIEBtZXRob2QgaWRlbnRpdHlcclxuICAgKiBAcmV0dXJuIHtJZGVudGl0eX0gaWRlbnRpdHkgZnJvbSB3aG8gY3JlYXRlZCB0aGUgbWVzc2FnZVxyXG4gICAqL1xyXG4gIGdldCBpZGVudGl0eSgpIHsgcmV0dXJuIHRoaXMuX2lkZW50aXR5OyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlZ2lzdGVyIHRoZSBjaGFuZ2UgbGlzdGVuZXJzIHNlbnQgYnkgdGhlIHJlcG9ydGVyIGNoaWxkXHJcbiAgICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFja1xyXG4gICAqL1xyXG4gIG9uQ2hhbmdlKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLl9zeW5jT2JqLm9ic2VydmUoKGV2ZW50KSA9PiB7XHJcbiAgICAgIGxvZy5sb2coJ1tEYXRhT2JqZWN0Q2hpbGQgLSBvYnNlcnZlcl0gLSAnLCBldmVudCk7XHJcbiAgICAgIGNhbGxiYWNrKGV2ZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0dXAgdGhlIGNhbGxiYWNrIHRvIHByb2Nlc3MgcmVzcG9uc2Ugbm90aWZpY2F0aW9ucyBvZiB0aGUgY3JlYXRlc1xyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAgKi9cclxuICBvblJlc3BvbnNlKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLl9vblJlc3BvbnNlSGFuZGxlciA9IGNhbGxiYWNrO1xyXG4gIH1cclxuXHJcbiAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gYSByZW1vdGUgRGF0YU9iamVjdCAtPiBfb25DaGlsZENyZWF0ZVxyXG4gIF9vblJlc3BvbnNlKG1zZykge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBsZXQgZXZlbnQgPSB7XHJcbiAgICAgIHR5cGU6IG1zZy50eXBlLFxyXG4gICAgICB1cmw6IG1zZy5ib2R5LnNvdXJjZSxcclxuICAgICAgY29kZTogbXNnLmJvZHkuY29kZVxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoX3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyKSB7XHJcbiAgICAgIF90aGlzLl9vblJlc3BvbnNlSGFuZGxlcihldmVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGF0YU9iamVjdENoaWxkO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc3luY2hlci9EYXRhT2JqZWN0Q2hpbGQuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///118\n")},function(module,exports,__webpack_require__){eval("__webpack_require__(120);\nmodule.exports = __webpack_require__(0).Object.assign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9hc3NpZ24uanM/NTc3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6IjExOS5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5hc3NpZ247XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2Fzc2lnbi5qc1xuLy8gbW9kdWxlIGlkID0gMTE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA5IDExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///119\n")},function(module,exports,__webpack_require__){eval("// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(6);\n\n$export($export.S + $export.F, 'Object', { assign: __webpack_require__(121) });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24uanM/NDc4YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBLDBDQUEwQyxtQ0FBc0MiLCJmaWxlIjoiMTIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4zLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GLCAnT2JqZWN0JywgeyBhc3NpZ246IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKSB9KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDkgMTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///120\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = __webpack_require__(20);\nvar gOPS = __webpack_require__(43);\nvar pIE = __webpack_require__(29);\nvar toObject = __webpack_require__(32);\nvar IObject = __webpack_require__(55);\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(13)(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1hc3NpZ24uanM/NGU4ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsVUFBVSxFQUFFO0FBQ2hELG1CQUFtQixzQ0FBc0M7QUFDekQsQ0FBQyxxQ0FBcUM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJmaWxlIjoiMTIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKVxudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgJGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIHNob3VsZCB3b3JrIHdpdGggc3ltYm9scyBhbmQgc2hvdWxkIGhhdmUgZGV0ZXJtaW5pc3RpYyBwcm9wZXJ0eSBvcmRlciAoVjggYnVnKVxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBTID0gU3ltYm9sKCk7XG4gIHZhciBLID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtTXSA9IDc7XG4gIEsuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGspIHsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdmFyIFQgPSB0b09iamVjdCh0YXJnZXQpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICB2YXIgaXNFbnVtID0gcElFLmY7XG4gIHdoaWxlIChhTGVuID4gaW5kZXgpIHtcbiAgICB2YXIgUyA9IElPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICB2YXIga2V5cyA9IGdldFN5bWJvbHMgPyBnZXRLZXlzKFMpLmNvbmNhdChnZXRTeW1ib2xzKFMpKSA6IGdldEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSBpZiAoaXNFbnVtLmNhbGwoUywga2V5ID0ga2V5c1tqKytdKSkgVFtrZXldID0gU1trZXldO1xuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qc1xuLy8gbW9kdWxlIGlkID0gMTIxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA5IDExIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///121\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = __webpack_require__(47);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _assign = __webpack_require__(78);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _ProxyObject = __webpack_require__(117);\n\nvar _ProxyObject2 = _interopRequireDefault(_ProxyObject);\n\nvar _DataObjectChild = __webpack_require__(118);\n\nvar _DataObjectChild2 = _interopRequireDefault(_DataObjectChild);\n\nvar _utils = __webpack_require__(19);\n\nvar _HypertyResourceFactory = __webpack_require__(128);\n\nvar _HypertyResourceFactory2 = _interopRequireDefault(_HypertyResourceFactory);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('DataObject'); /**\r\n                                          * Copyright 2016 PT Inovação e Sistemas SA\r\n                                          * Copyright 2016 INESC-ID\r\n                                          * Copyright 2016 QUOBIS NETWORKS SL\r\n                                          * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                          * Copyright 2016 ORANGE SA\r\n                                          * Copyright 2016 Deutsche Telekom AG\r\n                                          * Copyright 2016 Apizee\r\n                                          * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                          *\r\n                                          * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                          * you may not use this file except in compliance with the License.\r\n                                          * You may obtain a copy of the License at\r\n                                          *\r\n                                          *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                          *\r\n                                          * Unless required by applicable law or agreed to in writing, software\r\n                                          * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                          * See the License for the specific language governing permissions and\r\n                                          * limitations under the License.\r\n                                          **/\n\n// Log System\n\n/**\r\n * Main extension class for observers and reporters, with common properties and methods.\r\n * Children management is common for observers and reporters.\r\n */\nvar DataObject = function () {\n  /* private\r\n  _version: number\r\n    _owner: HypertyURL\r\n  _url: ObjectURL\r\n  _schema: Schema\r\n  _bus: MiniBus\r\n  _status: on | paused\r\n  _syncObj: SyncData\r\n    _children: { id: DataObjectChild }\r\n  _childrenListeners: [MsgListener]\r\n    ----event handlers----\r\n  _onAddChildHandler: (event) => void\r\n  */\n\n  /**\r\n   * @ignore\r\n   * Should not be used directly by Hyperties. It's called by the Syncher create or subscribe method's\r\n   */\n\n  function DataObject(input) {\n    (0, _classCallCheck3.default)(this, DataObject);\n\n    var _this = this;\n\n    function throwMandatoryParmMissingError(par) {\n      throw '[DataObject] ' + par + ' mandatory parameter is missing';\n    }\n\n    input.syncher ? _this._syncher = input.syncher : throwMandatoryParmMissingError('syncher');\n    input.url ? _this._url = input.url : throwMandatoryParmMissingError('url');\n    input.created ? _this._created = input.created : throwMandatoryParmMissingError('created');\n    input.reporter ? _this._reporter = input.reporter : throwMandatoryParmMissingError('reporter');\n    input.runtime ? _this._runtime = input.runtime : throwMandatoryParmMissingError('runtime');\n    input.schema ? _this._schema = input.schema : throwMandatoryParmMissingError('schema');\n    input.name ? _this._name = input.name : throwMandatoryParmMissingError('name');\n\n    _this._status = input.status;\n\n    if (input.data) {\n      _this._syncObj = new _ProxyObject2.default(input.data);\n    } else {\n      _this._syncObj = new _ProxyObject2.default({});\n    }\n    _this._childrens = input.childrens;\n\n    //TODO: For Further Study\n    _this._mutual = input.mutual;\n\n    _this._version = 0;\n    _this._childId = 0;\n    _this._childrenListeners = []; //bus listeners per children\n    _this._onAddChildrenHandler; //Hyperty side handlers to process child objects created by remote Hyperties\n\n    _this._resumed = input.resume;\n\n    if (input.resume) {\n      _this._version = input.version;\n    }\n\n    _this._owner = input.syncher._owner;\n    _this._bus = input.syncher._bus;\n\n    if (input.description) _this._description = input.description;\n    if (input.tags) _this._tags = input.tags;\n    if (input.resources) _this._resources = input.resources;\n    if (input.observerStorage) _this._observerStorage = input.observerStorage;\n    if (input.publicObservation) _this._publicObservation = input.publicObservation;\n\n    _this._metadata = (0, _assign2.default)(input);\n    _this._metadata.lastModified = _this._metadata.created;\n\n    delete _this._metadata.data;\n    delete _this._metadata.syncher;\n    delete _this._metadata.authorise;\n\n    _this._hypertyResourceFactory = new _HypertyResourceFactory2.default();\n    _this._childrenObjects = {};\n    _this._sharedChilds = []; //childObjects that were not sent yet to Reporters\n  }\n\n  (0, _createClass3.default)(DataObject, [{\n    key: '_getLastChildId',\n    value: function _getLastChildId() {\n      var _this = this;\n\n      var childIdInt = 0;\n      var childIdString = _this._owner + '#' + childIdInt;\n\n      (0, _keys2.default)(_this._childrens).filter(function (key) {\n        if (_this._childrens[key].childId > childIdString) {\n          childIdString = _this._childrens[key].childId;\n        }\n      });\n\n      return childIdInt = Number(childIdString.split('#')[1]);\n    }\n  }, {\n    key: '_allocateListeners',\n    value: function _allocateListeners() {\n      var _this2 = this;\n\n      var _this = this;\n\n      var childBaseURL = _this._url + '/children/';\n      log.log('[Data Object - AllocateListeners] - ', _this._childrens);\n      if (_this._childrens) {\n        _this._childrens.forEach(function (child) {\n          var childURL = childBaseURL + child;\n          var listener = _this._bus.addListener(childURL, function (msg) {\n            //ignore msg sent by himself\n            if (msg.from !== _this2._owner) {\n              log.log('DataObject-Children-RCV: ', msg);\n              switch (msg.type) {\n                case 'create':\n                  _this._onChildCreate(msg);break;\n                case 'delete':\n                  log.log(msg);break;\n                default:\n                  _this._changeChildren(msg);break;\n              }\n            }\n          });\n\n          _this._childrenListeners.push(listener);\n        });\n      }\n    }\n  }, {\n    key: '_releaseListeners',\n    value: function _releaseListeners() {\n      var _this = this;\n\n      _this._childrenListeners.forEach(function (listener) {\n        listener.remove();\n      });\n\n      (0, _keys2.default)(_this._childrenObjects).forEach(function (children) {\n        (0, _keys2.default)(_this._childrenObjects[children]).forEach(function (child) {\n          _this._childrenObjects[children][child]._releaseListeners();\n        });\n      });\n    }\n\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: 'resumeChildrens',\n    value: function resumeChildrens(childrens) {\n      var _this3 = this;\n\n      var _this = this;\n\n      var childIdString = this._owner + '#' + this._childId;\n\n      //setup childrens data from subscription\n      (0, _keys2.default)(childrens).forEach(function (childrenResource) {\n        var children = childrens[childrenResource];\n\n        //_this._childrenObjects[childrenResource] = {};\n        (0, _keys2.default)(children).forEach(function (childId) {\n          var newChild = false;\n\n          if (!_this._childrenObjects.hasOwnProperty(childrenResource)) _this._childrenObjects[childrenResource] = {};\n\n          if (children[childId].value.resourceType && !_this._childrenObjects[childrenResource].hasOwnProperty(childId)) {\n            _this._childrenObjects[childrenResource][childId] = _this._resumeHypertyResource(children[childId]);\n            newChild = true;\n          } else if (!_this._childrenObjects[childrenResource].hasOwnProperty(childId)) {\n\n            _this._childrenObjects[childrenResource][childId] = _this._resumeChild(children[childId]);\n            log.log('[DataObject.resumeChildrens] new DataObjectChild: ', _this._childrenObjects[childrenResource][childId]);\n            newChild = true;\n          }\n\n          if (newChild && childId > childIdString) {\n            childIdString = childId;\n            log.log('[DataObjectReporter.resumeChildrens] - resuming: ', _this3._childrenObjects[childrenResource][childId]);\n          }\n        });\n      });\n\n      this._childId = Number(childIdString.split('#')[1]);\n    }\n  }, {\n    key: '_resumeChild',\n    value: function _resumeChild(input) {\n      var _this = this;\n      var childInput = input.value;\n      childInput.parentObject = _this;\n      childInput.parent = _this._url;\n\n      var child = new _DataObjectChild2.default(childInput);\n\n      child.identity = input.identity;\n\n      var event = {\n        type: 'create',\n        from: child.reporter,\n        url: child.parent,\n        value: child.data,\n        childId: child.url,\n        identity: child.identity,\n        child: child\n      };\n\n      if (child.resourceType) {\n        event.resource = child;\n      }\n\n      if (_this._onAddChildrenHandler) _this._onAddChildrenHandler(event);\n\n      return child;\n    }\n  }, {\n    key: '_resumeHypertyResource',\n    value: function _resumeHypertyResource(input) {\n      var _this = this;\n      var childInput = input.value;\n      childInput.parentObject = _this;\n      childInput.parent = _this._url;\n\n      var hypertyResource = _this._hypertyResourceFactory.createHypertyResource(false, childInput.resourceType, childInput);\n\n      hypertyResource.identity = input.identity;\n\n      var event = {\n        type: 'create',\n        from: hypertyResource.reporter,\n        url: hypertyResource.parent,\n        value: hypertyResource.data,\n        childId: hypertyResource.url,\n        identity: hypertyResource.identity,\n        child: hypertyResource\n      };\n\n      if (hypertyResource.resourceType) {\n        event.resource = hypertyResource;\n      }\n\n      if (_this._onAddChildrenHandler) _this._onAddChildrenHandler(event);\n\n      return hypertyResource;\n    }\n\n    /**\r\n     * All Metadata about the Data Object\r\n     * @type {Object} -\r\n     */\n\n  }, {\n    key: 'pause',\n\n\n    /**\r\n     * @ignore\r\n     */\n    value: function pause() {\n      //TODO: this feature needs more analise\n      throw 'Not implemented';\n    }\n\n    /**\r\n     * @ignore\r\n     */\n\n  }, {\n    key: 'resume',\n    value: function resume() {\n      //TODO: this feature needs more analise\n      throw 'Not implemented';\n    }\n\n    /**\r\n     * @ignore\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      //TODO: should remove the subscription and send message unsubscribe?\n      throw 'Not implemented';\n    }\n\n    /**\r\n     * Create and add a DataObjectChild to a children collection.\r\n     * @param {String} children - Children name where the child is added.\r\n     * @param {JSON} initialData - Initial data of the child\r\n     * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\r\n     * @param  {SyncChildMetadata} input - (optional) All additional metadata about the DataObjectChild.\r\n     * @return {Promise<DataObjectChild>} - Return Promise to a new DataObjectChild.\r\n     */\n\n  }, {\n    key: 'addChild',\n    value: function addChild(children, initialData, identity, input) {\n      var _this = this;\n      var newChild = void 0;\n\n      //returns promise, in the future, the API may change to asynchronous call\n      return new _promise2.default(function (resolve) {\n\n        var msgChildPath = _this._url + '/children/' + children;\n\n        var childInput = _this._getChildInput(input);\n        childInput.data = initialData;\n        childInput.children = children;\n        newChild = new _DataObjectChild2.default(childInput);\n\n        if (identity) newChild.identity = identity;\n\n        newChild.share();\n\n        log.log('[DataObject.addChild] added ', newChild);\n\n        newChild.onChange(function (event) {\n          _this._onChange(event, { path: msgChildPath, childId: childInput.url });\n        });\n\n        if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n        _this._childrenObjects[children][childInput.url] = newChild;\n\n        resolve(newChild);\n      });\n    }\n  }, {\n    key: '_deleteChildrens',\n    value: function _deleteChildrens() {\n\n      var _this = this;\n      var deletePromises = [];\n\n      return new _promise2.default(function (resolve) {\n        if (_this.childrens) {\n          log.log('[DataObject.deleteChildrens]', _this.childrens);\n          var children = void 0;\n\n          for (children in _this.childrens) {\n            var child = void 0;\n            for (child in _this.childrens[children]) {\n              var childObj = _this.childrens[children][child];\n              log.log('[DataObject._deleteChildrens] child', childObj);\n              if (childObj.metadata.hasOwnProperty('resourceType')) deletePromises.push(_this.childrens[children][child].delete());\n            }\n          }\n        }\n\n        log.log('[DataObject._deleteChildrens] promises ', deletePromises);\n\n        if (deletePromises.length > 0) {\n          _promise2.default.all(deletePromises).then(function () {\n            resolve('[DataObject._deleteChildrens] done');\n          });\n        } else resolve('[DataObject._deleteChildrens] nothing to delete');\n      });\n    }\n  }, {\n    key: '_getChildInput',\n    value: function _getChildInput(input) {\n      var _this = this;\n      var childInput = (0, _assign2.default)({}, input);\n\n      _this._childId++;\n      childInput.url = _this._owner + '#' + _this._childId;\n\n      childInput.parentObject = _this;\n      childInput.reporter = _this._owner;\n      childInput.created = new Date().toISOString();\n      childInput.runtime = _this._syncher._runtimeUrl;\n      childInput.p2pHandler = _this._syncher._p2pHandler;\n      childInput.p2pRequester = _this._syncher._p2pRequester;\n      childInput.schema = _this._schema;\n      childInput.parent = _this.url;\n\n      return childInput;\n    }\n  }, {\n    key: 'addHypertyResource',\n    value: function addHypertyResource(children, type, resource, identity, input) {\n      var _this = this;\n\n      //returns promise, in the future, the API may change to asynchronous call\n      return new _promise2.default(function (resolve) {\n\n        var hypertyResource = void 0;\n        var msgChildPath = _this._url + '/children/' + children;\n\n        var childInput = _this._getChildInput(input);\n        childInput.children = children;\n\n        _this._hypertyResourceFactory.createHypertyResourceWithContent(true, type, resource, childInput).then(function (resource) {\n          hypertyResource = resource;\n\n          if (identity) hypertyResource.identity = identity;\n\n          hypertyResource.share();\n\n          log.log('[DataObject.addHypertyResource] added ', hypertyResource);\n\n          hypertyResource.onChange(function (event) {\n            _this._onChange(event, { path: msgChildPath, childId: hypertyResource.childId });\n          });\n\n          if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n          _this._childrenObjects[children][hypertyResource.childId] = hypertyResource;\n\n          resolve(hypertyResource);\n        });\n      });\n    }\n\n    /**\r\n     * Setup the callback to process create and delete of childrens.\r\n     * @param {function(event: MsgEvent)} callback\r\n     * TODO: add childrenId to support different handlers per children\r\n     */\n\n  }, {\n    key: 'onAddChild',\n    value: function onAddChild(callback) {\n\n      this._onAddChildrenHandler = callback;\n    }\n\n    //FLOW-IN: message received from a remote DataObject -> addChild\n\n  }, {\n    key: '_onChildCreate',\n    value: function _onChildCreate(msg) {\n      var _this = this;\n\n      log.log('[DataObject._onChildCreate] receivedBy ' + _this._owner + ' : ', msg);\n\n      var response = {\n        from: msg.to,\n        to: msg.from,\n        type: 'response',\n        id: msg.id,\n        body: {\n          code: 100\n        }\n      };\n\n      _this._bus.postMessage(response);\n\n      if (msg.body.value.resourceType) {\n        _this._onHypertyResourceAdded(msg);\n      } else _this._onChildAdded(msg);\n    }\n  }, {\n    key: '_onChildAdded',\n    value: function _onChildAdded(msg) {\n      var _this = this;\n      var childInput = (0, _utils.deepClone)(msg.body.value);\n      childInput.parentObject = _this;\n\n      var children = childInput.children;\n\n      var newChild = new _DataObjectChild2.default(childInput);\n      newChild.identity = msg.body.identity;\n\n      if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n      _this._childrenObjects[children][childInput.url] = newChild;\n\n      if (msg.to === _this.metadata.url) newChild.store();\n\n      _this._hypertyEvt(msg, newChild);\n    }\n  }, {\n    key: '_onHypertyResourceAdded',\n    value: function _onHypertyResourceAdded(msg) {\n      var _this = this;\n      var input = msg.body.value;\n      var hypertyResource = void 0;\n\n      var children = input.children;\n\n      input.parentObject = _this;\n\n      hypertyResource = _this._hypertyResourceFactory.createHypertyResource(false, input.resourceType, input);\n      hypertyResource.identity = msg.body.identity;\n\n      if (!_this._childrenObjects.hasOwnProperty(children)) _this._childrenObjects[children] = {};\n\n      _this._childrenObjects[children][hypertyResource.childId] = hypertyResource;\n\n      _this._hypertyEvt(msg, hypertyResource);\n\n      // locally store messages that are directly sent to the hyperty\n      // ie to sync with messages sent when offline\n\n      if (msg.to === _this.metadata.url) hypertyResource.store();\n    }\n  }, {\n    key: '_hypertyEvt',\n    value: function _hypertyEvt(msg, child) {\n      var _this = this;\n\n      var event = {\n        type: msg.type,\n        from: msg.from,\n        url: msg.to,\n        value: child.data,\n        childId: child.url,\n        identity: msg.body.identity,\n        child: child\n      };\n\n      if (child.resourceType) {\n        event.resource = child;\n      }\n\n      if (_this._onAddChildrenHandler) _this._onAddChildrenHandler(event);\n    }\n\n    //send delta messages to subscriptions\n\n  }, {\n    key: '_onChange',\n    value: function _onChange(event, childInfo) {\n      var _this = this;\n\n      _this._metadata.lastModified = new Date().toISOString();\n\n      _this._version++;\n\n      if (_this._status === 'live') {\n        //FLOW-OUT: this message will be sent directly to a resource changes address: MessageBus\n        var changeMsg = {\n          type: 'update', from: _this._url, to: _this._url + '/changes',\n          body: { version: _this._version, source: _this._owner, attribute: event.field, lastModified: _this._metadata.lastModified }\n        };\n\n        log.log('[DataObject - _onChange] - ', event, childInfo, changeMsg);\n\n        if (event.oType === _ProxyObject.ObjectType.OBJECT) {\n          if (event.cType !== _ProxyObject.ChangeType.REMOVE) {\n            changeMsg.body.value = (0, _utils.deepClone)(event.data);\n          }\n        } else {\n          changeMsg.body.attributeType = event.oType;\n          changeMsg.body.value = event.data;\n          if (event.cType !== _ProxyObject.ChangeType.UPDATE) {\n            changeMsg.body.operation = event.cType;\n          }\n        }\n\n        //childInfo must have (path, childId)\n        if (childInfo) {\n          changeMsg.to = childInfo.path;\n          changeMsg.body.resource = childInfo.childId;\n        }\n\n        //TODO: For Further Study\n        if (!_this.data._mutual) changeMsg.body.mutual = _this._mutual;\n\n        _this._bus.postMessage(changeMsg);\n      }\n    }\n\n    //FLOW-IN: delta message received from a remote DataObjectReporter or DataObjectChild when changing data\n\n  }, {\n    key: '_changeObject',\n    value: function _changeObject(syncObj, msg) {\n      var _this = this;\n\n      //TODO: update version ?\n      //how to handle an incorrect version ? Example: receive a version 3 when the observer is in version 1, where is the version 2 ?\n      //will we need to confirm the reception ?\n      if (_this._version + 1 <= msg.body.version) {\n        _this._version = msg.body.version;\n        var path = msg.body.attribute;\n        var value = void 0;\n        if ((0, _typeof3.default)(msg.body.value) === 'object') value = (0, _utils.deepClone)(msg.body.value);else value = msg.body.value;\n\n        var findResult = syncObj.findBefore(path);\n\n        if (msg.body.lastModified) {\n          _this._metadata.lastModified = msg.body.lastModified;\n        } else {\n          _this._metadata.lastModified = new Date().toISOString();\n        }\n\n        if (msg.body.attributeType === _ProxyObject.ObjectType.ARRAY) {\n          if (msg.body.operation === _ProxyObject.ChangeType.ADD) {\n            var arr = findResult.obj;\n            var index = findResult.last;\n            Array.prototype.splice.apply(arr, [index, 0].concat(value));\n          } else if (msg.body.operation === _ProxyObject.ChangeType.REMOVE) {\n            var _arr = findResult.obj;\n            var _index = findResult.last;\n            _arr.splice(_index, value);\n          } else {\n            findResult.obj[findResult.last] = value; // UPDATE\n          }\n        } else {\n          if (msg.body.hasOwnProperty('value')) {\n            findResult.obj[findResult.last] = value; // UPDATE or ADD\n          } else {\n            delete findResult.obj[findResult.last]; // REMOVE\n          }\n        }\n      } else {\n        //TODO: how to handle unsynchronized versions?\n        log.log('UNSYNCHRONIZED VERSION: (data => ' + _this._version + ', msg => ' + msg.body.version + ')');\n      }\n    }\n\n    //FLOW-IN: message received from a remote DataObjectChild when changing data\n\n  }, {\n    key: '_changeChildren',\n    value: function _changeChildren(msg) {\n      var _this = this;\n      var dividedURL = (0, _utils.divideURL)(msg.to);\n      var identity = dividedURL.identity;\n      var resource = identity ? identity.substring(identity.lastIndexOf('/') + 1) : undefined;\n\n      var childId = msg.body.resource;\n      var children = _this._childrenObjects[resource][childId];\n\n      log.log('Change children: ', _this._owner, msg, resource);\n\n      if (children) {\n        _this._changeObject(children._syncObj, msg);\n      } else {\n        log.warn('No children found for: ', childId);\n      }\n    }\n  }, {\n    key: 'metadata',\n    get: function get() {\n      return this._metadata;\n    }\n\n    /**\r\n     * Object URL of reporter or observer\r\n     * @type {ObjectURL}\r\n     */\n\n  }, {\n    key: 'url',\n    get: function get() {\n      return this._url;\n    }\n\n    /**\r\n     * Object schema URL (this field is not yet stable, and is subsject to change)\r\n     * @type {SchemaURL}\r\n     */\n\n  }, {\n    key: 'schema',\n    get: function get() {\n      return this._schema;\n    }\n\n    /**\r\n     * Status of the reporter or observer connection (this field is not yet stable, and is subsject to change)\r\n     * @type {Status} - Enum of: on | paused\r\n     */\n\n  }, {\n    key: 'status',\n    get: function get() {\n      return this._status;\n    }\n\n    /**\r\n     * Data structure to be synchronized.\r\n     * @type {JSON} - JSON structure that should follow the defined schema, if any.\r\n     */\n\n  }, {\n    key: 'data',\n    get: function get() {\n      return this._syncObj.data;\n    }\n\n    /**\r\n     * All created children's since the subscription, doesn't contain all children's since reporter creation.\r\n     * @type {Object<ChildId, DataObjectChild>}\r\n     */\n\n  }, {\n    key: 'childrens',\n    get: function get() {\n      return this._childrenObjects;\n    }\n  }]);\n  return DataObject;\n}();\n\nexports.default = DataObject;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///122\n")},function(module,exports){eval('//     proxy-observe v0.0.18\r\n//     Copyright (c) 2015, 2016 Simon Y. Blackwell, AnyWhichWay\r\n//     MIT License - http://opensource.org/licenses/mit-license.php\r\n(function() {\r\n\t"use strict";\r\n\t// Creates and returns a Proxy wrapping a target so that all changes can be trapped and forwarded to\r\n\t// a callback. The callback takes an array of changes just like the traditional original Chrome Object.observe\r\n\t// {object:<object changed>,name:<field changed>,type:add|update|delete|reconfigure|preventExtensions|setPrototype,oldValue:<old value if update | delete>}\r\n\t// The acceptlist can be add|update|delete|reconfigure|preventExtensions|setPrototype.\r\n\t// v 0.0.10 to support pausing and restarting observation two additional constructor arguments are available to Object.observe:\r\n\t// pausable - create the Observer so it can be paused\r\n\t// pause - create observer in paused state\r\n\t// if pausable is true then an additional method deliver(ignorePrevious) is available to start delivery\r\n\t// to pause delivery set a property called pause on the function deliver to true\r\n\t// pausable is optional to reduce the chance of shadowing a property or method on any existing code called deliver\r\n\tif(!Object.observe && typeof(Proxy)==="function") {\r\n\t\tfunction Observer(target,callback,acceptlist,pausable,pause,delay) {\r\n\t    \tvar me = this, proxy;\r\n\t    \tfunction deliver(ignorePrevious,delay) {\r\n\t    \t\tdeliver.delay = delay;\r\n\t    \t\tif(!deliver.pause) {\r\n\t        \t\tif(me.changeset.length>0) {\r\n\t        \t\t\tif(!ignorePrevious) {\r\n\t\t    \t    \t\tvar changes = me.changeset.filter(function(change) { return !acceptlist || acceptlist.indexOf(change.type)>=0; });\r\n\t\t        \t\t\tif(changes.length>0) {\r\n\t\t        \t\t\t\tcallback(changes);\r\n\t\t        \t\t\t}\r\n\t        \t\t\t}\r\n\t        \t\t\tme.changeset = [];\r\n\t        \t\t}\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \tdeliver.pause = pause;\r\n\t    \tdeliver.delay = delay;\r\n\t\t    me.get = function(target, property) {\r\n\t\t    \tif(property==="__observer__") {\r\n\t\t    \t\treturn me;\r\n\t\t    \t}\r\n\t\t    \tif(property==="unobserve") {\r\n\t\t    \t\treturn function() {\r\n\t\t    \t\t\tObject.unobserve(target);\r\n\t\t    \t\t\treturn target;\r\n\t\t    \t\t};\r\n\t\t    \t}\r\n\t\t    \tif(property==="deliver") {\r\n\t\t    \t\treturn deliver;\r\n\t\t    \t}\r\n\t\t    \treturn target[property];\r\n\t\t    }\r\n\t    \tme.target = target;\r\n\t    \tme.changeset = [];\r\n\t    \tif(!me.target.__observerCallbacks__) {\r\n\t    \t\t// __observerCallbacks__ is used as an index to get at the proxy which is the observer, so we can unobserve\r\n\t    \t\tObject.defineProperty(target,"__observerCallbacks__",{enumerable:false,configurable:true,writable:false,value:[]});\r\n\t    \t\tObject.defineProperty(target,"__observers__",{enumerable:false,configurable:true,writable:false,value:[]});\r\n\t    \t}\r\n\t    \tme.target.__observerCallbacks__.push(callback);\r\n\t    \tme.target.__observers__.push(this);\r\n\t    \tproxy = new Proxy(target,me);\r\n\t    \tdeliver(false,delay);\r\n\t    \treturn proxy;\r\n\t    }\r\n\t\tObserver.prototype.deliver = function() {\r\n\t\t\treturn this.get(null,"deliver");\r\n\t\t}\r\n\t    Observer.prototype.set = function(target, property, value) { // , receiver\r\n\t    \tvar oldvalue = target[property];\r\n\t    \tvar type = (oldvalue===undefined ? "add" : "update");\r\n\t    \ttarget[property] = value;\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && (!this.acceptlist || this.acceptlist.indexOf(type)>=0)) {\r\n\t        \tvar change = {object:target,name:property,type:type},\r\n\t        \t\tstart = this.changeset.length === 0,\r\n\t        \t\tdeliver = this.deliver();\r\n\t        \tif(type==="update") {\r\n\t        \t\tchange.oldValue = oldvalue;\r\n\t        \t}\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.deleteProperty = function(target, property) {\r\n\t    \tvar oldvalue = target[property];\r\n\t    \t//if(typeof(oldvalue)!=="undefined") {\r\n\t\t    \tdelete target[property];\r\n\t\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("delete")>=0) {\r\n\t\t        \tvar change = {object:target,name:property,type:"delete",oldValue:oldvalue},\r\n\t\t        \t\tstart = this.changeset.length === 0,\r\n\t\t        \t\tdeliver = this.deliver();\r\n\t\t        \tthis.changeset.push(change);\r\n\t\t        \tif(start) {\r\n\t\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t\t        \t}\r\n\t\t    \t}\r\n\t    \t//}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.defineProperty = function(target, property, descriptor) {\r\n\t    \tObject.defineProperty(target, property, descriptor);\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("reconfigure")>=0) {\r\n\t        \tvar change = {object:target,name:property,type:"reconfigure"},\r\n        \t\t\tstart = this.changeset.length === 0,\r\n        \t\t\tdeliver = this.deliver();\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.setPrototypeOf = function(target, prototype) {\r\n\t    \tvar oldvalue = Object.getPrototypeOf(target);\r\n\t    \tObject.setPrototypeOf(target, prototype);\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("setPrototype")>=0) {\r\n\t        \tvar change = {object:target,name:"__proto__",type:"setPrototype",oldValue:oldvalue},\r\n    \t\t\t\tstart = this.changeset.length === 0,\r\n    \t\t\t\tdeliver = this.deliver();\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Observer.prototype.preventExtensions = function(target) {\r\n\t        Object.preventExtensions(target);\r\n\t    \tif(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("preventExtensions")>=0) {\r\n\t        \tvar change = {object:target,type:"preventExtensions"},\r\n\t\t\t\t\tstart = this.changeset.length === 0,\r\n\t\t\t\t\tdeliver = this.deliver();\r\n\t        \tthis.changeset.push(change);\r\n\t        \tif(start) {\r\n\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t        \t}\r\n\t    \t}\r\n\t    \treturn true;\r\n\t    };\r\n\t    Object.observe = function(object,callback,acceptlist,pausable,pause,delay) {\r\n\t    \treturn new Observer(object,callback,acceptlist,pausable,pause,delay);\r\n\t    };\r\n\t    Object.unobserve = function(object,callback) {\r\n\t    \tif(object.__observerCallbacks__) {\r\n\t    \t\tif(!callback) {\r\n\t    \t\t\tobject.__observerCallbacks__.splice(0,object.__observerCallbacks__.length);\r\n\t    \t\t\tobject.__observers__.splice(0,object.__observers__.length);\r\n\t    \t\t\treturn;\r\n\t    \t\t}\r\n\t    \t\tobject.__observerCallbacks__.forEach(function(observercallback,i) {\r\n\t    \t\t\tif(callback===observercallback) {\r\n\t    \t\t\t\tobject.__observerCallbacks__.splice(i,1);\r\n\t    \t\t\t\tdelete object.__observers__[i].callback;\r\n\t    \t\t\t\tobject.__observers__.splice(i,1);\r\n\t    \t\t\t}\r\n\t    \t\t});\r\n\t    \t}\r\n\t    };\r\n\t    Array.observe = function(object,callback,acceptlist,pausable,pause,delay) {\r\n\t    \tif(!(object instanceof Array) && !Array.isArray(object)) {\r\n\t    \t\tthrow new TypeError("First argument to Array.observer is not an Array");\r\n\t    \t}\r\n            \tacceptlist = acceptlist || ["add", "update", "delete", "splice"];\r\n\t    \tvar arrayproxy = new Proxy(object,{get: function(target,property) {\r\n\t    \t\tif(property==="unobserve") {\r\n\t\t    \t\treturn function(callback) {\r\n\t\t    \t\t\tif(callback) {\r\n\t\t    \t\t\t\treturn Object.unobserve(target,callback);\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\treturn target.unobserve();\r\n\t\t    \t\t};\r\n\t\t    \t}\r\n\t    \t\tif(property==="splice") {\r\n\t    \t\t\treturn function(start,end) {\r\n\t    \t\t\t\tif(typeof(start)!=="number" || typeof(end)!=="number") {\r\n\t    \t\t\t\t\tthrow new TypeError("First two arguments to Array splice are not number, number");\r\n\t    \t\t\t\t}\r\n\t    \t    \t\tvar removed = this.slice(start,start+end),\r\n\t    \t    \t\t\taddedCount = (arguments.length > 1 ? arguments.length-2 : 0),\r\n\t    \t    \t\t\tchange =  {object:object,type:"splice",index:start,removed:removed,addedCount:addedCount};\r\n\t    \t    \t\ttarget.splice.apply(target,arguments);\r\n\t    \t    \t\tif(acceptlist.indexOf("splice")>=0) {\r\n\t    \t    \t\t\tvar start = proxy.__observer__.changeset.length === 0,\r\n\t    \t        \t\t\tdeliver = proxy.__observer__.deliver();\r\n\t    \t    \t\t\tproxy.__observer__.changeset.push(change);\r\n\t    \t    \t\t\tif(start) {\r\n\t    \t\t        \t\tdeliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));\r\n\t    \t\t        \t}\r\n\t    \t    \t\t}\r\n\t    \t    \t}\r\n\t    \t\t}\r\n\t    \t\tif(property==="push") {\r\n\t    \t\t\t return function(item) {\r\n\t    \t\t    \treturn this.splice(this.length,0,item);\r\n\t    \t\t    }\r\n\t    \t\t}\r\n\t    \t\tif(property==="pop") {\r\n\t    \t\t\t return function() {\r\n\t    \t\t    \treturn this.splice(this.length-1,1);\r\n\t    \t\t    }\r\n\t    \t\t}\r\n\t    \t\tif(property==="unshift") {\r\n\t    \t\t\t return function(item) {\r\n    \t\t    \t\treturn this.splice(0,0,item);\r\n    \t\t    \t}\r\n\t    \t\t}\r\n\t    \t\tif(property==="shift") {\r\n\t    \t\t\treturn function() {\r\n\t    \t    \t\treturn this.splice(0,1);\r\n\t    \t    \t}\r\n\t    \t\t}\r\n\t    \t\treturn target[property];\r\n\t    \t}});\r\n\t    \tvar proxy = Object.observe(arrayproxy,function(changeset) { \r\n\t    \t\tvar changes = changeset.filter(function(change) { return change.name!=="length" && change.name!=="add" && (!acceptlist || acceptlist.indexOf(change.type)>=0); });\r\n\t    \t\tif(changes.length>0) {\r\n\t    \t\t\tcallback(changes);\r\n\t    \t\t}\r\n\t    \t},acceptlist,pausable,pause,delay);\r\n\t    \treturn proxy;\r\n\t    };\r\n\t    Array.unobserve = function(object,callback) {\r\n\t\t  return object.unobserve(callback);\r\n\t    }\r\n\t}\r\n\tObject.deepObserve = function(object,callback,parts) {\r\n\r\n\t\tparts = (parts ? parts : []);\r\n\r\n\t\tvar toTypeName = function(obj) {\r\n\t\t\treturn ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\r\n\t\t}\r\n\r\n\t\tfunction reobserve(value, parts) {\r\n\t\t\tvar keys = Object.keys(value);\r\n\t\t\tkeys.forEach(function(key) {\r\n\t\t\t\tif((toTypeName(value[key]) === \'object\' || toTypeName(value[key]) === \'array\') && !value[key].hasOwnProperty(\'__observers__\')) {\r\n\t\t\t\t\tvar newparts = parts.slice(0);\r\n\t\t\t\t\tnewparts.push(key);\r\n\t\t\t\t\tvalue[key] = Object.deepObserve(value[key],callback,newparts);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treobserve(object, parts);\r\n\r\n\t\tvar observed = Object.observe(object,function(changeset) {\r\n\t\t\tvar changes = [];\r\n\t\t\tfunction recurse(name,rootObject,oldObject,newObject,path) {\r\n\t\t\t\tif(newObject instanceof Object) {\r\n\t\t\t\t\tvar newkeys = Object.keys(newObject);\r\n\t\t\t\t\tnewkeys.forEach(function(key) {\r\n\t\t\t\t\t\tif(!oldObject || (oldObject[key]!==newObject[key])) {\r\n\t\t\t\t\t\t\tvar oldvalue = (oldObject && oldObject[key]!==undefined ? oldObject[key] : undefined),\r\n\t\t\t\t\t\t\t\tchange = (oldvalue===undefined ? "add" : "update"),\r\n\t\t\t\t\t\t\t\tkeypath = path + "." + key;\r\n\r\n\t\t\t\t\t\t\tchanges.push({name:name,object:rootObject,type:change,oldValue:oldvalue,newValue:newObject[key],keypath:keypath});\r\n\t\t\t\t\t\t\trecurse(name,rootObject,oldvalue,newObject[key],keypath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if(oldObject instanceof Object) {\r\n\t\t\t\t\tvar oldkeys = Object.keys(oldObject);\r\n\t\t\t\t\toldkeys.forEach(function(key) {\r\n\t\t\t\t\t\tvar change = (newObject===null ? "update" : "delete"),\r\n\t\t\t\t\t\t\tkeypath = path + "." + key;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tchanges.push({name:name,object:rootObject,type:change,oldValue:oldObject[key],newValue:newObject,keypath:keypath});\r\n\t\t\t\t\t\trecurse(name,rootObject,oldObject[key],undefined,keypath);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchangeset.forEach(function(change) {\r\n\t\t\t\tvar keypath = (parts.length>0 ? parts.join(".") + "." : "") + change.name;\r\n\r\n\t\t\t\tif (change.type === "update" || change.type === "add") { \r\n\t\t\t\t\treobserve(change.object, parts);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchanges.push({name:change.name,object:change.object,type:change.type,oldValue:change.oldValue,newValue:change.object[change.name],keypath:keypath});\r\n\t\t\t\trecurse(change.name,change.object,change.oldValue,change.object[change.name],keypath);\r\n\t\t\t});\r\n\t\t\tcallback(changes);\r\n\t\t});\r\n\t\treturn observed;\r\n\t};\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///123\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getPrototypeOf = __webpack_require__(25);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(33);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(34);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _HypertyResource2 = __webpack_require__(129);\n\nvar _HypertyResource3 = _interopRequireDefault(_HypertyResource2);\n\nvar _utils = __webpack_require__(19);\n\nvar _ImageTools = __webpack_require__(130);\n\nvar _ImageTools2 = _interopRequireDefault(_ImageTools);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('FileHypertyResource'); /**\r\n                                                   * The Hyperty Resource Data Model is used to model resouces handled by Hyperties and Data Objects including chat messages, files, real time human audio and video..\r\n                                                   *\r\n                                                   */\n\n// Log System\n\nvar FileHypertyResource = function (_HypertyResource) {\n  (0, _inherits3.default)(FileHypertyResource, _HypertyResource);\n\n  /**\r\n  * FileHypertyResource constructor\r\n  *\r\n  * @param  {URL} owner HypertyURL of the Hyperty handling this resource\r\n  * @param  {URL} runtime Runtime URL where this resource is hosted\r\n  * @param  {Bus} bus sandbox message bus\r\n  * @param  {DataObject} parent Parent Data Object where the HypertyResource is handled as a child\r\n  * @param  {File} file file to be encoded as HypertyResource\r\n  * @param  {Boolean} isReporter indicates if parent is Reporter or an Observer\r\n  * @param  {Array} input optional input parameters\r\n  */\n\n  function FileHypertyResource(isSender, input) {\n    (0, _classCallCheck3.default)(this, FileHypertyResource);\n\n    var _this2 = (0, _possibleConstructorReturn3.default)(this, (FileHypertyResource.__proto__ || (0, _getPrototypeOf2.default)(FileHypertyResource)).call(this, isSender, input));\n\n    var _this = _this2;\n\n    _this.metadata.resourceType = 'file';\n\n    return _this2;\n  }\n\n  (0, _createClass3.default)(FileHypertyResource, [{\n    key: 'init',\n    value: function init(file) {\n      var _this = this;\n\n      if (!file) throw new Error('[FileHypertyResource.constructor] missing mandatory *file* input ');\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this._metadata.name = file.name;\n        _this._metadata.lastModified = file.lastModified;\n        _this._metadata.size = file.size;\n        _this._metadata.mimetype = file.type;\n\n        log.log('[FileHypertyResource.init] file: ', file);\n\n        if (_this._isSender) {\n\n          var mimetype = file.type.split('/')[0];\n\n          switch (mimetype) {\n            case 'image':\n              _this._getImagePreview(file).then(function (preview) {\n                _this._metadata.preview = preview;\n                _this._content = file;\n                resolve();\n              });\n              break;\n            default:\n              _this._content = file;\n              resolve();\n              break;\n          }\n\n          // if too big lets store as File and asArray Buffer\n\n          //  if (file.size > _this.arraybufferSizeLimit) {\n          /*  } else {\r\n                let reader = new FileReader();\r\n                reader.onload = function(theFile) {\r\n                  log.log('[FileHypertyResource.init] file loaded ', theFile);\r\n                  _this._content = theFile.target.result;\r\n                resolve();\r\n                }\r\n                reader.readAsArrayBuffer(file);\r\n              }*/\n        } else {\n          _this._content = file.content;\n          if (file.preview) _this._metadata.preview = file.preview;\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: '_getImagePreview',\n    value: function _getImagePreview(image) {\n      var reader = new FileReader();\n      return new _promise2.default(function (resolve, reject) {\n\n        _ImageTools2.default.resize(image, {\n          width: 100, // maximum width\n          height: 100 // maximum height\n        }, function (blob, didItResize) {\n          // didItResize will be true if it managed to resize it, otherwise false (and will return the original file as 'blob')\n          if (didItResize) {\n            reader.readAsDataURL(blob);\n\n            reader.onload = function (theImage) {\n              resolve(theImage.target.result);\n            };\n          } else {\n            log.warn('[FileHypertyResource._getImagePreview] unable to create image preview from original image ');\n            resolve(undefined);\n          }\n        });\n      });\n    }\n  }, {\n    key: 'toMessage',\n\n\n    /**\r\n    * Share file as a data object child of a data object parent\r\n    *\r\n    * @param  {string} children Data Object Parent children name where the file is shared\r\n    */\n\n    /*  share(children) {\r\n        let _this = this;\r\n    \r\n        return new Promise(function(resolve, reject) {\r\n          //to be improved and adapted\r\n    \r\n          if (!_this._isSender) return reject('[FileHypertyResource.share] Observers can not share files');\r\n    \r\n          let file2share = _this._metadata;\r\n          file2share.type = _this._type;\r\n    \r\n          _this._parent.addChild(children, file2share).then(function(dataObjectChild) {\r\n            log.log('[FileHypertyResource.share] object child: ', dataObjectChild);\r\n    \r\n            let sharedFile = dataObjectChild.data;\r\n    \r\n            resolve(sharedFile);\r\n    \r\n          }).catch(function(reason) {\r\n            log.error('Reason:', reason);\r\n            reject(reason);\r\n          });\r\n    \r\n        });\r\n    \r\n      }*/\n\n    /**\r\n    * Returns file content optimised to be displayed in a message line\r\n    *\r\n    * @param  {string} children Data Object Parent children name where the file is shared\r\n    */\n\n    value: function toMessage() {\n      //TODO: to be implemented. It should return HTML with img attribute as a thumbnail plus the name.\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      var _this = this;\n      return _this._metadata.name;\n    }\n  }, {\n    key: 'preview',\n    get: function get() {\n      var _this = this;\n      return _this._metadata.preview;\n    }\n  }]);\n  return FileHypertyResource;\n}(_HypertyResource3.default);\n\nexports.default = FileHypertyResource;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///124\n")},function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__(126), __esModule: true };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/MmJhMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IiLCJmaWxlIjoiMTI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qc1xuLy8gbW9kdWxlIGlkID0gMTI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///125\n')},function(module,exports,__webpack_require__){eval("__webpack_require__(127);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/NzI3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgcmV0dXJuICRPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///126\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = __webpack_require__(12);\nvar $getOwnPropertyDescriptor = __webpack_require__(46).f;\n\n__webpack_require__(44)('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/ODg4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwiZmlsZSI6IjEyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///127\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _FileHypertyResource = __webpack_require__(124);\n\nvar _FileHypertyResource2 = _interopRequireDefault(_FileHypertyResource);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HypertyResourceFactory = function () {\n\n  /**\r\n  * HypertyResourceFactory constructor\r\n  *\r\n  */\n\n  function HypertyResourceFactory() {\n    (0, _classCallCheck3.default)(this, HypertyResourceFactory);\n  }\n\n  (0, _createClass3.default)(HypertyResourceFactory, [{\n    key: 'createHypertyResource',\n    value: function createHypertyResource(isSender, type, metadata) {\n      var newHypertyResource = void 0;\n\n      switch (type) {\n        case 'file':\n          newHypertyResource = new _FileHypertyResource2.default(isSender, metadata);\n          break;\n        default:\n          throw new Error('[HypertyResourceFactory.createHypertyResource] not supported type: ', type);\n          break;\n      }\n\n      return newHypertyResource;\n    }\n  }, {\n    key: 'createHypertyResourceWithContent',\n    value: function createHypertyResourceWithContent(isSender, type, content, metadata) {\n      var newHypertyResource = void 0;\n\n      return new _promise2.default(function (resolve) {\n\n        switch (type) {\n          case 'file':\n            newHypertyResource = new _FileHypertyResource2.default(isSender, metadata);\n            break;\n          default:\n            reject();\n            break;\n        }\n\n        newHypertyResource.init(content).then(function () {\n          return newHypertyResource.save(); // skip save?\n        }).then(function () {\n          resolve(newHypertyResource);\n        });\n      });\n    }\n  }]);\n  return HypertyResourceFactory;\n}(); /**\r\n     * The Hyperty Resource Data Model is used to model resouces handled by Hyperties and Data Objects including chat messages, files, real time human audio and video..\r\n     *\r\n     */\n\nexports.default = HypertyResourceFactory;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaHlwZXJ0eS1yZXNvdXJjZS9IeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmpzPzhlZTciXSwibmFtZXMiOlsiSHlwZXJ0eVJlc291cmNlRmFjdG9yeSIsImlzU2VuZGVyIiwidHlwZSIsIm1ldGFkYXRhIiwibmV3SHlwZXJ0eVJlc291cmNlIiwiRmlsZUh5cGVydHlSZXNvdXJjZSIsIkVycm9yIiwiY29udGVudCIsInJlc29sdmUiLCJyZWplY3QiLCJpbml0IiwidGhlbiIsInNhdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtBOzs7Ozs7SUFFTUEsc0I7O0FBRUo7Ozs7O0FBS0Esb0NBQWM7QUFBQTtBQUViOzs7OzBDQUVxQkMsUSxFQUFVQyxJLEVBQU1DLFEsRUFBVTtBQUM5QyxVQUFJQywyQkFBSjs7QUFFQSxjQUFRRixJQUFSO0FBQ0UsYUFBSyxNQUFMO0FBQ0VFLCtCQUFxQixJQUFJQyw2QkFBSixDQUF3QkosUUFBeEIsRUFBa0NFLFFBQWxDLENBQXJCO0FBQ0E7QUFDRjtBQUNFLGdCQUFNLElBQUlHLEtBQUosQ0FBVSxxRUFBVixFQUFpRkosSUFBakYsQ0FBTjtBQUNBO0FBTko7O0FBU0UsYUFBT0Usa0JBQVA7QUFFSDs7O3FEQUVnQ0gsUSxFQUFVQyxJLEVBQU1LLE8sRUFBU0osUSxFQUFVO0FBQ2xFLFVBQUlDLDJCQUFKOztBQUVBLGFBQU8sc0JBQVksVUFBQ0ksT0FBRCxFQUFhOztBQUVoQyxnQkFBUU4sSUFBUjtBQUNFLGVBQUssTUFBTDtBQUNFRSxpQ0FBcUIsSUFBSUMsNkJBQUosQ0FBd0JKLFFBQXhCLEVBQWtDRSxRQUFsQyxDQUFyQjtBQUNBO0FBQ0Y7QUFDRU07QUFDQTtBQU5KOztBQVNFTCwyQkFBbUJNLElBQW5CLENBQXdCSCxPQUF4QixFQUFpQ0ksSUFBakMsQ0FBc0MsWUFBSTtBQUN4QyxpQkFBT1AsbUJBQW1CUSxJQUFuQixFQUFQLENBRHdDLENBQ1A7QUFDbEMsU0FGRCxFQUVHRCxJQUZILENBRVEsWUFBSTtBQUNWSCxrQkFBUUosa0JBQVI7QUFDRCxTQUpEO0FBTUgsT0FqQlEsQ0FBUDtBQW1CRDs7O0tBeERIOzs7OztrQkEyRGVKLHNCIiwiZmlsZSI6IjEyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4qIFRoZSBIeXBlcnR5IFJlc291cmNlIERhdGEgTW9kZWwgaXMgdXNlZCB0byBtb2RlbCByZXNvdWNlcyBoYW5kbGVkIGJ5IEh5cGVydGllcyBhbmQgRGF0YSBPYmplY3RzIGluY2x1ZGluZyBjaGF0IG1lc3NhZ2VzLCBmaWxlcywgcmVhbCB0aW1lIGh1bWFuIGF1ZGlvIGFuZCB2aWRlby4uXHJcbipcclxuKi9cclxuXHJcbmltcG9ydCBGaWxlSHlwZXJ0eVJlc291cmNlIGZyb20gJy4vRmlsZUh5cGVydHlSZXNvdXJjZSc7XHJcblxyXG5jbGFzcyBIeXBlcnR5UmVzb3VyY2VGYWN0b3J5IHtcclxuXHJcbiAgLyoqXHJcbiAgKiBIeXBlcnR5UmVzb3VyY2VGYWN0b3J5IGNvbnN0cnVjdG9yXHJcbiAgKlxyXG4gICovXHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICB9XHJcblxyXG4gIGNyZWF0ZUh5cGVydHlSZXNvdXJjZShpc1NlbmRlciwgdHlwZSwgbWV0YWRhdGEpIHtcclxuICAgIGxldCBuZXdIeXBlcnR5UmVzb3VyY2U7XHJcblxyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgIGNhc2UgJ2ZpbGUnOlxyXG4gICAgICAgIG5ld0h5cGVydHlSZXNvdXJjZSA9IG5ldyBGaWxlSHlwZXJ0eVJlc291cmNlKGlzU2VuZGVyLCBtZXRhZGF0YSk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdbSHlwZXJ0eVJlc291cmNlRmFjdG9yeS5jcmVhdGVIeXBlcnR5UmVzb3VyY2VdIG5vdCBzdXBwb3J0ZWQgdHlwZTogJywgdHlwZSk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybihuZXdIeXBlcnR5UmVzb3VyY2UpO1xyXG5cclxuICB9XHJcblxyXG4gIGNyZWF0ZUh5cGVydHlSZXNvdXJjZVdpdGhDb250ZW50KGlzU2VuZGVyLCB0eXBlLCBjb250ZW50LCBtZXRhZGF0YSkge1xyXG4gICAgbGV0IG5ld0h5cGVydHlSZXNvdXJjZTtcclxuXHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcclxuXHJcbiAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgY2FzZSAnZmlsZSc6XHJcbiAgICAgICAgbmV3SHlwZXJ0eVJlc291cmNlID0gbmV3IEZpbGVIeXBlcnR5UmVzb3VyY2UoaXNTZW5kZXIsIG1ldGFkYXRhKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZWplY3QoKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgbmV3SHlwZXJ0eVJlc291cmNlLmluaXQoY29udGVudCkudGhlbigoKT0+e1xyXG4gICAgICAgIHJldHVybiBuZXdIeXBlcnR5UmVzb3VyY2Uuc2F2ZSgpOy8vIHNraXAgc2F2ZT9cclxuICAgICAgfSkudGhlbigoKT0+e1xyXG4gICAgICAgIHJlc29sdmUobmV3SHlwZXJ0eVJlc291cmNlKTtcclxuICAgICAgfSk7XHJcblxyXG4gIH0pO1xyXG5cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEh5cGVydHlSZXNvdXJjZUZhY3Rvcnk7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9oeXBlcnR5LXJlc291cmNlL0h5cGVydHlSZXNvdXJjZUZhY3RvcnkuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///128\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getPrototypeOf = __webpack_require__(25);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(33);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = __webpack_require__(100);\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = __webpack_require__(34);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _utils = __webpack_require__(19);\n\nvar _DataObjectChild2 = __webpack_require__(118);\n\nvar _DataObjectChild3 = _interopRequireDefault(_DataObjectChild2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('HypertyResource'); /**\r\n                                               * The Hyperty Resource Data Model is used to model resouces handled by Hyperties and Data Objects including chat messages, files, real time human audio and video..\r\n                                               *\r\n                                               */\n\n// Log System\n\nvar HypertyResource = function (_DataObjectChild) {\n  (0, _inherits3.default)(HypertyResource, _DataObjectChild);\n\n  /**\r\n  * HypertyResource constructor\r\n  *\r\n  * @param  {URL} localRuntimeURL RuntimeURL of local runtime\r\n  * @param  {URL} input.owner HypertyURL of the Hyperty handling this resource\r\n  * @param  {URL} input.runtime Runtime URL where this resource is hosted\r\n  * @param  {Bus} input.bus sandbox message bus\r\n  * @param  {DataObject} input.parent Parent Data Object where the HypertyResource is handled as a child\r\n  * @param  {Boolean} isSender indicates if parent is Reporter or an Observer\r\n  * @param  {Array} input optional input parameters\r\n  */\n\n  function HypertyResource(isSender, input) {\n    (0, _classCallCheck3.default)(this, HypertyResource);\n\n    var _this2 = (0, _possibleConstructorReturn3.default)(this, (HypertyResource.__proto__ || (0, _getPrototypeOf2.default)(HypertyResource)).call(this, input));\n\n    var _this = _this2;\n\n    _this.arraybufferSizeLimit = 5242880; //above this limit content is not saved as ArrayBuffer\n\n    _this._isSender = isSender;\n\n    _this._localStorageURL = _this._parentObject._syncher._runtimeUrl + '/storage';\n\n    return _this2;\n  }\n\n  (0, _createClass3.default)(HypertyResource, [{\n    key: 'save',\n\n\n    /*\r\n    set parent(parent) {\r\n      let _this = this;\r\n      _this._parent = parent;\r\n    }*/\n\n    value: function save() {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var msg = {\n          from: _this._owner,\n          to: _this._localStorageURL,\n          type: 'create',\n          body: { value: (0, _utils.deepClone)(_this._metadata) }\n        };\n\n        var callback = function callback(reply) {\n          log.info('[HypertyResource.save] reply: ', reply);\n          _this._bus.removeResponseListener(_this._owner, reply.id);\n          if (reply.body.code === 200) {\n            if (reply.body.value) {\n              if (!_this._metadata.contentURL) _this._metadata.contentURL = [];\n              _this._metadata.contentURL.push(reply.body.value);\n            }\n            resolve();\n          } else reject(reply.body.code + ' ' + reply.body.desc);\n        };\n\n        msg.body.value.content = _this._content;\n\n        _this._bus.postMessage(msg, callback, false);\n      });\n    }\n\n    /**\r\n    * Function to Read HypertyResource\r\n    *\r\n    * @param  {} callback callback to be called with progress information in terms of percentage\r\n    * @return  {Promise}  input optional input parameters\r\n    */\n\n  }, {\n    key: 'read',\n    value: function read(callback) {\n      var _this = this;\n      log.info('[HypertyResource.read] ', this);\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (_this.content) {\n          resolve(_this);\n        } else {\n\n          //TODO: use an iteration to get online runtime storages when some are offline\n          var storage = _this._getBestContentURL(_this._metadata.contentURL);\n\n          log.log('Storage:', storage);\n\n          var msg = {\n            from: _this._owner,\n            to: storage.url,\n            type: 'read',\n            body: { resource: storage.url + '/' + storage.resource, p2p: true }\n          };\n\n          if (_this.metadata.p2pRequester && _this.metadata.p2pHandler) {\n            msg.body.p2pRequester = _this.metadata.p2pRequester;\n            msg.body.p2pHandler = _this.metadata.p2pHandler;\n          }\n\n          // get the resource first on the Local Hyperty Resource Storage;\n          _this._getBestResource(msg, callback).then(function (reply) {\n            log.info('[HypertyResource] - get locally the resource:', reply);\n            resolve(_this);\n          }).catch(function (reply) {\n\n            log.warn('[HypertyResource] - get locally the resource fail', reply);\n\n            // Generate new message to not use the same id of the last one;\n            var msg = {\n              from: _this._owner,\n              to: storage.remoteURL,\n              type: 'read',\n              body: { resource: storage.remoteURL + '/' + storage.resource, p2p: true }\n            };\n\n            if (_this.metadata.p2pRequester && _this.metadata.p2pHandler) {\n              msg.body.p2pRequester = _this.metadata.p2pRequester;\n              msg.body.p2pHandler = _this.metadata.p2pHandler;\n            }\n\n            // get the resource on the Remote Hyperty Resource Storage;\n            _this._getBestResource(msg, callback).then(function (reply) {\n              log.warn('[HypertyResource] - get remotely the resource', reply);\n              resolve(_this);\n            }).catch(function (reply) {\n              log.warn('[HypertyResource] - get remotely the resource fail', reply);\n              reject(reply.body.code + ' ' + reply.body.desc);\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: '_getBestResource',\n    value: function _getBestResource(msg, inProgressCallback) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var waitForResponse = setTimeout(function () {\n\n          // If Reporter does  not reply the promise is rejected\n          _this._bus.removeResponseListener(_this._owner, id);\n\n          msg.body.code = 408;\n          msg.body.desc = 'Response timeout';\n\n          return reject(msg);\n        }, 3000);\n\n        var callback = function callback(reply) {\n          log.log('[HypertyResource.read] reply: ', reply);\n          var id = reply.id;\n\n          clearTimeout(waitForResponse);\n\n          switch (reply.body.code) {\n            case 200:\n              _this._content = reply.body.value.content;\n\n              // save locally if not too big\n              if (reply.body.value.size < _this.arraybufferSizeLimit) {\n                _this.save();\n              }\n\n              _this._bus.removeResponseListener(_this._owner, id);\n              resolve(reply);\n\n              break;\n\n            case 183:\n              inProgressCallback(reply.body.value);\n              break;\n\n            default:\n              _this._bus.removeResponseListener(_this._owner, id);\n              reject(reply);\n              break;\n          }\n        };\n\n        var id = _this._bus.postMessage(msg, callback, false);\n      });\n    }\n\n    // Remove Hyperty from the local storage\n\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      var _this = this;\n\n      log.info('[HypertyResource.delete]', _this.metadata);\n\n      var msg = {\n        from: _this._owner,\n        to: _this._localStorageURL,\n        type: 'delete',\n        body: { resources: _this.metadata.contentURL }\n      };\n\n      return new _promise2.default(function (resolve) {\n        _this._bus.postMessage(msg, function (reply) {\n          if (reply.body.code < 300) resolve(true);else resolve(false);\n        });\n      });\n    }\n  }, {\n    key: '_getBestContentURL',\n    value: function _getBestContentURL(contentURLList) {\n\n      var _this = this;\n\n      var contentURL = contentURLList[0];\n      var splitedResource = contentURL.substr(contentURL.lastIndexOf('/') + 1);\n      var url = _this._localStorageURL; // contentURL.substr(0, contentURL.lastIndexOf('/'));\n      var remoteResource = contentURL.substr(0, contentURL.lastIndexOf('/'));\n\n      return { url: url, resource: splitedResource, remoteURL: remoteResource };\n    }\n  }, {\n    key: 'resourceType',\n    get: function get() {\n      var _this = this;\n      return _this.metadata.resourceType;\n    }\n  }, {\n    key: 'mimetype',\n    get: function get() {\n      var _this = this;\n      return _this._metadata.type;\n    }\n  }, {\n    key: 'content',\n    get: function get() {\n      var _this = this;\n      return _this._content;\n    }\n  }, {\n    key: 'contentURL',\n    get: function get() {\n      var _this = this;\n      return _this._metadata.contentURL;\n    }\n  }, {\n    key: 'shareable',\n    get: function get() {\n      var _this = this;\n      var shareable = (0, _get3.default)(HypertyResource.prototype.__proto__ || (0, _getPrototypeOf2.default)(HypertyResource.prototype), 'metadata', this);\n      shareable.resourceType = _this.resourceType;\n      return shareable;\n    }\n  }]);\n  return HypertyResource;\n}(_DataObjectChild3.default);\n\nexports.default = HypertyResource;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///129\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hasBlobConstructor = typeof Blob !== 'undefined' && function () {\n    try {\n        return Boolean(new Blob());\n    } catch (e) {\n        return false;\n    }\n}();\n\nvar hasArrayBufferViewSupport = hasBlobConstructor && typeof Uint8Array !== 'undefined' && function () {\n    try {\n        return new Blob([new Uint8Array(100)]).size === 100;\n    } catch (e) {\n        return false;\n    }\n}();\n\nvar hasToBlobSupport = typeof HTMLCanvasElement !== \"undefined\" ? HTMLCanvasElement.prototype.toBlob : false;\n\nvar hasBlobSupport = hasToBlobSupport || typeof Uint8Array !== 'undefined' && typeof ArrayBuffer !== 'undefined' && typeof atob !== 'undefined';\n\nvar hasReaderSupport = typeof FileReader !== 'undefined' || typeof URL !== 'undefined';\n\nvar ImageTools = function () {\n    function ImageTools() {\n        (0, _classCallCheck3.default)(this, ImageTools);\n    }\n\n    (0, _createClass3.default)(ImageTools, null, [{\n        key: 'resize',\n        value: function resize(file, maxDimensions, callback) {\n            if (typeof maxDimensions === 'function') {\n                callback = maxDimensions;\n                maxDimensions = {\n                    width: 640,\n                    height: 480\n                };\n            }\n\n            var maxWidth = maxDimensions.width;\n            var maxHeight = maxDimensions.height;\n\n            if (!ImageTools.isSupported() || !file.type.match(/image.*/)) {\n                callback(file, false);\n                return false;\n            }\n\n            if (file.type.match(/image\\/gif/)) {\n                // Not attempting, could be an animated gif\n                callback(file, false);\n                // TODO: use https://github.com/antimatter15/whammy to convert gif to webm\n                return false;\n            }\n\n            var image = document.createElement('img');\n\n            image.onload = function (imgEvt) {\n                var width = image.width;\n                var height = image.height;\n                var isTooLarge = false;\n\n                if (width >= height && width > maxDimensions.width) {\n                    // width is the largest dimension, and it's too big.\n                    height *= maxDimensions.width / width;\n                    width = maxDimensions.width;\n                    isTooLarge = true;\n                } else if (height > maxDimensions.height) {\n                    // either width wasn't over-size or height is the largest dimension\n                    // and the height is over-size\n                    width *= maxDimensions.height / height;\n                    height = maxDimensions.height;\n                    isTooLarge = true;\n                }\n\n                if (!isTooLarge) {\n                    // early exit; no need to resize\n                    callback(file, false);\n                    return;\n                }\n\n                var canvas = document.createElement('canvas');\n                canvas.width = width;\n                canvas.height = height;\n\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(image, 0, 0, width, height);\n\n                if (hasToBlobSupport) {\n                    canvas.toBlob(function (blob) {\n                        callback(blob, true);\n                    }, file.type);\n                } else {\n                    var blob = ImageTools._toBlob(canvas, file.type);\n                    callback(blob, true);\n                }\n            };\n            ImageTools._loadImage(image, file);\n\n            return true;\n        }\n    }, {\n        key: '_toBlob',\n        value: function _toBlob(canvas, type) {\n            var dataURI = canvas.toDataURL(type);\n            var dataURIParts = dataURI.split(',');\n            var byteString = void 0;\n            if (dataURIParts[0].indexOf('base64') >= 0) {\n                // Convert base64 to raw binary data held in a string:\n                byteString = atob(dataURIParts[1]);\n            } else {\n                // Convert base64/URLEncoded data component to raw binary data:\n                byteString = decodeURIComponent(dataURIParts[1]);\n            }\n            var arrayBuffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(arrayBuffer);\n\n            for (var i = 0; i < byteString.length; i += 1) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n\n            var mimeString = dataURIParts[0].split(':')[1].split(';')[0];\n            var blob = null;\n\n            if (hasBlobConstructor) {\n                blob = new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], { type: mimeString });\n            } else {\n                var bb = new BlobBuilder();\n                bb.append(arrayBuffer);\n                blob = bb.getBlob(mimeString);\n            }\n\n            return blob;\n        }\n    }, {\n        key: '_loadImage',\n        value: function _loadImage(image, file, callback) {\n            if (typeof URL === 'undefined') {\n                var reader = new FileReader();\n                reader.onload = function (evt) {\n                    image.src = evt.target.result;\n                    if (callback) {\n                        callback();\n                    }\n                };\n                reader.readAsDataURL(file);\n            } else {\n                image.src = URL.createObjectURL(file);\n                if (callback) {\n                    callback();\n                }\n            }\n        }\n    }, {\n        key: 'isSupported',\n        value: function isSupported() {\n            return typeof HTMLCanvasElement !== 'undefined' && hasBlobSupport && hasReaderSupport;\n        }\n    }]);\n    return ImageTools;\n}();\n\nexports.default = ImageTools;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///130\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _assign = __webpack_require__(78);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _utils = __webpack_require__(19);\n\nvar _DataObjectReporter = __webpack_require__(132);\n\nvar _DataObjectReporter2 = _interopRequireDefault(_DataObjectReporter);\n\nvar _DataObjectObserver = __webpack_require__(133);\n\nvar _DataObjectObserver2 = _interopRequireDefault(_DataObjectObserver);\n\nvar _DataProvisional = __webpack_require__(135);\n\nvar _DataProvisional2 = _interopRequireDefault(_DataProvisional);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('Syncher'); /**\r\n                                       * Copyright 2016 PT Inovação e Sistemas SA\r\n                                       * Copyright 2016 INESC-ID\r\n                                       * Copyright 2016 QUOBIS NETWORKS SL\r\n                                       * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                       * Copyright 2016 ORANGE SA\r\n                                       * Copyright 2016 Deutsche Telekom AG\r\n                                       * Copyright 2016 Apizee\r\n                                       * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                       *\r\n                                       * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                       * you may not use this file except in compliance with the License.\r\n                                       * You may obtain a copy of the License at\r\n                                       *\r\n                                       *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                       *\r\n                                       * Unless required by applicable law or agreed to in writing, software\r\n                                       * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                       * See the License for the specific language governing permissions and\r\n                                       * limitations under the License.\r\n                                       **/\n\n// Log System\n\n/**\r\n* The main class for the syncher package.\r\n* The Syncher is a singleton class per Hyperty/URL and it is the owner of all created Data Sync Objects according to the Reporter - Observer pattern.\r\n* Main functionality is to create reporters and to subscribe to existing ones.\r\n*/\nvar Syncher = function () {\n  /* private\r\n  _owner: URL\r\n  _bus: MiniBus\r\n    _subURL: URL\r\n    _reporters: <url: DataObjectReporter>\r\n  _observers: <url: DataObjectObserver>\r\n  _provisionals: <url: DataProvisional>\r\n    ----event handlers----\r\n  _onNotificationHandler: (event) => void\r\n  _onResume: (event) => void\r\n  */\n\n  /**\r\n  * Constructor that should be used by the Hyperty owner\r\n  * @param {HypertyURL} owner - Hyperty URL owner. An URL allocated by the runtime that uniquely identifies the Hyperty.\r\n  * @param {MiniBus} bus - An instance of the MiniBus provided in the sandbox. When an object (Reporter or Observed) is created, the SyncherManager will add a listener in the MiniBus to receive/send Messages of that object.\r\n  * @param {JSON} config - Configuration data. The only required field for now is the runtimeURL.\r\n  */\n  function Syncher(owner, bus, config) {\n    (0, _classCallCheck3.default)(this, Syncher);\n\n    var _this = this;\n\n    _this._owner = owner;\n    _this._bus = bus;\n\n    _this._subURL = config.runtimeURL + '/sm';\n    _this._runtimeUrl = config.runtimeURL;\n\n    _this._p2pHandler = config.p2pHandler;\n    _this._p2pRequester = config.p2pRequester;\n\n    _this._reporters = {};\n    _this._observers = {};\n    _this._provisionals = {};\n\n    bus.addListener(owner, function (msg) {\n      //ignore msg sent by himself\n      if (msg.from !== owner) {\n        log.info('[Syncher] Syncher-RCV: ', msg, _this);\n        switch (msg.type) {\n          case 'forward':\n            _this._onForward(msg);break;\n          case 'create':\n            _this._onRemoteCreate(msg);break;\n          case 'delete':\n            _this._onRemoteDelete(msg);break;\n          case 'execute':\n            _this._onExecute(msg);break;\n        }\n      }\n    });\n  }\n\n  /**\r\n  * The owner of the Syncher and all created reporters.\r\n  * @type {HypertyURL}\r\n  */\n\n\n  (0, _createClass3.default)(Syncher, [{\n    key: 'create',\n\n\n    /**\r\n    * Request a DataObjectReporter creation. The URL will be be requested by the allocation mechanism.\r\n    * @param  {SchemaURL} schema - Hyperty Catalogue URL address that can be used to retrieve the JSON-Schema describing the Data Object schema\r\n    * @param  {HypertyURL[]} observers - List of hyperties that are pre-authorized for subscription\r\n    * @param  {JSON} initialData - Initial data of the reporter\r\n    * @param  {boolean} store - (Optional) if true, object will be stored by the runtime\r\n    * @param  {boolean} p2p - (Optional) if true, data synchronisation stream will use p2p connection as much as possible\r\n    * @param  {string} name - (Optional) the name of the dataobject\r\n    * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\r\n    * @param  {SyncMetadata} input - (optional) all metadata required to sunc the Data Object.\r\n    * @return {Promise<DataObjectReporter>} Return Promise to a new Reporter. The reporter can be accepted or rejected by the PEP\r\n    */\n    value: function create(schema, observers, initialData) {\n      var store = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var p2p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'no name';\n      var identity = arguments[6];\n      var input = arguments[7];\n\n\n      if (!schema) throw Error('[Syncher - Create] - You need specify the data object schema');\n      if (!observers) throw Error('[Syncher - Create] -The observers should be defined');\n\n      var _this = this;\n      input = input || {};\n      var createInput = (0, _assign2.default)({}, input);\n\n      createInput.p2p = p2p;\n      createInput.store = store;\n      createInput.schema = schema;\n      createInput.authorise = observers;\n      createInput.p2pHandler = _this._p2pHandler;\n      createInput.p2pRequester = _this._p2pRequester;\n      initialData ? createInput.data = (0, _utils.deepClone)(initialData) : createInput.data = {};\n      createInput.name = name.length === 0 ? 'no name' : name;\n      createInput.reporter = input.hasOwnProperty('reporter') && typeof input.reporter !== 'boolean' ? input.reporter : _this._owner;\n      createInput.resume = false;\n      if (input) {\n        createInput.mutual = input.hasOwnProperty('mutual') ? input.mutual : true;\n        createInput.name = input.hasOwnProperty('name') ? input.name : createInput.name;\n      } else {\n        createInput.mutual = true;\n      }\n\n      if (input.hasOwnProperty('reuseURL')) {\n        createInput.resource = input.reuseURL;\n      }\n\n      if (identity) {\n        createInput.identity = identity;\n      }\n\n      //Object.assign(createInput, {resume: false});\n      //debugger;\n      log.log('[syncher - create] - create Reporter - createInput: ', createInput);\n\n      return _this._create(createInput);\n    }\n\n    /**\r\n    * Request a DataObjectReporter creation. The URL will be be requested by the allocation mechanism.\r\n    * @param  {Object} criteria - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\r\n    * @return {Promise<DataObjectReporter>[]} Return a promise with a list of DataObjectReporter to be resumed;\r\n    */\n\n  }, {\n    key: 'resumeReporters',\n    value: function resumeReporters(criteria) {\n      var _this = this;\n      log.log('[syncher - create] - resume Reporter - criteria: ', criteria);\n\n      (0, _assign2.default)(criteria, { resume: true });\n\n      return _this._resumeCreate(criteria);\n    }\n\n    /**\r\n    * Request a subscription to an existent reporter object.\r\n    * @param {SchemaURL} schema - Hyperty Catalogue URL address that can be used to retrieve the JSON-Schema describing the Data Object schema\r\n    * @param {ObjectURL} objURL - Address of the existent reporter object to be observed\r\n    * @param {Boolean} [store=false] - Save the subscription on the Syncher Manager for further resume (Default is false)\r\n    * @param {Boolean} [p2p=false] - Info about if should use p2p connection (Default is false)\r\n    * @param {Boolean} [mutual=true] - Info about if messages of this object should be encrypted (Default is true)\r\n    * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.\r\n    * @return {Promise<DataObjectObserver>} Return Promise to a new observer. It's associated with the reporter.\r\n    */\n\n    //TODO: use input JSON param with all optional parameters similar to create\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(schema, objURL) {\n      var store = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var p2p = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var mutual = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      var domain_subscription = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n      var identity = arguments[6];\n\n      var _this = this;\n      var criteria = {};\n\n      criteria.p2p = p2p;\n      criteria.store = store;\n      criteria.schema = schema;\n      criteria.domain_subscription = domain_subscription;\n\n      criteria.resource = objURL;\n      if (identity) {\n        criteria.identity = identity;\n      }\n\n      //TODO: For Further Study\n      criteria.mutual = mutual;\n\n      log.log('[syncher - subscribe] - subscribe criteria: ', criteria);\n\n      (0, _assign2.default)(criteria, { resume: false });\n\n      return _this._subscribe(criteria);\n    }\n\n    /**\r\n    * Request a subscription to an existent reporter object.\r\n    * @param {criteria} criteria - Information to discovery the observer object\r\n    * @return {Promise<DataObjectObserver>} Return Promise to a new observer. It's associated with the reporter.\r\n    */\n\n  }, {\n    key: 'resumeObservers',\n    value: function resumeObservers(criteria) {\n      var _this = this;\n      var _criteria = criteria || {};\n\n      (0, _assign2.default)(_criteria, { resume: true });\n\n      return _this._resumeSubscribe(_criteria);\n    }\n\n    /**\r\n    * Request a read action on the reporter object\r\n    * @param {ObjectURL} objURL - URL of the reporter object to be read\r\n    * @return {Promise<Object>} Return Promise to last available data of the reporter\r\n    */\n\n  }, {\n    key: 'read',\n    value: function read(objURL) {\n      var _this = this;\n\n      //FLOW-OUT: this message will be sent directly to reporter object (maybe there is no listener available, so it will be resolved with MessageBus -> resolve)\n      //will reach the remote object in DataObjectReporter -> _onRead\n      var readMsg = {\n        type: 'read', from: _this._owner, to: objURL\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n        var callback = function callback(reply) {\n          log.log('[Syncher.read] reply: ', reply);\n\n          var childrens = {};\n          var value = {};\n          var n = 0;\n\n          if (reply.body.code < 300) {\n            if (!reply.body.value.hasOwnProperty('responses')) {\n              _this._bus.removeResponseListener(readMsg.from, reply.id);\n              resolve(reply.body.value);\n            } else {\n              //data object is sent in separated messages\n              if (n === 0) {\n                //initial response without childrens\n                value = reply.body.value;\n                ++n;\n              } else {\n                // received response contains childrens\n                delete reply.body.value.responses;\n                var children = void 0;\n                for (children in reply.body.value) {\n                  if (!childrens.hasOwnProperty(children)) childrens[children] = {};\n                  (0, _assign2.default)(childrens[children], reply.body.value[children]);\n                }\n                ++n;\n                if (n === value.responses) {\n                  value.childrenObjects = childrens;\n                  delete value.responses;\n                  _this._bus.removeResponseListener(readMsg.from, reply.id);\n                  resolve(value);\n                }\n              }\n            }\n          } else {\n            reject(reply.body.desc);\n          }\n        };\n\n        var id = _this._bus.postMessage(readMsg, callback, false);\n      });\n    }\n\n    /**\r\n    * Setup the callback to process create and delete events of remove Reporter objects.\r\n    * This is releated to the messagens sent by create to the observers Hyperty array.\r\n    * @param {function(event: MsgEvent)} callback\r\n    */\n\n  }, {\n    key: 'onNotification',\n    value: function onNotification(callback) {\n      this._onNotificationHandler = callback;\n    }\n\n    /**\r\n    * Setup the callback to process close events from the runtime.\r\n    * @param {function(event: MsgEvent)} callback\r\n    */\n\n  }, {\n    key: 'onClose',\n    value: function onClose(callback) {\n      this._onClose = callback;\n    }\n  }, {\n    key: '_create',\n    value: function _create(input) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var reporterInput = (0, _assign2.default)({}, input);\n\n        var resume = input.resume;\n\n        reporterInput.created = new Date().toISOString();\n        reporterInput.runtime = _this._runtimeUrl;\n\n        var requestValue = (0, _utils.deepClone)(reporterInput);\n\n        delete requestValue.p2p;\n        delete requestValue.store;\n        delete requestValue.observers;\n        delete requestValue.identity;\n\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate\n        //debugger;\n        var requestMsg = {\n          type: 'create', from: _this._owner, to: _this._subURL,\n          body: { resume: resume, value: requestValue }\n        };\n\n        requestMsg.body.schema = reporterInput.schema;\n\n        if (reporterInput.p2p) requestMsg.body.p2p = reporterInput.p2p;\n        if (reporterInput.store) requestMsg.body.store = reporterInput.store;\n        if (reporterInput.identity) requestMsg.body.identity = reporterInput.identity;\n\n        log.log('[syncher._create]: ', reporterInput, requestMsg);\n\n        //request create to the allocation system. Can be rejected by the PolicyEngine.\n        _this._bus.postMessage(requestMsg, function (reply) {\n          log.log('[syncher - create] - create-response: ', reply);\n          if (reply.body.code === 200) {\n            //reporter creation accepted\n            reporterInput.url = reply.body.resource;\n\n            /*          if (reply.body.p2pHandler) reporterInput.p2pHandler = reply.body.p2pHandler;\r\n                      if (reply.body.p2pRequester) reporterInput.p2pRequester = reply.body.p2pRequester;*/\n\n            reporterInput.status = 'live'; // pch: do we ned this?\n            reporterInput.syncher = _this;\n            reporterInput.childrens = reply.body.childrenResources;\n\n            var newObj = _this._reporters[reporterInput.url];\n\n            if (!newObj) {\n              newObj = new _DataObjectReporter2.default(reporterInput);\n              _this._reporters[reporterInput.url] = newObj;\n            }\n\n            newObj.inviteObservers(input.authorise, input.p2p);\n\n            resolve(newObj);\n          } else {\n            //reporter creation rejected\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_resumeCreate',\n    value: function _resumeCreate(criteria) {\n      var _this2 = this;\n\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n        var resume = criteria.resume;\n\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate\n        var requestMsg = {\n          type: 'create', from: _this._owner, to: _this._subURL,\n          body: { resume: resume }\n        };\n\n        log.log('[syncher - create]: ', criteria, requestMsg);\n        if (criteria) {\n          requestMsg.body.value = criteria;\n          if (criteria.hasOwnProperty('reporter')) {\n            requestMsg.body.value.reporter = criteria.reporter;\n          } else {\n            requestMsg.body.value.reporter = _this._owner;\n          }\n        }\n\n        if (criteria.p2p) requestMsg.body.p2p = criteria.p2p;\n        if (criteria.store) requestMsg.body.store = criteria.store;\n        if (criteria.observers) requestMsg.body.authorise = criteria.observers;\n        if (criteria.identity) requestMsg.body.identity = criteria.identity;\n\n        log.log('[syncher._resumeCreate] - resume message: ', requestMsg);\n\n        //debugger;\n\n        //request create to the allocation system. Can be rejected by the PolicyEngine.\n\n        _this._bus.postMessage(requestMsg, function (reply) {\n          log.log('[syncher._resumeCreate] - create-resumed-response: ', reply);\n          if (reply.body.code === 200) {\n            //debugger;\n            var listOfReporters = reply.body.value;\n\n            for (var index in listOfReporters) {\n\n              var dataObject = listOfReporters[index];\n\n              //reporter creation accepted\n\n              dataObject.data = (0, _utils.deepClone)(dataObject.data) || {};\n\n              if (dataObject.childrenObjects) {\n                dataObject.childrenObjects = (0, _utils.deepClone)(dataObject.childrenObjects);\n              }\n\n              dataObject.mutual = false;\n              dataObject.resume = true;\n              dataObject.status = 'live'; // pch: do we ned this?\n              dataObject.syncher = _this;\n\n              log.log('[syncher._resumeCreate] - create-resumed-dataObjectReporter', dataObject);\n\n              var newObj = new _DataObjectReporter2.default(dataObject);\n\n              if (dataObject.childrenObjects) {\n                newObj.resumeChildrens(dataObject.childrenObjects);\n              }\n              _this._reporters[dataObject.url] = newObj;\n            }\n\n            resolve(_this._reporters);\n            if (_this2._onReportersResume) _this2._onReportersResume(_this2._reporters);\n          } else if (reply.body.code === 404) {\n            resolve({});\n          } else {\n            //reporter creation rejected\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe(input) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalSubscribe\n        var subscribeMsg = {\n          type: 'subscribe', from: _this._owner, to: _this._subURL,\n          body: {}\n        };\n\n        // Hyperty request to be an Observer\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#hyperty-request-to-be-an-observer\n\n        // Resume Subscriptions for the same Hyperty URL\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-the-same-hyperty-url\n\n        // Resume Subscriptions for a certain user and data schema independently of the Hyperty URL.\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-a-certain-user-and-data-schema-independently-of-the-hyperty-url\n        if (input) {\n          if (input.hasOwnProperty('p2p')) subscribeMsg.body.p2p = input.p2p;\n          if (input.hasOwnProperty('store')) subscribeMsg.body.store = input.store;\n          if (input.hasOwnProperty('schema')) subscribeMsg.body.schema = input.schema;\n          if (input.hasOwnProperty('identity')) subscribeMsg.body.identity = input.identity;\n          if (input.hasOwnProperty('resource')) subscribeMsg.body.resource = input.resource;\n          if (input.hasOwnProperty('domain_subscription')) subscribeMsg.body.domain_subscription = input.domain_subscription;\n        }\n\n        subscribeMsg.body.resume = input.resume;\n\n        //TODO: For Further Study\n        if (input.hasOwnProperty('mutual')) subscribeMsg.body.mutual = input.mutual;\n\n        log.log('[syncher_subscribe] - subscribe message: ', input, subscribeMsg);\n\n        //request subscription\n        //Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.\n        //for more info see the DataProvisional class documentation.\n        _this._bus.postMessage(subscribeMsg, function (reply) {\n          log.log('[syncher] - subscribe-response: ', reply);\n\n          var objURL = reply.body.resource;\n\n          var newProvisional = _this._provisionals[objURL];\n          delete _this._provisionals[objURL];\n          if (newProvisional) newProvisional._releaseListeners();\n\n          if (reply.body.code < 200) {\n            log.log('[syncher] - new DataProvisional: ', reply.body.childrenResources, objURL);\n            newProvisional = new _DataProvisional2.default(_this._owner, objURL, _this._bus, reply.body.childrenResources);\n            _this._provisionals[objURL] = newProvisional;\n          } else if (reply.body.code === 200) {\n            log.log('[syncher] - new Data Object Observer: ', reply, _this._provisionals);\n\n            var observerInput = reply.body.value;\n\n            observerInput.syncher = _this;\n            observerInput.p2p = input.p2p;\n            observerInput.store = input.store;\n            observerInput.identity = input.identity;\n            observerInput.resume = false;\n\n            // todo: For Further Study\n            observerInput.mutual = input.mutual;\n\n            //observerInput.children = newProvisional.children;\n\n            //TODO: mutual For Further Study\n            var newObj = _this._observers[objURL];\n            if (!newObj) {\n              newObj = new _DataObjectObserver2.default(observerInput);\n              _this._observers[objURL] = newObj;\n            } else {\n              newObj.sync();\n            }\n\n            log.log('[syncher] - new Data Object Observer already exist: ', newObj);\n\n            resolve(newObj);\n\n            if (newProvisional) {\n              newProvisional.apply(newObj);\n            }\n          } else {\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_resumeSubscribe',\n    value: function _resumeSubscribe(criteria) {\n      var _this3 = this;\n\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalSubscribe\n        var subscribeMsg = {\n          type: 'subscribe', from: _this._owner, to: _this._subURL,\n          body: {}\n        };\n\n        // Hyperty request to be an Observer\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#hyperty-request-to-be-an-observer\n\n        // Resume Subscriptions for the same Hyperty URL\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-the-same-hyperty-url\n\n        // Resume Subscriptions for a certain user and data schema independently of the Hyperty URL.\n        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-a-certain-user-and-data-schema-independently-of-the-hyperty-url\n        if (criteria) {\n          if (criteria.hasOwnProperty('p2p')) subscribeMsg.body.p2p = criteria.p2p;\n          if (criteria.hasOwnProperty('store')) subscribeMsg.body.store = criteria.store;\n          if (criteria.hasOwnProperty('schema')) subscribeMsg.body.schema = criteria.schema;\n          if (criteria.hasOwnProperty('identity')) subscribeMsg.body.identity = criteria.identity;\n          if (criteria.hasOwnProperty('resource')) subscribeMsg.body.resource = criteria.url;\n        }\n\n        subscribeMsg.body.resume = criteria.resume;\n\n        //TODO: For Further Study\n        var mutual = criteria.mutual;\n        if (criteria.hasOwnProperty('mutual')) subscribeMsg.body.mutual = mutual;\n\n        log.log('[syncher] - subscribe message: ', criteria, subscribeMsg);\n\n        //request subscription\n        //Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.\n        //for more info see the DataProvisional class documentation.\n        _this._bus.postMessage(subscribeMsg, function (reply) {\n          log.log('[syncher] - subscribe-resumed-response: ', reply);\n\n          var objURL = reply.body.resource;\n\n          var newProvisional = _this._provisionals[objURL];\n          delete _this._provisionals[objURL];\n          if (newProvisional) newProvisional._releaseListeners();\n\n          if (reply.body.code < 200) {\n            // todo: check if this is needed for the resume\n\n            log.log('[syncher] - resume new DataProvisional: ', reply, objURL);\n            newProvisional = new _DataProvisional2.default(_this._owner, objURL, _this._bus, reply.body.childrenResources);\n            _this._provisionals[objURL] = newProvisional;\n          } else if (reply.body.code === 200) {\n\n            var listOfObservers = reply.body.value;\n\n            for (var index in listOfObservers) {\n\n              var dataObject = listOfObservers[index];\n              log.log('[syncher] - Resume Object Observer: ', reply, dataObject, _this._provisionals);\n\n              if (dataObject.childrenObjects) {\n                dataObject.childrenObjects = (0, _utils.deepClone)(dataObject.childrenObjects);\n              }\n\n              dataObject.data = (0, _utils.deepClone)(dataObject.data) || {};\n              dataObject.resume = true;\n              dataObject.syncher = _this;\n\n              //TODO: mutual For Further Study\n              log.log('[syncher._resumeSubscribe] - create new dataObject: ', dataObject);\n              var newObj = new _DataObjectObserver2.default(dataObject);\n\n              if (dataObject.childrenObjects) {\n                newObj.resumeChildrens(dataObject.childrenObjects);\n              }\n              log.log('[syncher._resumeSubscribe] - new dataObject', newObj);\n              _this._observers[newObj.url] = newObj;\n\n              if (_this._provisionals[newObj.url]) {\n                _this._provisionals[newObj.url].apply(newObj);\n              }\n\n              //lets sync with Reporter\n              // it was commented to let hyperties decide when to sync\n              //newObj.sync();\n            }\n\n            resolve(_this._observers);\n\n            if (_this3._onObserversResume) _this3._onObserversResume(_this._observers);\n          } else if (reply.body.code === 404) {\n            resolve({});\n          } else {\n            reject(reply.body.desc);\n          }\n        });\n      });\n    }\n\n    //FLOW-IN: message received from a local runtime ReporterObject -> _onRemoteSubscribe\n\n  }, {\n    key: '_onForward',\n    value: function _onForward(msg) {\n      var _this = this;\n\n      var reporter = _this._reporters[msg.body.to];\n      reporter._onForward(msg);\n    }\n\n    //FLOW-IN: message received from a remote Syncher -> create (this is actually an invitation to subscribe)\n\n  }, {\n    key: '_onRemoteCreate',\n    value: function _onRemoteCreate(msg) {\n      var _this = this;\n      var resource = msg.from.slice(0, -13); //remove \"/subscription\" from the URL\n      var dividedURL = (0, _utils.divideURL)(resource);\n      var domain = dividedURL.domain;\n\n      var event = {\n        type: msg.type,\n        from: msg.body.source,\n        url: resource,\n        domain: domain,\n        schema: msg.body.schema,\n        value: msg.body.value,\n        identity: msg.body.identity,\n\n        ack: function ack(type) {\n          var lType = 200;\n          if (type) {\n            lType = type;\n          }\n\n          //send ack response message\n          _this._bus.postMessage({\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\n            body: { code: lType }\n          });\n        }\n      };\n\n      if (_this._onNotificationHandler) {\n        log.info('[Syncher] NOTIFICATION-EVENT: ', event);\n        _this._onNotificationHandler(event);\n      }\n    }\n\n    //FLOW-IN: message received from a remote DataObjectReporter -> delete\n\n  }, {\n    key: '_onRemoteDelete',\n    value: function _onRemoteDelete(msg) {\n      var _this = this;\n\n      //remove \"/subscription\" from the URL\n      var resource = msg.body.resource;\n\n      var object = _this._observers[resource];\n\n      var unsubscribe = {\n        from: _this.owner,\n        to: _this._subURL,\n        id: msg.id,\n        type: 'unsubscribe',\n        body: { resource: msg.body.resource }\n      };\n\n      _this._bus.postMessage(unsubscribe);\n\n      delete _this._observers[resource];\n\n      if (object) {\n        var event = {\n          type: msg.type,\n          url: resource,\n          identity: msg.body.identity,\n\n          ack: function ack(type) {\n            var lType = 200;\n            if (type) {\n              lType = type;\n            }\n\n            //TODO: any other different options for the release process, like accept but nor release local?\n            if (lType === 200) {\n              object.delete();\n            }\n\n            //send ack response message\n            _this._bus.postMessage({\n              id: msg.id, type: 'response', from: msg.to, to: msg.from,\n              body: { code: lType, source: _this._owner }\n            });\n          }\n        };\n\n        if (_this._onNotificationHandler) {\n          log.log('NOTIFICATION-EVENT: ', event);\n          _this._onNotificationHandler(event);\n        }\n      } else {\n        _this._bus.postMessage({\n          id: msg.id, type: 'response', from: msg.to, to: msg.from,\n          body: { code: 404, source: _this._owner }\n        });\n      }\n    }\n\n    // close event received from runtime registry\n\n  }, {\n    key: '_onExecute',\n    value: function _onExecute(msg) {\n      var _this = this;\n\n      var reply = {\n        id: msg.id, type: 'response', from: msg.to, to: msg.from,\n        body: { code: 200 }\n      };\n\n      if ((msg.from === _this._runtimeUrl + '/registry/' || msg.from === _this._runtimeUrl + '/registry') && msg.body && msg.body.method && msg.body.method === 'close' && _this._onClose) {\n        var event = {\n          type: 'close',\n\n          ack: function ack(type) {\n            if (type) {\n              reply.body.code = type;\n            }\n\n            //send ack response message\n            _this._bus.postMessage(reply);\n          }\n        };\n\n        log.info('[Syncher] Close-EVENT: ', event);\n        _this._onClose(event);\n      } else {\n        _this._bus.postMessage(reply);\n      }\n    }\n\n    /**\r\n    * Callback system to trigger the resumed reporters\r\n    * @param  {Function} callback - function callback which will be invoked\r\n    * @return {Object<URL, DataObjectReporter>} Return one object with all resumed reporters;\r\n    */\n\n  }, {\n    key: 'onReportersResume',\n    value: function onReportersResume(callback) {\n      this._onReportersResume = callback;\n    }\n\n    /**\r\n    * Callback system to trigger the resumed observers\r\n    * @param  {Function} callback - function callback which will be invoked\r\n    * @return {Object<URL, DataObjectObserver>} Return one object with all resumed observers;\r\n    */\n\n  }, {\n    key: 'onObserversResume',\n    value: function onObserversResume(callback) {\n      this._onObserversResume = callback;\n    }\n  }, {\n    key: 'owner',\n    get: function get() {\n      return this._owner;\n    }\n\n    /**\r\n    * All owned reporters, the ones that were created by a create\r\n    * @type {Object<URL, DataObjectReporter>}\r\n    */\n\n  }, {\n    key: 'reporters',\n    get: function get() {\n      return this._reporters;\n    }\n\n    /**\r\n    * All owned observers, the ones that were created by a local subscription\r\n    * @type {Object<URL, DataObjectObserver>}\r\n    */\n\n  }, {\n    key: 'observers',\n    get: function get() {\n      return this._observers;\n    }\n  }]);\n  return Syncher;\n}();\n\nexports.default = Syncher;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///131\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _stringify = __webpack_require__(58);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getPrototypeOf = __webpack_require__(25);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(33);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = __webpack_require__(100);\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = __webpack_require__(34);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _DataObject2 = __webpack_require__(122);\n\nvar _DataObject3 = _interopRequireDefault(_DataObject2);\n\nvar _utils = __webpack_require__(19);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('DataObjectReporter'); /**\r\n                                                  * Copyright 2016 PT Inovação e Sistemas SA\r\n                                                  * Copyright 2016 INESC-ID\r\n                                                  * Copyright 2016 QUOBIS NETWORKS SL\r\n                                                  * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                                  * Copyright 2016 ORANGE SA\r\n                                                  * Copyright 2016 Deutsche Telekom AG\r\n                                                  * Copyright 2016 Apizee\r\n                                                  * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                                  *\r\n                                                  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                                  * you may not use this file except in compliance with the License.\r\n                                                  * You may obtain a copy of the License at\r\n                                                  *\r\n                                                  *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                                  *\r\n                                                  * Unless required by applicable law or agreed to in writing, software\r\n                                                  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                                  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                                  * See the License for the specific language governing permissions and\r\n                                                  * limitations under the License.\r\n                                                  **/\n\n// Log System\n\n/**\r\n * The class returned from the Syncher create call.\r\n * To be used as a reporter point, changes will be submited to DataObjectObserver instances.\r\n */\nvar DataObjectReporter = function (_DataObject) {\n  (0, _inherits3.default)(DataObjectReporter, _DataObject);\n\n  /* private\r\n  _subscriptions: <hypertyUrl: { status: string } }>\r\n    ----event handlers----\r\n  _onSubscriptionHandler: (event) => void\r\n  _onResponseHandler: (event) => void\r\n  _onReadHandler: (event) => void\r\n  */\n\n  /**\r\n   * @ignore\r\n   * Should not be used directly by Hyperties. It's called by the Syncher.create method\r\n   */\n\n  //constructor(syncher, url, created, reporter, runtime, schema, name, initialStatus, initialData, childrens, mutual = true, resumed = false, description, tags, resources, observerStorage, publicObservation) {\n  function DataObjectReporter(input) {\n    (0, _classCallCheck3.default)(this, DataObjectReporter);\n\n    var _this2 = (0, _possibleConstructorReturn3.default)(this, (DataObjectReporter.__proto__ || (0, _getPrototypeOf2.default)(DataObjectReporter)).call(this, input));\n\n    var _this = _this2;\n\n    _this._subscriptions = {};\n\n    _this._syncObj.observe(function (event) {\n      log.log('[Syncher.DataObjectReporter] ' + _this.url + ' publish change: ', event);\n      _this._onChange(event);\n    });\n\n    _this._allocateListeners();\n\n    _this.invitations = []; // array of promises with pending invitations\n    _this._childrenSizeThreshold = 50000; // to be used when replying to sync requests to ensure each response msg is not too large\n\n    return _this2;\n  }\n\n  (0, _createClass3.default)(DataObjectReporter, [{\n    key: '_allocateListeners',\n    value: function _allocateListeners() {\n      (0, _get3.default)(DataObjectReporter.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectReporter.prototype), '_allocateListeners', this).call(this);\n      var _this = this;\n\n      _this._objectListener = _this._bus.addListener(_this._url, function (msg) {\n        log.log('[Syncher.DataObjectReporter] listener ' + _this._url + ' Received: ', msg);\n        switch (msg.type) {\n          case 'response':\n            _this._onResponse(msg);break;\n          case 'read':\n            _this._onRead(msg);break;\n          case 'execute':\n            _this._onExecute(msg);break;\n          case 'create':\n            _this._onChildCreate(msg);break; // to create child objects that were sent whenn offline\n        }\n      });\n    }\n  }, {\n    key: '_releaseListeners',\n    value: function _releaseListeners() {\n      (0, _get3.default)(DataObjectReporter.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectReporter.prototype), '_releaseListeners', this).call(this);\n      var _this = this;\n\n      _this._objectListener.remove();\n    }\n\n    /**\r\n     * Send invitations (create messages) to hyperties, observers list.\r\n     * @param  {HypertyURL[]} observers List of Hyperty URL's\r\n     */\n\n  }, {\n    key: 'inviteObservers',\n    value: function inviteObservers(observers, p2p) {\n      var _this = this;\n\n      //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate\n      // TODO: remove value and add resources? should similar to 1st create\n\n      var toInvite = observers;\n\n      // let invitePromises = [];\n\n      /*  observers.forEach((observer)=> {\r\n        if (!_this.invitations[observer]) {\r\n          toInvite.push(observer);\r\n          _this.invitations[observer] = observer;\r\n        }\r\n      });*/\n\n      if (toInvite.length > 0) {\n        log.log('[Syncher.DataObjectReporter] InviteObservers ', toInvite, _this._metadata);\n\n        toInvite.forEach(function (observer) {\n\n          var invitation = new _promise2.default(function (resolve, reject) {\n\n            var inviteMsg = {\n              type: 'create', from: _this._syncher._owner, to: _this._syncher._subURL,\n              body: { resume: false, resource: _this._url, schema: _this._schema, value: _this._metadata, authorise: [observer] }\n            };\n\n            if (p2p) inviteMsg.body.p2p = p2p;\n\n            if (!_this.data.mutual) inviteMsg.body.mutual = _this.data.mutual;\n\n            _this._bus.postMessage(inviteMsg, function (reply) {\n              log.log('[Syncher.DataObjectReporter] Invitation reply ', reply);\n\n              var result = {\n                invited: observer,\n                code: reply.body && reply.body.code ? reply.body.code : 500,\n                desc: reply.body && reply.body.desc ? reply.body.desc : 'Unknown'\n              };\n\n              if (result.code < 300) resolve(result);else if (result.code >= 300) reject(result);\n            });\n          });\n\n          _this.invitations.push(invitation);\n        });\n\n        //      return(invitePromises);\n      }\n    }\n\n    /**\r\n     * Release and delete object data\r\n     */\n\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      var _this = this;\n\n      _this._deleteChildrens().then(function (result) {\n        log.log(result);\n        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onDelete\n        var deleteMsg = {\n          type: 'delete', from: _this._owner, to: _this._syncher._subURL,\n          body: { resource: _this._url }\n        };\n\n        _this._bus.postMessage(deleteMsg, function (reply) {\n          log.log('DataObjectReporter-DELETE: ', reply);\n          if (reply.body.code === 200) {\n            _this._releaseListeners();\n            delete _this._syncher._reporters[_this._url];\n\n            //_this._syncObj.unobserve();\n            _this._syncObj = {};\n          }\n        });\n      });\n    }\n\n    /**\r\n     * Subscriptions requested and accepted to this reporter\r\n     * @type {Object<HypertyURL, SyncSubscription>}\r\n     */\n\n  }, {\n    key: 'onSubscription',\n\n\n    /**\r\n     * Setup the callback to process subscribe and unsubscribe notifications\r\n     * @param {function(event: MsgEvent)} callback function to receive events\r\n     */\n    value: function onSubscription(callback) {\n      this._onSubscriptionHandler = callback;\n    }\n\n    /**\r\n     * Setup the callback to process response notifications of the create's\r\n     * @param {function(event: MsgEvent)} callback function to receive events\r\n     */\n\n  }, {\n    key: 'onResponse',\n    value: function onResponse(callback) {\n      this._onResponseHandler = callback;\n    }\n\n    /**\r\n     * Setup the callback to process read notifications\r\n     * @param {function(event: MsgEvent)} callback\r\n     */\n\n  }, {\n    key: 'onRead',\n    value: function onRead(callback) {\n      this._onReadHandler = callback;\n    }\n\n    /**\r\n     * Setup the callback to process execute notifications\r\n     * @param {function(event: MsgEvent)} callback\r\n     */\n\n  }, {\n    key: 'onExecute',\n    value: function onExecute(callback) {\n      this._onExecuteHandler = callback;\n    }\n\n    //FLOW-IN: message received from parent Syncher -> _onForward\n\n  }, {\n    key: '_onForward',\n    value: function _onForward(msg) {\n      var _this = this;\n\n      log.log('DataObjectReporter-RCV: ', msg);\n      switch (msg.body.type) {\n        case 'subscribe':\n          _this._onSubscribe(msg);break;\n        case 'unsubscribe':\n          _this._onUnSubscribe(msg);break;\n      }\n    }\n\n    //FLOW-IN: message received from this -> _onForward: emitted by a remote Syncher -> subscribe\n\n  }, {\n    key: '_onSubscribe',\n    value: function _onSubscribe(msg) {\n      var _this = this;\n      var hypertyUrl = msg.body.from;\n      var dividedURL = (0, _utils.divideURL)(hypertyUrl);\n      var domain = dividedURL.domain;\n      var mutual = true;\n\n      if (msg.body.hasOwnProperty('mutual') && !msg.body.mutual) mutual = false;\n\n      log.log('[DataObjectReporter._onSubscribe]', msg, domain, dividedURL);\n\n      var event = {\n        type: msg.body.type,\n        url: hypertyUrl,\n\n        domain: domain,\n\n        identity: msg.body.identity,\n\n        nutual: mutual,\n\n        accept: function accept() {\n          //create new subscription\n          var sub = { url: hypertyUrl, status: 'live' };\n          _this._subscriptions[hypertyUrl] = sub;\n          if (_this.metadata.subscriptions) {\n            _this.metadata.subscriptions.push(sub.url);\n          }\n\n          var msgValue = (0, _utils.deepClone)(_this._metadata);\n          msgValue.data = (0, _utils.deepClone)(_this.data);\n          msgValue.version = _this._version;\n\n          //process and send childrens data\n          // let childrenValues = {};\n          //\n          // if (_this._childrenObjects) {\n          //   Object.keys(_this._childrenObjects).forEach((childrenId) => {\n          //     let childrenData = _this._childrenObjects[childrenId];\n          //     childrenValues[childrenId] = deepClone(childrenData);\n          //   });\n          //   msgValue.childrenObjects = childrenValues;\n          // }\n\n          var sendMsg = {\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\n            body: { code: 200, schema: _this._schema, value: msgValue }\n          };\n\n          //TODO: For Further Study\n          if (msg.body.hasOwnProperty('mutual') && !msg.body.mutual) {\n            sendMsg.body.mutual = msg.body.mutual; // TODO: remove?\n            _this.data.mutual = false;\n          }\n\n          //send ok response message\n          _this._bus.postMessage(sendMsg);\n\n          return sub;\n        },\n\n        reject: function reject(reason) {\n          //send reject response message\n          _this._bus.postMessage({\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\n            body: { code: 403, desc: reason }\n          });\n        }\n      };\n\n      if (_this._onSubscriptionHandler) {\n        log.log('SUBSCRIPTION-EVENT: ', event);\n        _this._onSubscriptionHandler(event);\n      }\n    }\n\n    //FLOW-IN: message received from this -> _onForward: emitted by a remote DataObjectObserver -> unsubscribe\n\n  }, {\n    key: '_onUnSubscribe',\n    value: function _onUnSubscribe(msg) {\n      var _this = this;\n      var hypertyUrl = msg.body.from;\n      var dividedURL = (0, _utils.divideURL)(hypertyUrl);\n      var domain = dividedURL.domain;\n\n      log.log('[DataObjectReporter._onUnSubscribe]', msg, domain, dividedURL);\n\n      //let sub = _this._subscriptions[hypertyUrl];\n      delete _this._subscriptions[hypertyUrl];\n      delete _this.invitations[hypertyUrl];\n\n      var event = {\n        type: msg.body.type,\n        url: hypertyUrl,\n        domain: domain,\n        identity: msg.body.identity\n      };\n\n      // TODO: check if the _onSubscriptionHandler it is the same of the subscriptions???\n      if (_this._onSubscriptionHandler) {\n        log.log('UN-SUBSCRIPTION-EVENT: ', event);\n        _this._onSubscriptionHandler(event);\n      }\n    }\n\n    //FLOW-IN: message received from ReporterURL address: emited by a remote Syncher -> _onRemoteCreate -> event.ack\n\n  }, {\n    key: '_onResponse',\n    value: function _onResponse(msg) {\n      var _this = this;\n\n      var event = {\n        type: msg.type,\n        url: msg.from,\n        code: msg.body.code\n      };\n\n      if (_this._onResponseHandler) {\n        log.log('RESPONSE-EVENT: ', event);\n        _this._onResponseHandler(event);\n      }\n    }\n\n    //FLOW-IN: message received from ReporterURL address: emited by a remote Syncher -> read\n\n  }, {\n    key: '_onRead',\n    value: function _onRead(msg) {\n      var _this = this;\n      var childrensSize = (0, _stringify2.default)(_this.childrensJSON).length;\n\n      var largeObject = childrensSize > _this._childrenSizeThreshold ? true : false;\n\n      var event = {\n        type: msg.type,\n        url: msg.from,\n\n        accept: function accept() {\n          if (largeObject) _this._syncReplyForLargeData(msg);else _this._syncReply(msg);\n        },\n\n        reject: function reject(reason) {\n          _this._bus.postMessage({\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\n            body: { code: 401, desc: reason }\n          });\n        }\n      };\n\n      // if the requester is an authorised observer, the data object is responded otherwise an event is triggered\n      var subscriptions = [];\n\n      if (_this.metadata.subscriptions) {\n        subscriptions = _this.metadata.subscriptions;\n      } else if (_this._subscriptions) {\n        subscriptions = (0, _keys2.default)(_this._subscriptions).map(function (key) {\n          return _this._subscriptions[key].url;\n        });\n      }\n\n      if (subscriptions.indexOf(msg.from) != -1) {\n        if (largeObject) _this._syncReplyForLargeData(msg);else _this._syncReply(msg);\n      } else if (_this._onReadHandler) {\n        log.log('READ-EVENT: ', event);\n        _this._onReadHandler(event);\n      }\n    }\n  }, {\n    key: '_syncReply',\n    value: function _syncReply(msg) {\n      var _this = this;\n\n      var objectValue = (0, _utils.deepClone)(_this.metadata);\n\n      objectValue.data = (0, _utils.deepClone)(_this.data);\n      objectValue.childrenObjects = (0, _utils.deepClone)(_this.childrensJSON);\n\n      objectValue.version = _this._version;\n\n      var response = {\n        id: msg.id, type: 'response', from: msg.to, to: msg.from,\n        body: { code: 200, value: objectValue }\n      };\n\n      _this._bus.postMessage(response);\n    }\n\n    // This function is only used if the data object to be synched has childrenOjects too large\n\n  }, {\n    key: '_syncReplyForLargeData',\n    value: function _syncReplyForLargeData(msg) {\n      //set attribute with number of spllited messages\n      var _this = this;\n\n      // lets set the initial message with no childObjects\n\n      var objectValue = (0, _utils.deepClone)(_this.metadata);\n\n      objectValue.data = (0, _utils.deepClone)(_this.data);\n\n      objectValue.version = _this._version;\n\n      delete objectValue.childrenObjects;\n\n      var children = void 0;\n      var values = []; // array of values to be sent in separated responses\n      var childrenValue = {}; // value to be used in each response\n\n      for (children in _this._childrenObjects) {\n        var child = void 0;\n        childrenValue[children] = {};\n        for (child in _this._childrenObjects[children]) {\n          if ((0, _stringify2.default)(childrenValue).length > _this._childrenSizeThreshold) {\n            //childrenValue big enough to be sent in a response message\n            values.push(childrenValue);\n            childrenValue = {};\n            childrenValue[children] = {};\n          }\n          childrenValue[children][child] = {};\n          childrenValue[children][child].value = _this._childrenObjects[children][child].metadata;\n          childrenValue[children][child].identity = _this._childrenObjects[children][child].identity;\n        }\n      }\n\n      values.push(childrenValue);\n\n      objectValue.responses = values.length + 1; //number of responses to be sent\n\n      var initialResponse = {\n        id: msg.id, type: 'response', from: msg.to, to: msg.from,\n        body: { code: 100, value: objectValue }\n      };\n\n      _this._bus.postMessage(initialResponse);\n\n      values.forEach(function (value) {\n\n        var response = (0, _utils.deepClone)(initialResponse);\n\n        response.body.value = value;\n\n        response.body.value.responses = objectValue.responses;\n\n        setTimeout(function () {\n          _this._bus.postMessage(response);\n        }, 50);\n\n        // should put a timeout?\n      });\n    }\n\n    // Execute request received\n\n  }, {\n    key: '_onExecute',\n    value: function _onExecute(msg) {\n      var _this = this;\n\n      if (!msg.body.method) throw '[DataObjectReporter._onExecute] method missing ', msg;\n\n      var response = {\n        id: msg.id, type: 'response', from: msg.to, to: msg.from,\n        body: { code: 200 }\n      };\n\n      var event = {\n        type: msg.type,\n        url: msg.from,\n        method: msg.body.method,\n        params: msg.body.params,\n\n        accept: function accept() {\n          _this._bus.postMessage(response);\n        },\n\n        reject: function reject(reason) {\n          _this._bus.postMessage({\n            id: msg.id, type: 'response', from: msg.to, to: msg.from,\n            body: { code: 401, desc: reason }\n          });\n        }\n      };\n\n      if (_this._onExecuteHandler) {\n        log.log('[DataObjectReporter] EXECUTE-EVENT: ', event);\n        _this._onExecuteHandler(event);\n      }\n    }\n  }, {\n    key: 'subscriptions',\n    get: function get() {\n      return this._subscriptions;\n    }\n  }, {\n    key: 'childrensJSON',\n    get: function get() {\n      var _this = this;\n      var childrens = {};\n\n      var children = void 0;\n\n      for (children in _this._childrenObjects) {\n        var child = void 0;\n        childrens[children] = {};\n        for (child in _this._childrenObjects[children]) {\n          childrens[children][child] = {};\n          childrens[children][child].value = _this._childrenObjects[children][child].metadata;\n          childrens[children][child].identity = _this._childrenObjects[children][child].identity;\n        }\n      }\n\n      return childrens;\n    }\n  }]);\n  return DataObjectReporter;\n}(_DataObject3.default /* implements SyncStatus */);\n\nexports.default = DataObjectReporter;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///132\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _assign = __webpack_require__(78);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getPrototypeOf = __webpack_require__(25);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(33);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = __webpack_require__(100);\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = __webpack_require__(34);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _utils = __webpack_require__(19);\n\nvar _DataObject2 = __webpack_require__(122);\n\nvar _DataObject3 = _interopRequireDefault(_DataObject2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('DataObjectObserver'); /**\r\n                                                  * Copyright 2016 PT Inovação e Sistemas SA\r\n                                                  * Copyright 2016 INESC-ID\r\n                                                  * Copyright 2016 QUOBIS NETWORKS SL\r\n                                                  * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                                  * Copyright 2016 ORANGE SA\r\n                                                  * Copyright 2016 Deutsche Telekom AG\r\n                                                  * Copyright 2016 Apizee\r\n                                                  * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                                  *\r\n                                                  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                                  * you may not use this file except in compliance with the License.\r\n                                                  * You may obtain a copy of the License at\r\n                                                  *\r\n                                                  *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                                  *\r\n                                                  * Unless required by applicable law or agreed to in writing, software\r\n                                                  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                                  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                                  * See the License for the specific language governing permissions and\r\n                                                  * limitations under the License.\r\n                                                  **/\n\n// Log System\n\n\nvar FilterType = { ANY: 'any', START: 'start', EXACT: 'exact' };\n\n/**\r\n * The class returned from the Syncher subscribe call.\r\n * To be used as an observation point from a DataObjectReporter change.\r\n */\n\nvar DataObjectObserver = function (_DataObject) {\n  (0, _inherits3.default)(DataObjectObserver, _DataObject);\n\n  /* private\r\n  _changeListener: MsgListener\r\n    ----event handlers----\r\n  _filters: {<filter>: {type: <start, exact>, callback: <function>} }\r\n  */\n\n  /**\r\n   * @ignore\r\n   * Should not be used directly by Hyperties. It's called by the Syncher.subscribe method\r\n   */\n\n  //TODO: For Further Study\n  function DataObjectObserver(input) {\n    (0, _classCallCheck3.default)(this, DataObjectObserver);\n\n    var _this2 = (0, _possibleConstructorReturn3.default)(this, (DataObjectObserver.__proto__ || (0, _getPrototypeOf2.default)(DataObjectObserver)).call(this, input));\n    //todo: check why\n    //input.initialData = input.initialData.data;\n\n    var _this = _this2;\n\n    _this._version = input.version;\n    _this._filters = {};\n\n    _this._syncObj.observe(function (event) {\n      _this._onFilter(event);\n    });\n\n    _this._allocateListeners();\n    return _this2;\n  }\n\n  /**\r\n   * Sync Data Object Observer with last version of Data Object Reporter. Useful for Resumes\r\n   */\n\n\n  (0, _createClass3.default)(DataObjectObserver, [{\n    key: 'sync',\n    value: function sync() {\n\n      var _this = this;\n      log.info('[DataObjectObserver_sync] synchronising ');\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this._syncher.read(_this._metadata.url).then(function (value) {\n          log.info('[DataObjectObserver_sync] value to sync: ', value);\n\n          (0, _assign2.default)(_this.data, (0, _utils.deepClone)(value.data));\n\n          _this._version = value.version;\n\n          _this._metadata.lastModified = value.lastModified;\n\n          //TODO: check first if there are new childrenObjects to avoid overhead\n\n          if (value.childrenObjects) {\n            _this.resumeChildrens(value.childrenObjects);\n            _this._storeChildrens();\n            resolve(true);\n          } else resolve(true);\n\n          /*if (value.version != _this._version) {\r\n            log.info('[DataObjectObserver_sync] updating existing data: ', _this.data);\r\n              Object.assign(_this.data || {}, deepClone(value.data));\r\n              _this._metadata = deepClone(value);\r\n              delete _this._metadata.data;\r\n              _this._version = value.version;\r\n            } else {\r\n            log.info('[DataObjectObserver_sync] existing data is updated: ', value);\r\n          }*/\n        }).catch(function (reason) {\n          log.info('[DataObjectObserver_sync] sync failed: ', reason);\n          resolve(false);\n        });\n      });\n    }\n  }, {\n    key: '_storeChildrens',\n    value: function _storeChildrens() {\n      var _this = this;\n\n      var childrens = {};\n\n      //TODO: to be sent to HypertyResourceStorage when ready to handle Chat Messages\n\n      (0, _keys2.default)(_this._childrenObjects).forEach(function (childrenResource) {\n        var children = _this._childrenObjects[childrenResource];\n        childrens[childrenResource] = {};\n\n        (0, _keys2.default)(children).forEach(function (childId) {\n          childrens[childrenResource][childId] = {};\n          childrens[childrenResource][childId].value = children[childId].metadata;\n          childrens[childrenResource][childId].identity = children[childId].identity;\n        });\n      });\n\n      var msg = {\n\n        from: _this._owner,\n        to: _this._syncher._subURL,\n        type: 'create',\n        body: {\n          resource: _this._url,\n          attribute: 'childrenObjects',\n          value: childrens\n        }\n      };\n\n      _this._bus.postMessage(msg);\n    }\n  }, {\n    key: '_allocateListeners',\n    value: function _allocateListeners() {\n      (0, _get3.default)(DataObjectObserver.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectObserver.prototype), '_allocateListeners', this).call(this);\n      var _this = this;\n\n      _this._changeListener = _this._bus.addListener(_this._url + '/changes', function (msg) {\n        if (msg.type === 'update') {\n          log.log('DataObjectObserver-' + _this._url + '-RCV: ', msg);\n          _this._changeObject(_this._syncObj, msg);\n        }\n      });\n    }\n  }, {\n    key: '_releaseListeners',\n    value: function _releaseListeners() {\n      (0, _get3.default)(DataObjectObserver.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectObserver.prototype), '_releaseListeners', this).call(this);\n      var _this = this;\n\n      _this._changeListener.remove();\n    }\n\n    /**\r\n     * Release and delete object data\r\n     */\n\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      var _this = this;\n\n      _this._deleteChildrens().then(function () {\n        _this.unsubscribe();\n        _this._releaseListeners();\n        delete _this._syncher._observers[_this._url];\n      });\n    }\n\n    /**\r\n     * Release and delete object data\r\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      var _this = this;\n\n      //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalUnSubscribe\n      var unSubscribeMsg = {\n        type: 'unsubscribe', from: _this._owner, to: _this._syncher._subURL,\n        body: { resource: _this._url }\n      };\n\n      _this._bus.postMessage(unSubscribeMsg, function (reply) {\n        log.log('DataObjectObserver-UNSUBSCRIBE: ', reply);\n        if (reply.body.code === 200) {\n          _this._releaseListeners();\n          delete _this._syncher._observers[_this._url];\n        }\n      });\n    }\n\n    /**\r\n     * Register the change listeners sent by the reporter\r\n     * @param {string} filter - Filter that identifies the field (separated dot path). Accepts * at the end for a more unrestricted filtering.\r\n     * @param {function(event: MsgEvent)} callback\r\n     */\n\n  }, {\n    key: 'onChange',\n    value: function onChange(filter, callback) {\n      var key = filter;\n      var filterObj = {\n        type: FilterType.EXACT,\n        callback: callback\n      };\n\n      var idx = filter.indexOf('*');\n      if (idx === filter.length - 1) {\n        if (idx === 0) {\n          filterObj.type = FilterType.ANY;\n        } else {\n          filterObj.type = FilterType.START;\n          key = filter.substr(0, filter.length - 1);\n        }\n      }\n\n      this._filters[key] = filterObj;\n    }\n  }, {\n    key: '_onFilter',\n    value: function _onFilter(event) {\n      var _this = this;\n\n      (0, _keys2.default)(_this._filters).forEach(function (key) {\n        var filter = _this._filters[key];\n        if (filter.type === FilterType.ANY) {\n          //match anything\n          filter.callback(event);\n        } else if (filter.type === FilterType.START) {\n          //if starts with filter...\n          if (event.field.indexOf(key) === 0) {\n            filter.callback(event);\n          }\n        } else if (filter.type === FilterType.EXACT) {\n          //exact match\n          if (event.field === key) {\n            filter.callback(event);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'onDisconnected',\n    value: function onDisconnected(callback) {\n      var _this3 = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this3._subscribeRegistration().then(function () {\n          _this3._onDisconnected = callback;\n          resolve();\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: '_subscribeRegistration',\n    value: function _subscribeRegistration() {\n      var _this4 = this;\n\n      var msg = {\n        type: 'subscribe',\n        from: this._owner,\n        to: this._syncher._runtimeUrl + '/subscriptions',\n        body: {\n          resources: [this._url + '/registration']\n        }\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this4._bus.postMessage(msg, function (reply) {\n          log.log('[DataObjectObserver._subscribeRegistration] ' + _this4._url + ' rcved reply ', reply);\n\n          if (reply.body.code === 200) {\n            _this4._generateListener(_this4._url + '/registration');\n            resolve();\n          } else {\n            log.error('Error subscribing registration status for ', _this4._url);\n            reject('Error subscribing registration status for ' + _this4._url);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_generateListener',\n    value: function _generateListener(notificationURL) {\n      var _this = this;\n\n      _this._bus.addListener(notificationURL, function (msg) {\n        log.log('[DataObjectObserver.registrationNotification] ' + _this._url + ': ', msg);\n        if (msg.body.value && msg.body.value === 'disconnected' && _this._onDisconnected) {\n          log.log('[DataObjectObserver] ' + _this._url + ': was disconnected ', msg);\n          _this._onDisconnected();\n        }\n      });\n    }\n\n    /**\r\n     * Requests the reporter to execute a method on the data object\r\n     * @param {string} method - Name of the function to be executed.\r\n     * @param {array} params - array of parameters for the requested function\r\n     * @return {promise}\r\n     */\n\n  }, {\n    key: 'execute',\n    value: function execute(method, params) {\n      var _this5 = this;\n\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var msg = {\n          type: 'execute',\n          from: _this5._owner,\n          to: _this._url,\n          body: {\n            method: method,\n            params: params\n          }\n        };\n\n        _this._bus.postMessage(msg, function (reply) {\n          log.log('[DataObjectObserver.execute] ' + _this._url + ' rcved reply ', reply);\n\n          if (reply.body.code === 200) {\n            resolve();\n          } else {\n            log.warn('[DataObjectObserver.execute] execution of method ' + method + ' was reject by reporter');\n            reject('[DataObjectObserver.execute] execution of method ' + method + ' was reject by reporter');\n          }\n        });\n      });\n    }\n  }]);\n  return DataObjectObserver;\n}(_DataObject3.default /* implements SyncStatus */);\n\nexports.default = DataObjectObserver;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///133\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _utils = __webpack_require__(19);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('RegistrationStatus'); /**\r\n                                                  * Copyright 2016 PT Inovação e Sistemas SA\r\n                                                  * Copyright 2016 INESC-ID\r\n                                                  * Copyright 2016 QUOBIS NETWORKS SL\r\n                                                  * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                                  * Copyright 2016 ORANGE SA\r\n                                                  * Copyright 2016 Deutsche Telekom AG\r\n                                                  * Copyright 2016 Apizee\r\n                                                  * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                                  *\r\n                                                  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                                  * you may not use this file except in compliance with the License.\r\n                                                  * You may obtain a copy of the License at\r\n                                                  *\r\n                                                  *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                                  *\r\n                                                  * Unless required by applicable law or agreed to in writing, software\r\n                                                  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                                  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                                  * See the License for the specific language governing permissions and\r\n                                                  * limitations under the License.\r\n                                                  **/\n\n// Log System\n\n/**\r\n* The RegistrationStatus lib allows to monitor registration status of an Hyperty or Data Object\r\n*\r\n*/\nvar RegistrationStatus = function () {\n\n  /**\r\n  * @param {URL} url URL address of the entity to be monitored\r\n  * @param {URL} runtimeURL the current URL of the Runtime Instance used\r\n  * @param {HypertyURL} owner the URL of the Hyperty instance that is using this lib\r\n  * @param {MiniBus} owner the URL of the Hyperty instance that is using this lib\r\n  *\r\n  */\n\n  function RegistrationStatus(url, runtimeURL, owner, msgBus) {\n    (0, _classCallCheck3.default)(this, RegistrationStatus);\n\n    this._registryObjectURL = url;\n    this._runtimeURL = runtimeURL;\n    this._domain = (0, _utils.divideURL)(runtimeURL).domain;\n    this._discoveredObjectURL = owner;\n    this._messageBus = msgBus;\n    this._subscriptionSet = false;\n    this._subscribers = {\n      live: {},\n      disconnected: {}\n    };\n  }\n\n  (0, _createClass3.default)(RegistrationStatus, [{\n    key: 'onLive',\n    value: function onLive(subscriber, callback) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (!_this._subscriptionSet) {\n          _this._subscribe().then(function () {\n            _this._subscribers.live[subscriber] = callback;\n            resolve();\n          }).catch(function (err) {\n            return reject(err);\n          });\n        } else {\n          _this._subscribers.live[subscriber] = callback;\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: 'onDisconnected',\n    value: function onDisconnected(subscriber, callback) {\n      var _this2 = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (!_this2._subscriptionSet) {\n          _this2._subscribe().then(function () {\n            _this2._subscribers.disconnected[subscriber] = callback;\n            resolve();\n          }).catch(function (err) {\n            return reject(err);\n          });\n        } else {\n          _this2._subscribers.disconnected[subscriber] = callback;\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe() {\n      var _this3 = this;\n\n      var msg = {\n        type: 'subscribe',\n        from: this._discoveredObjectURL,\n        to: this._runtimeURL + '/subscriptions',\n        body: {\n          resources: [this._registryObjectURL + '/registration']\n        }\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this3._messageBus.postMessage(msg, function (reply) {\n          log.log('[DiscoveredObject.subscribe] ' + _this3._registryObjectURL + ' rcved reply ', reply);\n\n          if (reply.body.code === 200) {\n            _this3._generateListener(_this3._registryObjectURL + '/registration');\n            _this3._subscriptionSet = true;\n            resolve();\n          } else {\n            log.error('Error subscribing ', _this3._registryObjectURL);\n            reject('Error subscribing ' + _this3._registryObjectURL);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_generateListener',\n    value: function _generateListener(notificationURL) {\n      var _this4 = this;\n\n      this._messageBus.addListener(notificationURL, function (msg) {\n        log.log('[DiscoveredObject.notification] ' + _this4._registryObjectURL + ': ', msg);\n        _this4._processNotification(msg);\n      });\n    }\n  }, {\n    key: '_processNotification',\n    value: function _processNotification(msg) {\n      var _this5 = this;\n\n      var status = msg.body.value;\n\n      setTimeout(function () {\n\n        // Hack to give time for onLive Hyperties to get ready. To be removed when Hyperty State machaine is implemented\n        (0, _keys2.default)(_this5._subscribers[status]).forEach(function (subscriber) {\n          return _this5._subscribers[status][subscriber]();\n        });\n      }, 5000);\n    }\n  }, {\n    key: '_unsubscribe',\n    value: function _unsubscribe() {\n      var _this6 = this;\n\n      var msg = {\n        type: 'unsubscribe',\n        from: this._discoveredObjectURL,\n        to: this._runtimeURL + '/subscriptions',\n        body: {\n          resource: this._registryObjectURL + '/registration'\n        }\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this6._messageBus.postMessage(msg, function (reply) {\n          log.log('[DiscoveredObject.unsubscribe] ' + _this6._registryObjectURL + ' rcved reply ', reply);\n\n          if (reply.body.code === 200) {\n            resolve();\n          } else {\n            log.error('Error unsubscribing ', _this6._registryObjectURL);\n            reject('Error unsubscribing ' + _this6._registryObjectURL);\n          }\n        });\n      });\n    }\n  }, {\n    key: 'unsubscribeLive',\n    value: function unsubscribeLive(subscriber) {\n      var _this7 = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (subscriber in _this7._subscribers.live) {\n\n          //TODO: unsubscribe outside this condition\n          delete _this7._subscribers.live[subscriber];\n        }\n\n        if (_this7._areSubscriptionsEmpty()) {\n          _this7._unsubscribe().then(function () {\n            return resolve();\n          }).catch(function (err) {\n            return reject(err);\n          });\n        } else {\n          resolve();\n        }\n\n        /*  } else {\r\n            reject(`${subscriber} doesn't subscribe onLive for ${this._registryObjectURL}`);\r\n          }*/\n      });\n    }\n  }, {\n    key: 'unsubscribeDisconnected',\n    value: function unsubscribeDisconnected(subscriber) {\n      var _this8 = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (subscriber in _this8._subscribers.disconnected) {\n          delete _this8._subscribers.disconnected[subscriber];\n\n          if (_this8._areSubscriptionsEmpty()) {\n            _this8._unsubscribe().then(function () {\n              return resolve();\n            }).catch(function (err) {\n              return reject(err);\n            });\n          } else {\n            resolve();\n          }\n        } else {\n          reject(subscriber + ' doesn\\'t subscribe onDisconnected for ' + _this8._registryObjectURL);\n        }\n      });\n    }\n  }, {\n    key: '_areSubscriptionsEmpty',\n    value: function _areSubscriptionsEmpty() {\n      return (0, _keys2.default)(this._subscribers.live).length === 0 && (0, _keys2.default)(this._subscribers.disconnected).length === 0;\n    }\n  }]);\n  return RegistrationStatus;\n}();\n\nexports.default = RegistrationStatus;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///134\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('DataProvisional'); /**\r\n                                               * Copyright 2016 PT Inovação e Sistemas SA\r\n                                               * Copyright 2016 INESC-ID\r\n                                               * Copyright 2016 QUOBIS NETWORKS SL\r\n                                               * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                               * Copyright 2016 ORANGE SA\r\n                                               * Copyright 2016 Deutsche Telekom AG\r\n                                               * Copyright 2016 Apizee\r\n                                               * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                               *\r\n                                               * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                               * you may not use this file except in compliance with the License.\r\n                                               * You may obtain a copy of the License at\r\n                                               *\r\n                                               *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                               *\r\n                                               * Unless required by applicable law or agreed to in writing, software\r\n                                               * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                               * See the License for the specific language governing permissions and\r\n                                               * limitations under the License.\r\n                                               **/\n\n/**\r\n * @access private\r\n * This class is responsible for collecting delta changes in remote objects, before the response of subscription reach the observer.\r\n * It's used in Syncher -> subscribe. The flow is defined as:\r\n * 1. (observer) --subscribe--\x3e (reporter)\r\n * 2. (observer) <--delta updates-- (reporter)\r\n * 3. (observer) <--subscribe response-- (reporter)\r\n * This means that there could be delta updates transferred before the subscription confirmation.\r\n * Since there is no DataObjectObserver before the ubscription confirmation, there should be some other object collecting the updates.\r\n * Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.\r\n */\n\n// Log System\n\nvar DataProvisional = function () {\n  /* private\r\n  _childrenListeners: [MsgListener]\r\n  _listener: MsgListener\r\n    _changes: []\r\n  */\n\n  function DataProvisional(owner, url, bus, children) {\n    (0, _classCallCheck3.default)(this, DataProvisional);\n\n    var _this = this;\n\n    _this._owner = owner;\n    _this._url = url;\n    _this._bus = bus;\n    _this._children = children;\n\n    _this._changes = [];\n    _this._allocateListeners();\n  }\n\n  (0, _createClass3.default)(DataProvisional, [{\n    key: '_allocateListeners',\n    value: function _allocateListeners() {\n      var _this = this;\n\n      _this._listener = _this._bus.addListener(_this._url, function (msg) {\n        log.log('DataProvisional-' + _this._url + '-RCV: ', msg);\n        _this._changes.push(msg);\n      });\n\n      /*\r\n      _this._childrenListeners = [];\r\n      if (_this._children) {\r\n        let childBaseURL = url + '/children/';\r\n        _this._children.forEach((child) => {\r\n          let childURL = childBaseURL + child;\r\n          let listener = _this._bus.addListener(childURL, (msg) => {\r\n            //ignore msg sent by himself\r\n            if (msg.from !== owner) {\r\n              log.log(msg);\r\n            }\r\n          });\r\n            _this._childrenListeners.push(listener);\r\n        });\r\n      }*/\n    }\n  }, {\n    key: '_releaseListeners',\n    value: function _releaseListeners() {\n      var _this = this;\n\n      _this._listener.remove();\n\n      /*_this._childrenListeners.forEach((listener) => {\r\n        listener.remove();\r\n      });*/\n    }\n  }, {\n    key: 'apply',\n    value: function apply(observer) {\n      var _this = this;\n      _this._changes.forEach(function (change) {\n        observer._changeObject(observer._syncObj, change);\n      });\n    }\n  }, {\n    key: 'children',\n    get: function get() {\n      return this._children;\n    }\n  }]);\n  return DataProvisional;\n}();\n\nexports.default = DataProvisional;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3luY2hlci9EYXRhUHJvdmlzaW9uYWwuanM/YTYyNCJdLCJuYW1lcyI6WyJsb2dnZXIiLCJsb2ciLCJnZXRMb2dnZXIiLCJEYXRhUHJvdmlzaW9uYWwiLCJvd25lciIsInVybCIsImJ1cyIsImNoaWxkcmVuIiwiX3RoaXMiLCJfb3duZXIiLCJfdXJsIiwiX2J1cyIsIl9jaGlsZHJlbiIsIl9jaGFuZ2VzIiwiX2FsbG9jYXRlTGlzdGVuZXJzIiwiX2xpc3RlbmVyIiwiYWRkTGlzdGVuZXIiLCJtc2ciLCJwdXNoIiwicmVtb3ZlIiwib2JzZXJ2ZXIiLCJmb3JFYWNoIiwiY2hhbmdlIiwiX2NoYW5nZU9iamVjdCIsIl9zeW5jT2JqIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQW9DQTs7SUFBWUEsTTs7Ozs7O0FBQ1osSUFBSUMsTUFBTUQsT0FBT0UsU0FBUCxDQUFpQixpQkFBakIsQ0FBVixDLENBckNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTs7Ozs7Ozs7Ozs7O0FBWUE7O0lBSU1DLGU7QUFDSjs7Ozs7O0FBT0EsMkJBQVlDLEtBQVosRUFBbUJDLEdBQW5CLEVBQXdCQyxHQUF4QixFQUE2QkMsUUFBN0IsRUFBdUM7QUFBQTs7QUFDckMsUUFBSUMsUUFBUSxJQUFaOztBQUVBQSxVQUFNQyxNQUFOLEdBQWVMLEtBQWY7QUFDQUksVUFBTUUsSUFBTixHQUFhTCxHQUFiO0FBQ0FHLFVBQU1HLElBQU4sR0FBYUwsR0FBYjtBQUNBRSxVQUFNSSxTQUFOLEdBQWtCTCxRQUFsQjs7QUFFQUMsVUFBTUssUUFBTixHQUFpQixFQUFqQjtBQUNBTCxVQUFNTSxrQkFBTjtBQUNEOzs7O3lDQUVvQjtBQUNuQixVQUFJTixRQUFRLElBQVo7O0FBRUFBLFlBQU1PLFNBQU4sR0FBa0JQLE1BQU1HLElBQU4sQ0FBV0ssV0FBWCxDQUF1QlIsTUFBTUUsSUFBN0IsRUFBbUMsVUFBQ08sR0FBRCxFQUFTO0FBQzVEaEIsWUFBSUEsR0FBSixDQUFRLHFCQUFxQk8sTUFBTUUsSUFBM0IsR0FBa0MsUUFBMUMsRUFBb0RPLEdBQXBEO0FBQ0FULGNBQU1LLFFBQU4sQ0FBZUssSUFBZixDQUFvQkQsR0FBcEI7QUFDRCxPQUhpQixDQUFsQjs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JEOzs7d0NBRW1CO0FBQ2xCLFVBQUlULFFBQVEsSUFBWjs7QUFFQUEsWUFBTU8sU0FBTixDQUFnQkksTUFBaEI7O0FBRUE7OztBQUdEOzs7MEJBSUtDLFEsRUFBVTtBQUNkLFVBQUlaLFFBQVEsSUFBWjtBQUNBQSxZQUFNSyxRQUFOLENBQWVRLE9BQWYsQ0FBdUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ2pDRixpQkFBU0csYUFBVCxDQUF1QkgsU0FBU0ksUUFBaEMsRUFBMENGLE1BQTFDO0FBQ0QsT0FGRDtBQUdEOzs7d0JBUGM7QUFBRSxhQUFPLEtBQUtWLFNBQVo7QUFBd0I7Ozs7O2tCQVU1QlQsZSIsImZpbGUiOiIxMzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRFxyXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXHJcbiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxyXG4qIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOXHJcbipcclxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4qIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuKlxyXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbipcclxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKiovXHJcblxyXG4vKipcclxuICogQGFjY2VzcyBwcml2YXRlXHJcbiAqIFRoaXMgY2xhc3MgaXMgcmVzcG9uc2libGUgZm9yIGNvbGxlY3RpbmcgZGVsdGEgY2hhbmdlcyBpbiByZW1vdGUgb2JqZWN0cywgYmVmb3JlIHRoZSByZXNwb25zZSBvZiBzdWJzY3JpcHRpb24gcmVhY2ggdGhlIG9ic2VydmVyLlxyXG4gKiBJdCdzIHVzZWQgaW4gU3luY2hlciAtPiBzdWJzY3JpYmUuIFRoZSBmbG93IGlzIGRlZmluZWQgYXM6XHJcbiAqIDEuIChvYnNlcnZlcikgLS1zdWJzY3JpYmUtLT4gKHJlcG9ydGVyKVxyXG4gKiAyLiAob2JzZXJ2ZXIpIDwtLWRlbHRhIHVwZGF0ZXMtLSAocmVwb3J0ZXIpXHJcbiAqIDMuIChvYnNlcnZlcikgPC0tc3Vic2NyaWJlIHJlc3BvbnNlLS0gKHJlcG9ydGVyKVxyXG4gKiBUaGlzIG1lYW5zIHRoYXQgdGhlcmUgY291bGQgYmUgZGVsdGEgdXBkYXRlcyB0cmFuc2ZlcnJlZCBiZWZvcmUgdGhlIHN1YnNjcmlwdGlvbiBjb25maXJtYXRpb24uXHJcbiAqIFNpbmNlIHRoZXJlIGlzIG5vIERhdGFPYmplY3RPYnNlcnZlciBiZWZvcmUgdGhlIHVic2NyaXB0aW9uIGNvbmZpcm1hdGlvbiwgdGhlcmUgc2hvdWxkIGJlIHNvbWUgb3RoZXIgb2JqZWN0IGNvbGxlY3RpbmcgdGhlIHVwZGF0ZXMuXHJcbiAqIFByb3Zpc2lvbmFsIGRhdGEgaXMgYXBwbGllZCB0byB0aGUgRGF0YU9iamVjdE9ic2VydmVyIGFmdGVyIGNvbmZpcm1hdGlvbi4gT3IgZGlzY2FyZGVkIGlmIHRoZXJlIGlzIG5vIGNvbmZpcm1hdGlvbi5cclxuICovXHJcblxyXG4vLyBMb2cgU3lzdGVtXHJcbmltcG9ydCAqIGFzIGxvZ2dlciBmcm9tICdsb2dsZXZlbCc7XHJcbmxldCBsb2cgPSBsb2dnZXIuZ2V0TG9nZ2VyKCdEYXRhUHJvdmlzaW9uYWwnKTtcclxuXHJcbmNsYXNzIERhdGFQcm92aXNpb25hbCB7XHJcbiAgLyogcHJpdmF0ZVxyXG4gIF9jaGlsZHJlbkxpc3RlbmVyczogW01zZ0xpc3RlbmVyXVxyXG4gIF9saXN0ZW5lcjogTXNnTGlzdGVuZXJcclxuXHJcbiAgX2NoYW5nZXM6IFtdXHJcbiAgKi9cclxuXHJcbiAgY29uc3RydWN0b3Iob3duZXIsIHVybCwgYnVzLCBjaGlsZHJlbikge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fb3duZXIgPSBvd25lcjtcclxuICAgIF90aGlzLl91cmwgPSB1cmw7XHJcbiAgICBfdGhpcy5fYnVzID0gYnVzO1xyXG4gICAgX3RoaXMuX2NoaWxkcmVuID0gY2hpbGRyZW47XHJcblxyXG4gICAgX3RoaXMuX2NoYW5nZXMgPSBbXTtcclxuICAgIF90aGlzLl9hbGxvY2F0ZUxpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgX2FsbG9jYXRlTGlzdGVuZXJzKCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fbGlzdGVuZXIgPSBfdGhpcy5fYnVzLmFkZExpc3RlbmVyKF90aGlzLl91cmwsIChtc2cpID0+IHtcclxuICAgICAgbG9nLmxvZygnRGF0YVByb3Zpc2lvbmFsLScgKyBfdGhpcy5fdXJsICsgJy1SQ1Y6ICcsIG1zZyk7XHJcbiAgICAgIF90aGlzLl9jaGFuZ2VzLnB1c2gobXNnKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qXHJcbiAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMgPSBbXTtcclxuICAgIGlmIChfdGhpcy5fY2hpbGRyZW4pIHtcclxuICAgICAgbGV0IGNoaWxkQmFzZVVSTCA9IHVybCArICcvY2hpbGRyZW4vJztcclxuICAgICAgX3RoaXMuX2NoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiB7XHJcbiAgICAgICAgbGV0IGNoaWxkVVJMID0gY2hpbGRCYXNlVVJMICsgY2hpbGQ7XHJcbiAgICAgICAgbGV0IGxpc3RlbmVyID0gX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihjaGlsZFVSTCwgKG1zZykgPT4ge1xyXG4gICAgICAgICAgLy9pZ25vcmUgbXNnIHNlbnQgYnkgaGltc2VsZlxyXG4gICAgICAgICAgaWYgKG1zZy5mcm9tICE9PSBvd25lcikge1xyXG4gICAgICAgICAgICBsb2cubG9nKG1zZyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIF90aGlzLl9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcclxuICAgICAgfSk7XHJcbiAgICB9Ki9cclxuICB9XHJcblxyXG4gIF9yZWxlYXNlTGlzdGVuZXJzKCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fbGlzdGVuZXIucmVtb3ZlKCk7XHJcblxyXG4gICAgLypfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcclxuICAgICAgbGlzdGVuZXIucmVtb3ZlKCk7XHJcbiAgICB9KTsqL1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNoaWxkcmVuKCkgeyByZXR1cm4gdGhpcy5fY2hpbGRyZW47IH1cclxuXHJcbiAgYXBwbHkob2JzZXJ2ZXIpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcbiAgICBfdGhpcy5fY2hhbmdlcy5mb3JFYWNoKChjaGFuZ2UpID0+IHtcclxuICAgICAgb2JzZXJ2ZXIuX2NoYW5nZU9iamVjdChvYnNlcnZlci5fc3luY09iaiwgY2hhbmdlKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGF0YVByb3Zpc2lvbmFsO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc3luY2hlci9EYXRhUHJvdmlzaW9uYWwuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///135\n")},,,function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _loglevel = __webpack_require__(22);\n\nvar logger = _interopRequireWildcard(_loglevel);\n\nvar _utils = __webpack_require__(19);\n\nvar _DiscoveredObject = __webpack_require__(139);\n\nvar _DiscoveredObject2 = _interopRequireDefault(_DiscoveredObject);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = logger.getLogger('Discovery'); /**\r\n                                         * Copyright 2016 PT Inovação e Sistemas SA\r\n                                         * Copyright 2016 INESC-ID\r\n                                         * Copyright 2016 QUOBIS NETWORKS SL\r\n                                         * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n                                         * Copyright 2016 ORANGE SA\r\n                                         * Copyright 2016 Deutsche Telekom AG\r\n                                         * Copyright 2016 Apizee\r\n                                         * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n                                         *\r\n                                         * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n                                         * you may not use this file except in compliance with the License.\r\n                                         * You may obtain a copy of the License at\r\n                                         *\r\n                                         *   http://www.apache.org/licenses/LICENSE-2.0\r\n                                         *\r\n                                         * Unless required by applicable law or agreed to in writing, software\r\n                                         * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n                                         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n                                         * See the License for the specific language governing permissions and\r\n                                         * limitations under the License.\r\n                                         **/\n\n// Log System\n\n/**\r\n* Core Discovery interface\r\n* Class to allow applications to search for hyperties and DataObjects using the message bus\r\n*/\nvar Discovery = function () {\n\n  /**\r\n  * To initialise the HypertyDiscover, which will provide the support for hyperties to\r\n  * query users registered in outside the internal core.\r\n  * @param  {MessageBus}          msgbus                msgbus\r\n  * @param  {RuntimeURL}          runtimeURL            runtimeURL\r\n  */\n  function Discovery(hypertyURL, runtimeURL, msgBus) {\n    (0, _classCallCheck3.default)(this, Discovery);\n\n    var _this = this;\n    _this.messageBus = msgBus;\n    _this.runtimeURL = runtimeURL;\n\n    _this.domain = (0, _utils.divideURL)(hypertyURL).domain;\n    _this.discoveryURL = hypertyURL;\n  }\n\n  /**\r\n  * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\r\n  * @param  {String}           userIdentifier\r\n  * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n  * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n  */\n\n\n  (0, _createClass3.default)(Discovery, [{\n    key: '_isLegacyUser',\n    value: function _isLegacyUser(userIdentifier) {\n      if (userIdentifier.includes(':') && !userIdentifier.includes('user://')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /**\r\n    * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\r\n    * @param  {String}           userIdentifier\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    */\n\n  }, {\n    key: 'discoverHypertiesPerUserProfileData',\n    value: function discoverHypertiesPerUserProfileData(userIdentifier, schema, resources) {\n      var _this = this;\n      var filteredHyperties = [];\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/userprofile/' + userIdentifier\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (!_this._isLegacyUser(userIdentifier)) {\n          // todo: to reomve when discovery of legcay users are supported\n\n          _this.messageBus.postMessage(msg, function (reply) {\n\n            if (reply.body.code === 200) {\n              reply.body.value.map(function (hyperty) {\n                if (hyperty.hypertyID != _this.discoveryURL) filteredHyperties.push(hyperty);\n              });\n              if (filteredHyperties.length === 0) resolve([]);else {\n                log.log(\"[Discovery.discoverHypertiesPerUserProfileData] Reply log: \", filteredHyperties);\n                resolve(filteredHyperties);\n              }\n            } else {\n              log.warn(\"[Discovery.discoverHypertiesPerUserProfileData] Error Reply for \" + userIdentifier + \" Reason: \", reply.body.description);\n              resolve([]);\n            }\n          });\n        } else {\n          resolve([{ hypertyID: userIdentifier, status: 'live' }]);\n        }\n      });\n    }\n\n    /**\r\n    * Advanced Search for Hyperties registered in domain registry associated with some user identifier (eg email, name ...)\r\n    * returns DiscoveredObject\r\n    * @param  {String}           userIdentifier\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    */\n\n  }, {\n    key: 'discoverHypertiesPerUserProfileDataDO',\n    value: function discoverHypertiesPerUserProfileDataDO(userIdentifier, schema, resources) {\n      var _this2 = this,\n          _arguments = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this2.discoverHypertiesPerUserProfileData.apply(_this2, _arguments).then(function (hyperties) {\n          resolve(_this2._convertToDiscoveredObject(hyperties));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * Advanced Search for DataObjects registered in domain registry associated with some user identifier (eg email, name ...)\r\n    * @param  {String}           userIdentifier\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerUserProfileData',\n    value: function discoverDataObjectsPerUserProfileData(userIdentifier, schema, resources) {\n      var _this = this;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/userprofile/' + userIdentifier\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (!_this._isLegacyUser(userIdentifier)) {\n          // todo: to reomve when discovery of legcay users are supported\n\n          _this.messageBus.postMessage(msg, function (reply) {\n\n            if (reply.body.code === 200) {\n              log.log(\"Reply log: \", reply.body.value);\n              resolve(reply.body.value);\n            } else {\n              log.warn(\"[Discovery.discoverDataObjectsPerUserProfileData] Error Reply for \" + userIdentifier + \" Reason: \", reply.body.description);\n              resolve([]);\n            }\n          });\n        } else {\n          resolve([{ hypertyID: userIdentifier, status: 'live' }]);\n        }\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerUserProfileDataDO',\n    value: function discoverDataObjectsPerUserProfileDataDO(guidURL, schema, resources) {\n      var _this3 = this,\n          _arguments2 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this3.discoverDataObjectsPerUserProfileData.apply(_this3, _arguments2).then(function (registryObjects) {\n          return resolve(_this3._convertToDiscoveredObject(registryObjects));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * Advanced Search for Hyperties registered in domain registry associated with some GUID\r\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    */\n\n  }, {\n    key: 'discoverHypertiesPerGUID',\n    value: function discoverHypertiesPerGUID(guidURL, schema, resources) {\n      var _this = this;\n      var filteredHyperties = [];\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/guid/' + guidURL\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            reply.body.value.map(function (hyperty) {\n              if (hyperty.hypertyID != _this.discoveryURL) filteredHyperties.push(hyperty);\n            });\n            if (filteredHyperties.length === 0) reject('No Hyperty was found');else {\n              log.log(\"Reply log: \", filteredHyperties);\n              resolve(filteredHyperties);\n            }\n          } else {\n            log.warn(\"[Discovery.discoverHypertiesPerGUID] Error Reply for \" + guidURL + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * Advanced Search for Hyperties registered in domain registry associated with some GUID\r\n    * returns DiscoveredObject\r\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    */\n\n  }, {\n    key: 'discoverHypertiesPerGUIDDO',\n    value: function discoverHypertiesPerGUIDDO(guidURL, schema, resources) {\n      var _this4 = this,\n          _arguments3 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this4.discoverHypertiesPerGUID.apply(_this4, _arguments3).then(function (hyperties) {\n          resolve(_this4._convertToDiscoveredObject(hyperties));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * Advanced Search for DataObjects registered in domain registry associated with some GUID\r\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerGUID',\n    value: function discoverDataObjectsPerGUID(guidURL, schema, resources) {\n      var _this = this;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/guid/' + guidURL\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            log.log(\"Reply log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            log.warn(\"[Discovery.discoverDataObjectsPerGUID] Error Reply for \" + guidURL + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}           guidURL                guid URL e.g user-guid://<unique-user-identifier>\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerGUIDDO',\n    value: function discoverDataObjectsPerGUIDDO(guidURL, schema, resources) {\n      var _this5 = this,\n          _arguments4 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this5.discoverDataObjectsPerGUID.apply(_this5, _arguments4).then(function (registryObjects) {\n          return resolve(_this5._convertToDiscoveredObject(registryObjects));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /** Advanced Search for Hyperties registered in domain registry\r\n    * @param  {String}           user                  user identifier, either in url or email format\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverHyperties',\n    value: function discoverHyperties(user, schema, resources, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n      var filteredHyperties = [];\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/user/' + user\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (!_this._isLegacyUser(user)) {\n          // todo: to reomve when discovery of legcay users are supported\n\n          _this.messageBus.postMessage(msg, function (reply) {\n\n            if (reply.body.code === 200 || reply.body.code === 500) {\n              reply.body.value.map(function (hyperty) {\n                if (hyperty.hypertyID != _this.discoveryURL) filteredHyperties.push(hyperty);\n              });\n              /*            if(filteredHyperties.length === 0)\r\n                            reject('No Hyperty was found');\r\n                          else {*/\n              log.log(\"[Discovery.discoverHyperties] Reply : \", filteredHyperties);\n              resolve(filteredHyperties);\n              //            }\n            } else {\n              log.warn(\"[Discovery.discoverHyperties] Error Reply for \" + user + \" Reason: \", reply.body.description);\n              resolve(filteredHyperties);\n            }\n          });\n        } else {\n          resolve([{ hypertyID: user, status: 'live' }]);\n        }\n      });\n    }\n\n    /** Advanced Search for Hyperties registered in domain registry,\r\n    *returns DiscoveredObject\r\n    * @param  {String}           user                  user identifier, either in url or email format\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverHypertiesDO',\n    value: function discoverHypertiesDO(user, schema, resources, domain) {\n      var _this6 = this,\n          _arguments5 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this6.discoverHyperties.apply(_this6, _arguments5).then(function (hyperties) {\n          resolve(_this6._convertToDiscoveredObject(hyperties));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /** Advanced Search for DataObjects registered in domain registry\r\n    * @param  {String}           user                  user identifier, either in url or email format\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverDataObjects',\n    value: function discoverDataObjects(user, schema, resources, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/user/' + user\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            log.warn(\"[Discovery.discoverDataObjects] Error Reply for \" + user + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}           user                  user identifier, either in url or email format\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsDO',\n    value: function discoverDataObjectsDO(user, schema, resources, domain) {\n      var _this7 = this,\n          _arguments6 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this7.discoverDataObjects.apply(_this7, _arguments6).then(function (registryObjects) {\n          return resolve(_this7._convertToDiscoveredObject(registryObjects));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * function to request about hyperties registered in domain registry, and\r\n    * return the hyperty information, if found.\r\n    * @param  {String}              url  hyperty URL\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverHypertyPerURL',\n    value: function discoverHypertyPerURL(url, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/hyperty/url/' + url,\n          criteria: {\n            domain: activeDomain\n          }\n        }\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            log.warn(\"[Discovery.discoverHypertyPerURL] Error Reply for \" + url + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about hyperties registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}              url  hyperty URL\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverHypertyPerURLDO',\n    value: function discoverHypertyPerURLDO(url, domain) {\n      var _this8 = this,\n          _arguments7 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this8.discoverHypertyPerURL.apply(_this8, _arguments7).then(function (hyperty) {\n          return resolve(new _DiscoveredObject2.default(hyperty, _this8.runtimeURL, _this8.discoveryURL, _this8.messageBus, _this8));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * return the dataObject information, if found.\r\n    * @param  {String}              url  dataObject URL\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverDataObjectPerURL',\n    value: function discoverDataObjectPerURL(url, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/url/' + url,\n          criteria: {\n            domain: activeDomain\n          }\n        }\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            log.warn(\"[Discovery.discoverDataObjectPerURL] Error Reply for \" + url + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}              url  dataObject URL\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverDataObjectPerURLDO',\n    value: function discoverDataObjectPerURLDO(url, domain) {\n      var _this9 = this,\n          _arguments8 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this9.discoverDataObjectPerURL.apply(_this9, _arguments8).then(function (registryObject) {\n          return resolve(new _DiscoveredObject2.default(registryObject, _this9.runtimeURL, _this9.discoveryURL, _this9.messageBus, _this9));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * function to request about an dataObjects registered in domain registry with a given name, and\r\n    * return the dataObjects information, if found.\r\n    * @param  {String}              name  dataObject URL\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerName',\n    value: function discoverDataObjectsPerName(name, schema, resources, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/name/' + name\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            log.warn(\"[Discovery.discoverDataObjectsPerName] Error Reply for \" + name + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}              name  dataObject URL\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerNameDO',\n    value: function discoverDataObjectsPerNameDO(name, schema, resources, domain) {\n      var _this10 = this,\n          _arguments9 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this10.discoverDataObjectsPerName.apply(_this10, _arguments9).then(function (registryObjects) {\n          return resolve(_this10._convertToDiscoveredObject(registryObjects));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n\n    /**\r\n    * function to request about specific reporter dataObject registered in domain registry, and\r\n    * return the dataObjects from that reporter.\r\n    * @param  {String}           reporter     dataObject reporter\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\r\n    * @param  {String}           domain       (Optional)\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerReporter',\n    value: function discoverDataObjectsPerReporter(reporter, schema, resources, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read',\n        from: _this.discoveryURL,\n        to: _this.runtimeURL + '/discovery/',\n        body: {\n          resource: '/dataObject/reporter/' + reporter\n        }\n      };\n\n      if (schema || resources) {\n        msg.body['criteria'] = {\n          resources: resources,\n          dataSchemes: schema,\n          domain: activeDomain\n        };\n      } else {\n        msg.body['criteria'] = {\n          domain: activeDomain\n        };\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            log.log(\"Reply Value Log: \", reply.body.value);\n            resolve(reply.body.value);\n          } else {\n            log.warn(\"[Discovery.discoverDataObjectsPerName] Error Reply for \" + reporter + \" Reason: \", reply.body.description);\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about dataObject registered in domain registry, and\r\n    * returns discoveredObject.\r\n    * @param  {String}              name  dataObject URL\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObjects schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObjects resources\r\n    * @param  {String}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverDataObjectsPerReporterDO',\n    value: function discoverDataObjectsPerReporterDO(reporter, schema, resources, domain) {\n      var _this11 = this,\n          _arguments10 = arguments;\n\n      return new _promise2.default(function (resolve, reject) {\n        _this11.discoverDataObjectsPerReporter.apply(_this11, _arguments10).then(function (registryObjects) {\n          return resolve(_this11._convertToDiscoveredObject(registryObjects));\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n  }, {\n    key: '_convertToDiscoveredObject',\n    value: function _convertToDiscoveredObject(registryObjects) {\n      var _this12 = this;\n\n      return registryObjects.map(function (registryObject) {\n        return new _DiscoveredObject2.default(registryObject, _this12.runtimeURL, _this12.discoveryURL, _this12.messageBus, _this12);\n      });\n    }\n\n    /** Advanced Search for dataObjects registered in domain registry\r\n    * @deprecated Deprecated. Use discoverDataObjectsPerName instead\r\n    * @param  {String}           name                  name of the dataObject\r\n    * @param  {Array<string>}    schema (Optional)     types of dataObject schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of dataObject resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverDataObject',\n    value: function discoverDataObject(name, schema, resources, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n      //let userIdentifier = convertToUserURL(user);\n\n      activeDomain = !domain ? _this.domain : domain;\n\n      var msg = {\n        type: 'read', from: _this.discoveryURL, to: 'domain://registry.' + activeDomain, body: { resource: name,\n          criteria: { resources: resources, dataSchemes: schema }\n        }\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.messageBus.postMessage(msg, function (reply) {\n          log.log('[Discovery]', reply);\n\n          if (reply.body.code > 299) {\n            log.warn(\"[Discovery.discoverDataObject] Error Reply for \" + name + \" Reason: \", reply.body.description);\n            return resolve([]);\n          }\n\n          var hyperties = reply.body.value;\n\n          if (hyperties) {\n            resolve(hyperties);\n          } else {\n            resolve([]);\n          }\n        });\n      });\n    }\n\n    /** Advanced Search for Hyperties registered in domain registry\r\n    * @deprecated Deprecated. Use discoverHyperties instead\r\n    * @param  {String}           user                  user identifier, either in url or email format\r\n    * @param  {Array<string>}    schema (Optional)     types of hyperties schemas\r\n    * @param  {Array<string>}    resources (Optional)  types of hyperties resources\r\n    * @param  {String}           domain (Optional)     domain of the registry to search\r\n    */\n\n  }, {\n    key: 'discoverHyperty',\n    value: function discoverHyperty(user, schema, resources, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n      var userIdentifier = (0, _utils.convertToUserURL)(user);\n\n      if (!domain) {\n        activeDomain = _this.domain;\n      } else {\n        activeDomain = domain;\n      }\n\n      return new _promise2.default(function (resolve, reject) {\n\n        log.log('[Discovery.discoverHyperty] ACTIVE DOMAIN -> ', activeDomain, 'user->', user, 'schema->', schema, 'resources->', resources, 'domain->', domain);\n        if (user.includes(':') && !user.includes('user://')) {\n          log.log('[Discovery.discoverHyperty] ' + user + ' is legacy domain');\n          var legacyUser = { userID: user, hypertyID: user, schema: schema, resources: resources };\n          return resolve(legacyUser);\n        }\n        var msg = {\n          type: 'read', from: _this.discoveryURL, to: 'domain://registry.' + activeDomain, body: { resource: userIdentifier,\n            criteria: { resources: resources, dataSchemes: schema }\n          }\n        };\n\n        log.info('[Discovery] msg to send->', msg);\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          log.info('[Discovery] ON discoverHyperty->', reply);\n          var hyperties = reply.body.value;\n\n          if (hyperties) {\n            resolve(hyperties);\n          } else {\n            reject('No Hyperty was found');\n          }\n        });\n      });\n    }\n\n    /**\r\n    * function to request about users registered in domain registry, and\r\n    * return the last hyperty instance registered by the user.\r\n    * @deprecated Deprecated. Use discoverHyperty instead\r\n    * @param  {email}              email\r\n    * @param  {domain}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverHypertyPerUser',\n    value: function discoverHypertyPerUser(email, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        // Hack for legacy users\n        if (email.includes(':') && !email.includes('user://')) {\n          log.log('[Discovery.discoverHyperty] ' + email + 'is legacy domain');\n          var legacyUser = { id: email, hypertyURL: email, descriptor: 'unknown' };\n          return resolve(legacyUser);\n        }\n\n        if (!domain) {\n          activeDomain = _this.domain;\n        } else {\n          activeDomain = domain;\n        }\n\n        var identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@'));\n\n        // message to query domain registry, asking for a user hyperty.\n        var message = {\n          type: 'read', from: _this.discoveryURL, to: 'domain://registry.' + activeDomain, body: { resource: identityURL }\n        };\n\n        log.info('[Discovery] Message: ', message, activeDomain, identityURL);\n\n        //log.info('[Discovery] message READ', message);\n\n        _this.messageBus.postMessage(message, function (reply) {\n          log.info('[Discovery] message reply', reply);\n\n          var hyperty = void 0;\n          var mostRecent = void 0;\n          var lastHyperty = void 0;\n          var value = reply.body.value;\n\n          for (hyperty in value) {\n            if (value[hyperty].lastModified !== undefined) {\n              if (mostRecent === undefined) {\n                mostRecent = new Date(value[hyperty].lastModified);\n                lastHyperty = hyperty;\n              } else {\n                var hypertyDate = new Date(value[hyperty].lastModified);\n                if (mostRecent.getTime() < hypertyDate.getTime()) {\n                  mostRecent = hypertyDate;\n                  lastHyperty = hyperty;\n                }\n              }\n            }\n          }\n\n          log.info('[Discovery] Last Hyperty: ', lastHyperty, mostRecent);\n\n          var hypertyURL = lastHyperty;\n\n          if (hypertyURL === undefined) {\n            return reject('User Hyperty not found');\n          }\n\n          var idPackage = {\n            id: email,\n            descriptor: value[hypertyURL].descriptor,\n            hypertyURL: hypertyURL\n          };\n\n          log.info('[Discovery] ===> hypertyDiscovery messageBundle: ', idPackage);\n          resolve(idPackage);\n        });\n      });\n    }\n\n    /**\r\n    * function to request about users registered in domain registry, and\r\n    * return the all the hyperties registered by the user\r\n    * @deprecated Deprecated. Use discoverHyperty instead\r\n    * @param  {email}              email\r\n    * @param  {domain}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'discoverHypertiesPerUser',\n    value: function discoverHypertiesPerUser(email, domain) {\n      var _this = this;\n      var activeDomain = void 0;\n      log.log('on Function->', email);\n      return new _promise2.default(function (resolve, reject) {\n\n        if (email.includes(':') && !email.includes('user://')) {\n          log.log('[Discovery.discoverHyperty] is legacy domain');\n          var legacyUser = { userID: email, hypertyID: email, schema: schema, resources: resources };\n          return resolve(legacyUser);\n        }\n\n        if (!domain) {\n          activeDomain = _this.domain;\n        } else {\n          activeDomain = domain;\n        }\n\n        var identityURL = 'user://' + email.substring(email.indexOf('@') + 1, email.length) + '/' + email.substring(0, email.indexOf('@'));\n\n        // message to query domain registry, asking for a user hyperty.\n        var message = {\n          type: 'read', from: _this.discoveryURL, to: 'domain://registry.' + activeDomain, body: { resource: identityURL }\n        };\n\n        log.log('[Discovery] Message discoverHypertiesPerUser: ', message, activeDomain, identityURL);\n\n        //log.info('[Discovery] message READ', message);\n\n        _this.messageBus.postMessage(message, function (reply) {\n          log.info('[Discovery] discoverHypertiesPerUser reply', reply);\n\n          var value = reply.body.value;\n\n          if (!value) {\n            return reject('User Hyperty not found');\n          }\n\n          resolve(value);\n        });\n      });\n    }\n\n    /**\r\n    * function to request about users registered in domain registry, and\r\n    * return the all the hyperties registered by the user\r\n    * @deprecated Deprecated. Use discoverHyperty instead\r\n    * @param  {email}              email\r\n    * @param  {domain}            domain (Optional)\r\n    */\n\n  }, {\n    key: 'resumeDiscoveries',\n    value: function resumeDiscoveries() {\n\n      var _this = this;\n\n      log.log('[Discovery] resumeDiscoveries');\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var msg = {\n          type: 'read', from: _this.discoveryURL, to: _this.runtimeURL + '/subscriptions', body: { resource: _this.discoveryURL }\n        };\n\n        _this.messageBus.postMessage(msg, function (reply) {\n          log.log('[Discovery.resumeDiscoveries] reply: ', reply);\n\n          var notifications = [];\n\n          if (reply.body.code === 200) {\n            var urls = reply.body.value; // URLs to add listeners to\n\n            //lets create one DiscoveryObject per notification\n            urls.forEach(function (url) {\n              var objectUrl = url.split('/registration')[0];\n              var data = {};\n              data.url = objectUrl;\n              log.log('[Discovery.resumeDiscoveries] adding listener to: ', objectUrl);\n\n              if (objectUrl.includes('hyperty://')) {\n                notifications.push(_this.discoverHypertyPerURLDO(objectUrl));\n              } else {\n                notifications.push(_this.discoverDataObjectPerURLDO(objectUrl));\n              }\n            });\n            _promise2.default.all(notifications).then(function (values) {\n              resolve(values);\n            });\n          } else {\n            resolve([]);\n          }\n        });\n      });\n    }\n  }]);\n  return Discovery;\n}();\n\nexports.default = Discovery;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///138\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(25);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(33);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(34);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _utils = __webpack_require__(19);\n\nvar _RegistrationStatus2 = __webpack_require__(134);\n\nvar _RegistrationStatus3 = _interopRequireDefault(_RegistrationStatus2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n* Discovered Object interface\r\n*/\n/**\r\n* Copyright 2016 PT Inovação e Sistemas SA\r\n* Copyright 2016 INESC-ID\r\n* Copyright 2016 QUOBIS NETWORKS SL\r\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n* Copyright 2016 ORANGE SA\r\n* Copyright 2016 Deutsche Telekom AG\r\n* Copyright 2016 Apizee\r\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n**/\n\nvar DiscoveredObject = function (_RegistrationStatus) {\n  (0, _inherits3.default)(DiscoveredObject, _RegistrationStatus);\n  (0, _createClass3.default)(DiscoveredObject, [{\n    key: 'data',\n    get: function get() {\n      return this._data;\n    }\n  }]);\n\n  function DiscoveredObject(data, runtimeURL, discoveryURL, msgBus, discovery) {\n    (0, _classCallCheck3.default)(this, DiscoveredObject);\n\n    var _this2 = (0, _possibleConstructorReturn3.default)(this, (DiscoveredObject.__proto__ || (0, _getPrototypeOf2.default)(DiscoveredObject)).call(this, data.hypertyID || data.url, runtimeURL, discoveryURL, msgBus));\n\n    _this2._data = data;\n    _this2._discovery = discovery;\n    return _this2;\n  }\n\n  /**\r\n  * function to check the status of the DiscoveredObject.\r\n  * Depending on existing subscribers it may trigger onLive or onDisconnected events.\r\n  *\r\n  */\n\n  (0, _createClass3.default)(DiscoveredObject, [{\n    key: 'check',\n    value: function check() {\n      // query DR for the status and call processNotification with msg received\n\n      var _this = this;\n      var message = {\n        body: {}\n      };\n\n      if (_this._discoveredObjectURL.startsWith('hyperty://')) {\n        _this._discovery.discoverHypertyPerURL(_this._discoveredObjectURL).then(function (registration) {\n          message.body.status = registration.status;\n          _this._processNotification(message);\n        });\n      } else {\n        _this._discovery.discoverDataObjectsPerURL(_this._discoveredObjectURL).then(function (registration) {\n          message.body.status = registration.status;\n          _this._processNotification(message);\n        });\n      }\n    }\n  }]);\n  return DiscoveredObject;\n}(_RegistrationStatus3.default);\n\nexports.default = DiscoveredObject;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGlzY292ZXJ5L0Rpc2NvdmVyZWRPYmplY3QuanM/MmQ5OSJdLCJuYW1lcyI6WyJEaXNjb3ZlcmVkT2JqZWN0IiwiX2RhdGEiLCJkYXRhIiwicnVudGltZVVSTCIsImRpc2NvdmVyeVVSTCIsIm1zZ0J1cyIsImRpc2NvdmVyeSIsImh5cGVydHlJRCIsInVybCIsIl9kaXNjb3ZlcnkiLCJfdGhpcyIsIm1lc3NhZ2UiLCJib2R5IiwiX2Rpc2NvdmVyZWRPYmplY3RVUkwiLCJzdGFydHNXaXRoIiwiZGlzY292ZXJIeXBlcnR5UGVyVVJMIiwidGhlbiIsInJlZ2lzdHJhdGlvbiIsInN0YXR1cyIsIl9wcm9jZXNzTm90aWZpY2F0aW9uIiwiZGlzY292ZXJEYXRhT2JqZWN0c1BlclVSTCIsIlJlZ2lzdHJhdGlvblN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkE7O0FBQ0E7Ozs7OztBQUVBOzs7QUExQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBNkJNQSxnQjs7Ozt3QkFFTztBQUNULGFBQU8sS0FBS0MsS0FBWjtBQUNEOzs7QUFFRCw0QkFBWUMsSUFBWixFQUFrQkMsVUFBbEIsRUFBOEJDLFlBQTlCLEVBQTRDQyxNQUE1QyxFQUFvREMsU0FBcEQsRUFBK0Q7QUFBQTs7QUFBQSwySkFDdkRKLEtBQUtLLFNBQUwsSUFBa0JMLEtBQUtNLEdBRGdDLEVBQzNCTCxVQUQyQixFQUNmQyxZQURlLEVBQ0RDLE1BREM7O0FBRzdELFdBQUtKLEtBQUwsR0FBYUMsSUFBYjtBQUNBLFdBQUtPLFVBQUwsR0FBa0JILFNBQWxCO0FBSjZEO0FBSzlEOztBQUtEOzs7Ozs7Ozs0QkFNUTtBQUNOOztBQUVBLFVBQUlJLFFBQVEsSUFBWjtBQUNBLFVBQUlDLFVBQVU7QUFDWkMsY0FBTTtBQURNLE9BQWQ7O0FBSUEsVUFBSUYsTUFBTUcsb0JBQU4sQ0FBMkJDLFVBQTNCLENBQXNDLFlBQXRDLENBQUosRUFBMEQ7QUFDeERKLGNBQU1ELFVBQU4sQ0FBaUJNLHFCQUFqQixDQUF1Q0wsTUFBTUcsb0JBQTdDLEVBQW1FRyxJQUFuRSxDQUF3RSxVQUFDQyxZQUFELEVBQWdCO0FBQ3RGTixrQkFBUUMsSUFBUixDQUFhTSxNQUFiLEdBQXNCRCxhQUFhQyxNQUFuQztBQUNBUixnQkFBTVMsb0JBQU4sQ0FBMkJSLE9BQTNCO0FBQ0QsU0FIRDtBQUlELE9BTEQsTUFLTztBQUNMRCxjQUFNRCxVQUFOLENBQWlCVyx5QkFBakIsQ0FBMkNWLE1BQU1HLG9CQUFqRCxFQUF1RUcsSUFBdkUsQ0FBNEUsVUFBQ0MsWUFBRCxFQUFnQjtBQUMxRk4sa0JBQVFDLElBQVIsQ0FBYU0sTUFBYixHQUFzQkQsYUFBYUMsTUFBbkM7QUFDQVIsZ0JBQU1TLG9CQUFOLENBQTJCUixPQUEzQjtBQUNELFNBSEQ7QUFJRDtBQUNGOzs7RUF6QzRCVSw0Qjs7a0JBK0NoQnJCLGdCIiwiZmlsZSI6IjEzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4qIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQVxyXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXHJcbiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMXHJcbiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlZcclxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHXHJcbiogQ29weXJpZ2h0IDIwMTYgQXBpemVlXHJcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cclxuKlxyXG4qIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4qIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4qXHJcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuKlxyXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4qKi9cclxuXHJcbmltcG9ydCB7ZGl2aWRlVVJMLCBjb252ZXJ0VG9Vc2VyVVJMfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcbmltcG9ydCBSZWdpc3RyYXRpb25TdGF0dXMgZnJvbSAnLi9SZWdpc3RyYXRpb25TdGF0dXMnO1xyXG5cclxuLyoqXHJcbiogRGlzY292ZXJlZCBPYmplY3QgaW50ZXJmYWNlXHJcbiovXHJcbmNsYXNzIERpc2NvdmVyZWRPYmplY3QgZXh0ZW5kcyBSZWdpc3RyYXRpb25TdGF0dXMge1xyXG5cclxuICBnZXQgZGF0YSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9kYXRhO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoZGF0YSwgcnVudGltZVVSTCwgZGlzY292ZXJ5VVJMLCBtc2dCdXMsIGRpc2NvdmVyeSkge1xyXG4gICAgc3VwZXIoZGF0YS5oeXBlcnR5SUQgfHwgZGF0YS51cmwsIHJ1bnRpbWVVUkwsIGRpc2NvdmVyeVVSTCwgbXNnQnVzKTtcclxuXHJcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgIHRoaXMuX2Rpc2NvdmVyeSA9IGRpc2NvdmVyeTtcclxuICB9XHJcblxyXG5cclxuXHJcblxyXG4gIC8qKlxyXG4gICogZnVuY3Rpb24gdG8gY2hlY2sgdGhlIHN0YXR1cyBvZiB0aGUgRGlzY292ZXJlZE9iamVjdC5cclxuICAqIERlcGVuZGluZyBvbiBleGlzdGluZyBzdWJzY3JpYmVycyBpdCBtYXkgdHJpZ2dlciBvbkxpdmUgb3Igb25EaXNjb25uZWN0ZWQgZXZlbnRzLlxyXG4gICpcclxuICAqL1xyXG5cclxuICBjaGVjaygpIHtcclxuICAgIC8vIHF1ZXJ5IERSIGZvciB0aGUgc3RhdHVzIGFuZCBjYWxsIHByb2Nlc3NOb3RpZmljYXRpb24gd2l0aCBtc2cgcmVjZWl2ZWRcclxuXHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgbGV0IG1lc3NhZ2UgPSB7XHJcbiAgICAgIGJvZHk6IHt9XHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChfdGhpcy5fZGlzY292ZXJlZE9iamVjdFVSTC5zdGFydHNXaXRoKCdoeXBlcnR5Oi8vJykgKSB7XHJcbiAgICAgIF90aGlzLl9kaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnR5UGVyVVJMKF90aGlzLl9kaXNjb3ZlcmVkT2JqZWN0VVJMKS50aGVuKChyZWdpc3RyYXRpb24pPT57XHJcbiAgICAgICAgbWVzc2FnZS5ib2R5LnN0YXR1cyA9IHJlZ2lzdHJhdGlvbi5zdGF0dXM7XHJcbiAgICAgICAgX3RoaXMuX3Byb2Nlc3NOb3RpZmljYXRpb24obWVzc2FnZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgX3RoaXMuX2Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyVVJMKF90aGlzLl9kaXNjb3ZlcmVkT2JqZWN0VVJMKS50aGVuKChyZWdpc3RyYXRpb24pPT57XHJcbiAgICAgICAgbWVzc2FnZS5ib2R5LnN0YXR1cyA9IHJlZ2lzdHJhdGlvbi5zdGF0dXM7XHJcbiAgICAgICAgX3RoaXMuX3Byb2Nlc3NOb3RpZmljYXRpb24obWVzc2FnZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGlzY292ZXJlZE9iamVjdDtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2Rpc2NvdmVyeS9EaXNjb3ZlcmVkT2JqZWN0LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///139\n")},,,,,,,,,function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _utils = __webpack_require__(19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n* Core IdentityManager interface\r\n* Class to allow applications to search for Identities registered in runtime-core\r\n*/\nvar IdentityManager = function () {\n\n  /**\r\n  * To initialise the IdentityManager, which will provide the support for hyperties to\r\n  * query about identities registered\r\n  * @param  {String}          owner            owner\r\n  * @param  {String}          runtimeURL            runtimeURL\r\n  * @param  {MessageBus}          msgbus                msgbus\r\n  */\n  function IdentityManager(owner, runtimeURL, msgBus) {\n    (0, _classCallCheck3.default)(this, IdentityManager);\n\n    var _this = this;\n    _this.messageBus = msgBus;\n\n    _this.domain = (0, _utils.divideURL)(owner).domain;\n    _this.owner = owner;\n    _this.runtimeURL = runtimeURL;\n  }\n\n  /**\r\n  * Function to query the runtime registry about the identity to which the hyperty was associated\r\n  * @param {String}       type (Optional)         type of user info required\r\n  * @param {String}       owner (Optional)   owner to search for\r\n  * @return {Promise}     userURL       userURL associated to the hyperty\r\n  */\n\n\n  (0, _createClass3.default)(IdentityManager, [{\n    key: 'discoverUserRegistered',\n    value: function discoverUserRegistered(type, hyperty) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var activeHypertyURL = void 0;\n\n        // if any type of search is selected query for that type, otherwise query for default user info\n        var searchType = type ? type : '.';\n\n        if (!hyperty) {\n          activeHypertyURL = _this.owner;\n        } else {\n          activeHypertyURL = hyperty;\n        }\n\n        var msg = {\n          type: 'read', from: activeHypertyURL, to: _this.runtimeURL + '/registry/', body: { resource: searchType, criteria: activeHypertyURL }\n        };\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          var userURL = reply.body.resource;\n\n          if (userURL && reply.body.code === 200) {\n            resolve(userURL);\n          } else {\n            reject('code: ' + reply.body.code + ' No user was found');\n          }\n        });\n      });\n    }\n\n    /**\r\n    * Function to query the Identity Module about authenticated identities from a certain domain\r\n    * @param {String}       idp idp domain of the identity to be discovered\r\n    * @return {Promise}     identity\r\n    */\n\n  }, {\n    key: 'discoverIdentityPerIdP',\n    value: function discoverIdentityPerIdP(idp) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var msg = {\n          type: 'read', from: this.owner, to: _this.runtimeURL + '/idm', body: { resource: idp, criteria: 'idp' }\n        };\n\n        _this.messageBus.postMessage(msg, function (reply) {\n\n          if (reply.body.code === 200) {\n            resolve(reply.body.value);\n          } else {\n            reject(reply.body.code + ' ' + reply.body.desc);\n          }\n        });\n      });\n    }\n  }]);\n  return IdentityManager;\n}(); /**\r\n     * Copyright 2016 PT Inovação e Sistemas SA\r\n     * Copyright 2016 INESC-ID\r\n     * Copyright 2016 QUOBIS NETWORKS SL\r\n     * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n     * Copyright 2016 ORANGE SA\r\n     * Copyright 2016 Deutsche Telekom AG\r\n     * Copyright 2016 Apizee\r\n     * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n     *\r\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     * you may not use this file except in compliance with the License.\r\n     * You may obtain a copy of the License at\r\n     *\r\n     *   http://www.apache.org/licenses/LICENSE-2.0\r\n     *\r\n     * Unless required by applicable law or agreed to in writing, software\r\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n     * See the License for the specific language governing permissions and\r\n     * limitations under the License.\r\n     **/\n\n\nexports.default = IdentityManager;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaWRlbnRpdHlNYW5hZ2VyL0lkZW50aXR5TWFuYWdlci5qcz8xYzk0Il0sIm5hbWVzIjpbIklkZW50aXR5TWFuYWdlciIsIm93bmVyIiwicnVudGltZVVSTCIsIm1zZ0J1cyIsIl90aGlzIiwibWVzc2FnZUJ1cyIsImRvbWFpbiIsInR5cGUiLCJoeXBlcnR5IiwicmVzb2x2ZSIsInJlamVjdCIsImFjdGl2ZUh5cGVydHlVUkwiLCJzZWFyY2hUeXBlIiwibXNnIiwiZnJvbSIsInRvIiwiYm9keSIsInJlc291cmNlIiwiY3JpdGVyaWEiLCJwb3N0TWVzc2FnZSIsInJlcGx5IiwidXNlclVSTCIsImNvZGUiLCJpZHAiLCJ2YWx1ZSIsImRlc2MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTs7OztBQUVBOzs7O0lBSU1BLGU7O0FBRUo7Ozs7Ozs7QUFPQSwyQkFBWUMsS0FBWixFQUFtQkMsVUFBbkIsRUFBK0JDLE1BQS9CLEVBQXVDO0FBQUE7O0FBQ3JDLFFBQUlDLFFBQVEsSUFBWjtBQUNBQSxVQUFNQyxVQUFOLEdBQW1CRixNQUFuQjs7QUFFQUMsVUFBTUUsTUFBTixHQUFlLHNCQUFVTCxLQUFWLEVBQWlCSyxNQUFoQztBQUNBRixVQUFNSCxLQUFOLEdBQWNBLEtBQWQ7QUFDQUcsVUFBTUYsVUFBTixHQUFtQkEsVUFBbkI7QUFDRDs7QUFFRDs7Ozs7Ozs7OzsyQ0FNdUJLLEksRUFBTUMsTyxFQUFTO0FBQ3BDLFVBQUlKLFFBQVEsSUFBWjs7QUFFQSxhQUFPLHNCQUFZLFVBQVNLLE9BQVQsRUFBa0JDLE1BQWxCLEVBQTBCOztBQUUzQyxZQUFJQyx5QkFBSjs7QUFFQTtBQUNBLFlBQUlDLGFBQWNMLElBQUQsR0FBU0EsSUFBVCxHQUFnQixHQUFqQzs7QUFFQSxZQUFJLENBQUNDLE9BQUwsRUFBYztBQUNaRyw2QkFBbUJQLE1BQU1ILEtBQXpCO0FBQ0QsU0FGRCxNQUVPO0FBQ0xVLDZCQUFtQkgsT0FBbkI7QUFDRDs7QUFFRCxZQUFJSyxNQUFNO0FBQ1JOLGdCQUFNLE1BREUsRUFDTU8sTUFBTUgsZ0JBRFosRUFDOEJJLElBQUlYLE1BQU1GLFVBQU4sR0FBbUIsWUFEckQsRUFDbUVjLE1BQU0sRUFBRUMsVUFBVUwsVUFBWixFQUF3Qk0sVUFBVVAsZ0JBQWxDO0FBRHpFLFNBQVY7O0FBSUFQLGNBQU1DLFVBQU4sQ0FBaUJjLFdBQWpCLENBQTZCTixHQUE3QixFQUFrQyxVQUFDTyxLQUFELEVBQVc7O0FBRTNDLGNBQUlDLFVBQVVELE1BQU1KLElBQU4sQ0FBV0MsUUFBekI7O0FBRUEsY0FBSUksV0FBV0QsTUFBTUosSUFBTixDQUFXTSxJQUFYLEtBQW9CLEdBQW5DLEVBQXdDO0FBQ3RDYixvQkFBUVksT0FBUjtBQUNELFdBRkQsTUFFTztBQUNMWCxtQkFBTyxXQUFXVSxNQUFNSixJQUFOLENBQVdNLElBQXRCLEdBQTZCLG9CQUFwQztBQUNEO0FBQ0YsU0FURDtBQVVELE9BM0JNLENBQVA7QUE0QkQ7O0FBRUQ7Ozs7Ozs7OzJDQU11QkMsRyxFQUFLO0FBQzFCLFVBQUluQixRQUFRLElBQVo7O0FBRUEsYUFBTyxzQkFBWSxVQUFTSyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQjs7QUFFM0MsWUFBSUcsTUFBTTtBQUNSTixnQkFBTSxNQURFLEVBQ01PLE1BQU0sS0FBS2IsS0FEakIsRUFDd0JjLElBQUlYLE1BQU1GLFVBQU4sR0FBbUIsTUFEL0MsRUFDdURjLE1BQU0sRUFBRUMsVUFBVU0sR0FBWixFQUFpQkwsVUFBVSxLQUEzQjtBQUQ3RCxTQUFWOztBQUlBZCxjQUFNQyxVQUFOLENBQWlCYyxXQUFqQixDQUE2Qk4sR0FBN0IsRUFBa0MsVUFBQ08sS0FBRCxFQUFXOztBQUUzQyxjQUFJQSxNQUFNSixJQUFOLENBQVdNLElBQVgsS0FBb0IsR0FBeEIsRUFBNkI7QUFDM0JiLG9CQUFRVyxNQUFNSixJQUFOLENBQVdRLEtBQW5CO0FBQ0QsV0FGRCxNQUVPO0FBQ0xkLG1CQUFPVSxNQUFNSixJQUFOLENBQVdNLElBQVgsR0FBa0IsR0FBbEIsR0FBd0JGLE1BQU1KLElBQU4sQ0FBV1MsSUFBMUM7QUFDRDtBQUNGLFNBUEQ7QUFRRCxPQWRNLENBQVA7QUFlRDs7O0tBN0dIOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBZ0hlekIsZSIsImZpbGUiOiIxNDguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRFxyXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXHJcbiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxyXG4qIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOXHJcbipcclxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4qIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuKlxyXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbipcclxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKiovXHJcbmltcG9ydCB7ZGl2aWRlVVJMfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG4vKipcclxuKiBDb3JlIElkZW50aXR5TWFuYWdlciBpbnRlcmZhY2VcclxuKiBDbGFzcyB0byBhbGxvdyBhcHBsaWNhdGlvbnMgdG8gc2VhcmNoIGZvciBJZGVudGl0aWVzIHJlZ2lzdGVyZWQgaW4gcnVudGltZS1jb3JlXHJcbiovXHJcbmNsYXNzIElkZW50aXR5TWFuYWdlciB7XHJcblxyXG4gIC8qKlxyXG4gICogVG8gaW5pdGlhbGlzZSB0aGUgSWRlbnRpdHlNYW5hZ2VyLCB3aGljaCB3aWxsIHByb3ZpZGUgdGhlIHN1cHBvcnQgZm9yIGh5cGVydGllcyB0b1xyXG4gICogcXVlcnkgYWJvdXQgaWRlbnRpdGllcyByZWdpc3RlcmVkXHJcbiAgKiBAcGFyYW0gIHtTdHJpbmd9ICAgICAgICAgIG93bmVyICAgICAgICAgICAgb3duZXJcclxuICAqIEBwYXJhbSAge1N0cmluZ30gICAgICAgICAgcnVudGltZVVSTCAgICAgICAgICAgIHJ1bnRpbWVVUkxcclxuICAqIEBwYXJhbSAge01lc3NhZ2VCdXN9ICAgICAgICAgIG1zZ2J1cyAgICAgICAgICAgICAgICBtc2didXNcclxuICAqL1xyXG4gIGNvbnN0cnVjdG9yKG93bmVyLCBydW50aW1lVVJMLCBtc2dCdXMpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcbiAgICBfdGhpcy5tZXNzYWdlQnVzID0gbXNnQnVzO1xyXG5cclxuICAgIF90aGlzLmRvbWFpbiA9IGRpdmlkZVVSTChvd25lcikuZG9tYWluO1xyXG4gICAgX3RoaXMub3duZXIgPSBvd25lcjtcclxuICAgIF90aGlzLnJ1bnRpbWVVUkwgPSBydW50aW1lVVJMO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiBGdW5jdGlvbiB0byBxdWVyeSB0aGUgcnVudGltZSByZWdpc3RyeSBhYm91dCB0aGUgaWRlbnRpdHkgdG8gd2hpY2ggdGhlIGh5cGVydHkgd2FzIGFzc29jaWF0ZWRcclxuICAqIEBwYXJhbSB7U3RyaW5nfSAgICAgICB0eXBlIChPcHRpb25hbCkgICAgICAgICB0eXBlIG9mIHVzZXIgaW5mbyByZXF1aXJlZFxyXG4gICogQHBhcmFtIHtTdHJpbmd9ICAgICAgIG93bmVyIChPcHRpb25hbCkgICBvd25lciB0byBzZWFyY2ggZm9yXHJcbiAgKiBAcmV0dXJuIHtQcm9taXNlfSAgICAgdXNlclVSTCAgICAgICB1c2VyVVJMIGFzc29jaWF0ZWQgdG8gdGhlIGh5cGVydHlcclxuICAqL1xyXG4gIGRpc2NvdmVyVXNlclJlZ2lzdGVyZWQodHlwZSwgaHlwZXJ0eSkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XHJcblxyXG4gICAgICBsZXQgYWN0aXZlSHlwZXJ0eVVSTDtcclxuXHJcbiAgICAgIC8vIGlmIGFueSB0eXBlIG9mIHNlYXJjaCBpcyBzZWxlY3RlZCBxdWVyeSBmb3IgdGhhdCB0eXBlLCBvdGhlcndpc2UgcXVlcnkgZm9yIGRlZmF1bHQgdXNlciBpbmZvXHJcbiAgICAgIGxldCBzZWFyY2hUeXBlID0gKHR5cGUpID8gdHlwZSA6ICcuJztcclxuXHJcbiAgICAgIGlmICghaHlwZXJ0eSkge1xyXG4gICAgICAgIGFjdGl2ZUh5cGVydHlVUkwgPSBfdGhpcy5vd25lcjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhY3RpdmVIeXBlcnR5VVJMID0gaHlwZXJ0eTtcclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IG1zZyA9IHtcclxuICAgICAgICB0eXBlOiAncmVhZCcsIGZyb206IGFjdGl2ZUh5cGVydHlVUkwsIHRvOiBfdGhpcy5ydW50aW1lVVJMICsgJy9yZWdpc3RyeS8nLCBib2R5OiB7IHJlc291cmNlOiBzZWFyY2hUeXBlLCBjcml0ZXJpYTogYWN0aXZlSHlwZXJ0eVVSTH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIF90aGlzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobXNnLCAocmVwbHkpID0+IHtcclxuXHJcbiAgICAgICAgbGV0IHVzZXJVUkwgPSByZXBseS5ib2R5LnJlc291cmNlO1xyXG5cclxuICAgICAgICBpZiAodXNlclVSTCAmJiByZXBseS5ib2R5LmNvZGUgPT09IDIwMCkge1xyXG4gICAgICAgICAgcmVzb2x2ZSh1c2VyVVJMKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVqZWN0KCdjb2RlOiAnICsgcmVwbHkuYm9keS5jb2RlICsgJyBObyB1c2VyIHdhcyBmb3VuZCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICogRnVuY3Rpb24gdG8gcXVlcnkgdGhlIElkZW50aXR5IE1vZHVsZSBhYm91dCBhdXRoZW50aWNhdGVkIGlkZW50aXRpZXMgZnJvbSBhIGNlcnRhaW4gZG9tYWluXHJcbiAgKiBAcGFyYW0ge1N0cmluZ30gICAgICAgaWRwIGlkcCBkb21haW4gb2YgdGhlIGlkZW50aXR5IHRvIGJlIGRpc2NvdmVyZWRcclxuICAqIEByZXR1cm4ge1Byb21pc2V9ICAgICBpZGVudGl0eVxyXG4gICovXHJcblxyXG4gIGRpc2NvdmVySWRlbnRpdHlQZXJJZFAoaWRwKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcclxuXHJcbiAgICAgIGxldCBtc2cgPSB7XHJcbiAgICAgICAgdHlwZTogJ3JlYWQnLCBmcm9tOiB0aGlzLm93bmVyLCB0bzogX3RoaXMucnVudGltZVVSTCArICcvaWRtJywgYm9keTogeyByZXNvdXJjZTogaWRwLCBjcml0ZXJpYTogJ2lkcCd9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBfdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG1zZywgKHJlcGx5KSA9PiB7XHJcblxyXG4gICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDIwMCkge1xyXG4gICAgICAgICAgcmVzb2x2ZShyZXBseS5ib2R5LnZhbHVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVqZWN0KHJlcGx5LmJvZHkuY29kZSArICcgJyArIHJlcGx5LmJvZHkuZGVzYyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSWRlbnRpdHlNYW5hZ2VyO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaWRlbnRpdHlNYW5hZ2VyL0lkZW50aXR5TWFuYWdlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///148\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _stringify = __webpack_require__(58);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _UserInfo = __webpack_require__(150);\n\nvar _RegistrationStatus = __webpack_require__(134);\n\nvar _RegistrationStatus2 = _interopRequireDefault(_RegistrationStatus);\n\nvar _InvitationsHandler = __webpack_require__(172);\n\nvar _InvitationsHandler2 = _interopRequireDefault(_InvitationsHandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChatController = function () {\n  function ChatController(syncher, discovery, domain, search, identity, manager) {\n    (0, _classCallCheck3.default)(this, ChatController);\n\n\n    if (!syncher) throw Error('Syncher is a necessary dependecy');\n    if (!discovery) throw Error('Discover is a necessary dependecy');\n    if (!domain) throw Error('Domain is a necessary dependecy');\n    if (!search) throw Error('Search is a necessary dependecy');\n\n    var _this = this;\n    _this._syncher = syncher;\n    _this.discovery = discovery;\n    _this.search = search;\n    _this.myIdentity = identity;\n    _this.controllerMode = 'reporter';\n    _this.child_cseq = 0;\n    _this.domain = domain;\n\n    _this._manager = manager;\n\n    var hypertyURL = syncher.owner;\n\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + domain + '/.well-known/dataschema/Communication';\n\n    _this._invitationsHandler = new _InvitationsHandler2.default(hypertyURL);\n  }\n\n  (0, _createClass3.default)(ChatController, [{\n    key: '_setOnAddChildListener',\n    value: function _setOnAddChildListener(dataObject) {\n\n      var _this = this;\n\n      dataObject.onAddChild(function (child) {\n        _this.child_cseq += 1;\n        console.info('[ChatManager.ChatController._setOnAddChildListener] new Child received: ', child);\n\n        if (_this._onMessage) _this._onMessage(child);\n      });\n    }\n  }, {\n    key: '_onSubscribe',\n    value: function _onSubscribe(event) {\n\n      var dataObjectReporter = this._dataObjectReporter;\n\n      event.accept();\n\n      console.log('[ChatManager.ChatController.onSubscribe] event', event, dataObjectReporter.url);\n      console.log('[ChatManager.ChatController.onSubscribe] New user has subscribe this object: ', dataObjectReporter.data, event.identity);\n\n      var identity = JSON.parse((0, _stringify2.default)(event.identity));\n\n      if (identity.hasOwnProperty('assertion')) {\n        delete identity.assertion;\n      }\n\n      var userInfo = {\n        hypertyURL: event.url,\n        domain: event.domain,\n        identity: identity\n      };\n      var userURL = event.identity.userProfile.userURL;\n\n      console.log('[ChatManager.ChatController.onSubscribe]  new participant', userInfo);\n      if (event.identity.legacy) {\n        userInfo.legacy = event.identity.legacy;\n      }\n\n      dataObjectReporter.data.participants[userURL] = userInfo;\n\n      console.log('[ChatManager.ChatController.onSubscribe] communicationObject OBJ chatcontroller', dataObjectReporter.data.participants);\n      console.log('[ChatManager.ChatController.onSubscribe - onSubscription] ', userInfo);\n      // console.log('[ChatManager.ChatController.onSubscribe - this._onUserAdded] ', this._onUserAdded);\n\n      if (this._onUserAdded) this._onUserAdded(userInfo);\n    }\n  }, {\n    key: '_onUnsubscribe',\n    value: function _onUnsubscribe(event) {\n      var dataObjectReporter = this._dataObjectReporter;\n\n      console.log('[ChatManager.ChatController.onUnsubscribe] event', event, dataObjectReporter.url);\n\n      var participant = event.identity.userProfile;\n\n      console.log('[ChatManager.ChatController.onUnsubscribe]  participant left', participant);\n      if (event.identity.legacy) {\n        participant.legacy = event.identity.legacy;\n      }\n\n      delete dataObjectReporter.data.participants[participant.userURL];\n\n      console.log('[ChatManager.ChatController.onUnsubscribe - this._onUserRemoved] ', this.onUserRemoved);\n      if (this._onUserRemoved) this._onUserRemoved(participant);\n    }\n\n    /**\r\n     * This function is used to send a file.\r\n     * @param  {string}     file                        Is the file to be sent.\r\n     * @return {Promise<Communication.ChatMessage>}        It returns the ChatMessage child object created by the Syncher as a Promise.\r\n     */\n\n  }, {\n    key: 'sendFile',\n    value: function sendFile(file) {\n\n      var _this = this;\n      var mode = _this.controllerMode;\n      var dataObject = mode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var identity = {\n          userProfile: _this.myIdentity\n        };\n\n        dataObject.addHypertyResource('resources', 'file', file, identity).then(function (resourceFile) {\n\n          var identity = {\n            userProfile: _this.myIdentity\n          };\n          var fileSentEvt = { value: resourceFile, identity: identity, resource: resourceFile };\n\n          var reporterStatus = new _RegistrationStatus2.default(dataObject.url, _this._manager._runtimeURL, _this._manager._hypertyURL, _this._manager._bus);\n\n          // recursive function to sync with chat reporter\n\n          var share2Reporter = function share2Reporter(file, subscriber, evt, status) {\n            var statusOfReporter = status;\n            file.sharingStatus.then(resolve(evt)).catch(function (result) {\n              console.log('[ChatManager.ChatController.sendFile] share failed: ', result);\n\n              statusOfReporter.onLive(subscriber, function () {\n                statusOfReporter.unsubscribeLive(subscriber);\n                file.share(true);\n                share2Reporter(file, subscriber, evt, statusOfReporter);\n              });\n              //TODO: subscribe to sync when reporter is live. New synched messages should trigger onMessage ie onChild\n            });\n          };\n\n          share2Reporter(resourceFile, _this._manager._hypertyURL, fileSentEvt, reporterStatus);\n        });\n      }).catch(function (reason) {\n        console.error('Reason:', reason);\n        reject(reason);\n      });\n    }\n\n    /**\r\n     * This function is used to send a chat message.\r\n     * @param  {string}     message                        Is the ChatMessage to be sent.\r\n     * @return {Promise<Communication.ChatMessage>}        It returns the ChatMessage child object created by the Syncher as a Promise.\r\n     */\n\n  }, {\n    key: 'send',\n    value: function send(message, identity) {\n\n      var _this = this;\n      var mode = _this.controllerMode;\n      var dataObject = mode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        //      let _dataObjectChild;\n        _this.child_cseq += 1;\n        var msg = {\n\n          /*        url: dataObject.data.url,\r\n                  cseq: _this.child_cseq,\r\n                  reporter: dataObject.data.reporter,\r\n                  schema: dataObject.data.schema,\r\n                  name: dataObject.data.name,\r\n                  created : new Date().toJSON(),*/\n\n          type: 'chat',\n          content: message\n        };\n\n        var sender = identity ? identity : {\n          userProfile: _this.myIdentity\n        };\n\n        // TODO: change chatmessages to resource - chat, file\n        // TODO: change message to hypertyResource - https://github.com/reTHINK-project/dev-service-framework/tree/develop/docs/datamodel/data-objects/hyperty-resource\n        // TODO: handle with multiple resources - if the \"message\" will be different for each type of resources\n        dataObject.addChild('resources', msg, sender).then(function (dataObjectChild) {\n          console.log('[ChatManager.ChatController][addChild - Chat Message]: ', dataObjectChild);\n          //resolve(dataObjectChild);\n\n          //TODO: move to separate function\n\n\n          var msg = {\n            childId: dataObjectChild._childId,\n            from: dataObjectChild._owner,\n            value: dataObjectChild.data,\n            type: 'create',\n            identity: sender\n          };\n\n          var reporterStatus = new _RegistrationStatus2.default(dataObject.url, _this._manager._runtimeURL, _this._manager._hypertyURL, _this._manager._bus);\n\n          // recursive function to sync with chat reporter\n\n          var share2Reporter = function share2Reporter(child, subscriber, msg, status) {\n            var statusOfReporter = status;\n            child.sharingStatus.then(resolve(msg)).catch(function (result) {\n\n              statusOfReporter.onLive(subscriber, function () {\n                statusOfReporter.unsubscribeLive(subscriber);\n                child.share(true);\n                share2Reporter(child, subscriber, msg, statusOfReporter);\n              });\n              //TODO: subscribe to sync when reporter is live. New synched messages should trigger onMessage ie onChild\n            });\n          };\n\n          share2Reporter(dataObjectChild, _this._manager._hypertyURL, msg, reporterStatus);\n        }).catch(function (reason) {\n          console.error('Reason:', reason);\n          reject(reason);\n        });\n      });\n    }\n\n    /**\r\n     * [onChange description]\r\n     * @param  {Function} callback [description]\r\n     * @return {[type]}            [description]\r\n     */\n\n  }, {\n    key: 'onChange',\n    value: function onChange(callback) {\n      var _this = this;\n      _this._onChange = callback;\n    }\n\n    /**\r\n     * This function is used to receive new messages.\r\n     * @param  {Function} callback Function to handle with new messages\r\n     * @return {Communication.ChatMessage} m\r\n     */\n\n  }, {\n    key: 'onMessage',\n    value: function onMessage(callback) {\n      var _this = this;\n      _this._onMessage = callback;\n    }\n\n    /**\r\n     * [onUserAdded description]\r\n     * @param  {Function} callback [description]\r\n     * @return {[type]}            [description]\r\n     */\n\n  }, {\n    key: 'onUserAdded',\n    value: function onUserAdded(callback) {\n      var _this = this;\n      _this._onUserAdded = callback;\n    }\n\n    /**\r\n     * When the an user was removed\r\n     * @param  {Function} callback Function handle with the removed user\r\n     * @return {[type]}            [description]\r\n     */\n\n  }, {\n    key: 'onUserRemoved',\n    value: function onUserRemoved(callback) {\n      var _this = this;\n      _this._onUserRemoved = callback;\n    }\n\n    /**\r\n     * This function is used to receive requests to close the Group Chat instance.\r\n     * @return {DeleteEvent} The DeleteEvent fired by the Syncher when the Chat is closed.\r\n     */\n\n  }, {\n    key: 'onClose',\n    value: function onClose(callback) {\n      var _this = this;\n      _this._onClose = callback;\n    }\n  }, {\n    key: 'onResponse',\n    value: function onResponse(callback) {\n      var _this = this;\n      _this._onResponse = callback;\n    }\n\n    /**\r\n     * This function is used to add / invite new user on an existing Group Chat instance.\r\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\r\n     * @param {URL.UserURL}  users  User to be invited to join the Group Chat that is identified with reTHINK User URL.\r\n     * @return {Promise<boolean>}   It returns as a Promise true if successfully invited or false otherwise.\r\n     */\n\n  }, {\n    key: 'addUser',\n    value: function addUser(users) {\n\n      var _this = this;\n\n      var haveEmptyElements = function haveEmptyElements(element) {\n        console.log('Element:', element.length);\n        return element.length !== 0;\n      };\n\n      var notFoundElements = function notFoundElements(element) {\n        console.log('user not found: ', element);\n        return !(element instanceof String);\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (users.filter(haveEmptyElements).length === 0) {\n          return reject('Don\\'t have users to invite');\n        }\n\n        console.info('[ChatManager.ChatController.addUsers ]: ', users);\n\n        /*_this.search.users(users, domains, ['comm'], ['chat'])\r\n        .then((hypertiesIDs) => {\r\n          if (hypertiesIDs.filter(notFoundElements).length === 0) {\r\n          throw 'User(s) not found';\r\n        }\r\n          let selectedHyperties = hypertiesIDs.map((hyperty) => {\r\n          return hyperty.hypertyID;\r\n        });*/\n\n        var usersDiscovery = [];\n        var disconnected = [];\n        var live = {};\n\n        users.forEach(function (user) {\n          var userDiscoveryPromise = _this.discovery.discoverHypertiesDO(user.user, ['comm'], ['chat'], user.domain);\n          usersDiscovery.push(userDiscoveryPromise);\n        });\n\n        _promise2.default.all(usersDiscovery).then(function (userDiscoveryResults) {\n          console.log('[ChatManager.ChatController.addUsers] Users Discovery Results->', userDiscoveryResults);\n\n          var selectedHyperties = [];\n\n          userDiscoveryResults.forEach(function (userDiscoveryResult) {\n\n            userDiscoveryResult.forEach(function (discovered) {\n              if (discovered.data.status === 'live') {\n                selectedHyperties.push(discovered.data.hypertyID);\n                live[discovered.data.hypertyID] = discovered;\n              } else if (disconnected.length < 5) disconnected.push(discovered);\n            });\n          });\n\n          console.info('[ChatManager.ChatController]------------------------ Syncher Create ---------------------- \\n');\n          console.info('[ChatManager.ChatController]Selected Hyperties: !!! ', selectedHyperties);\n          console.info('Have ' + selectedHyperties.length + ' users;');\n          //        console.info('[ChatManager] HypertiesIDs ', hypertiesIDs);\n\n          var dataObject = _this.controllerMode === 'reporter' ? _this.dataObjectReporter : _this.dataObjectObserver;\n\n          if (disconnected.length > 0) _this._invitationsHandler.inviteDisconnectedHyperties(disconnected, dataObject);\n\n          dataObject.inviteObservers(selectedHyperties);\n\n          if (dataObject.invitations.length > 0) _this._invitationsHandler.processInvitations(live, dataObject);\n\n          return;\n        }).then(function () {\n          console.info('[ChatManager.ChatController]Are invited with success ' + users.length + ' users;');\n          resolve(true);\n        }).catch(function (reason) {\n          console.error('An error occurred when trying to invite users;\\n', reason);\n          reject(reason);\n        });\n      });\n    }\n\n    /**\r\n     * This function is used to request the Reporter to add / invite new user on an existing Group Chat instance.\r\n     * Only Observers are allowed to use this function.\r\n     * @param {URL.UserURL}  users  User to be invited to join the Group Chat that is identified with reTHINK User URL.\r\n     * @return {Promise<boolean>}   It returns as a Promise true if successfully invited or false otherwise.\r\n     */\n\n  }, {\n    key: 'addUserReq',\n    value: function addUserReq(users) {\n\n      var _this = this;\n\n      //check is Observer and invoke observer.execute() with new promise\n      var haveEmptyElements = function haveEmptyElements(element) {\n        console.log('Element:', element.length);\n        return element.length !== 0;\n      };\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (users.filter(haveEmptyElements).length === 0) {\n          return reject('[ChatManager.ChatController.addUserReq] Don\\'t have users to add');\n        }\n        if (!_this.controllerMode === 'observer') {\n          return reject('[ChatManager.ChatController.addUserReq] only allowed to Chat Observer');\n\n          var addUser = _this.addUser(users);\n\n          if (_this._dataObjectObserver) {\n            addUser = _this._dataObjectObserver.execute('addUser', users);\n          }\n\n          addUser.then(function () {\n            console.info('[ChatManager.ChatController.addUserReq] Request accepted by Reporter ');\n            resolve(true);\n          }).catch(function (reason) {\n            console.error('[ChatManager.ChatController.addUserReq] Request rejected by Reporter;\\n', reason);\n            reject(reason);\n          });\n        }\n      });\n    }\n  }, {\n    key: 'onInvitationResponse',\n    value: function onInvitationResponse(callback) {\n      var _this = this;\n      _this._onInvitationResponse = callback;\n      _this._invitationsHandler.invitationResponse = callback;\n    }\n\n    /**\r\n     * This function is used to remove a user from an existing Group Chat instance.\r\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\r\n     * @return {<Promise> boolean} Promise with the status\r\n     */\n\n    /**\r\n     * This function is used to remove a user from an existing Group Chat instance.\r\n     * Only the Reporter, i.e. the Hyperty that has created the Group Chat, is allowed to use this function.\r\n     * @param  {URL.UserURL} user       User to be removed from the Group Chat that is identified with reTHINK User URL.\r\n     * @return {<Promise> boolean}      It returns as a Promise true if successfully removed or false otherwise.\r\n     */\n\n  }, {\n    key: 'removeUser',\n    value: function removeUser(user) {\n\n      // TODO: implement the removeUser;\n      console.log('[ChatManager.ChatController]Not yet implemented: ', user);\n    }\n\n    /**\r\n     * This function is used to close an existing Group Chat instance.\r\n     * Only available to Chat Group Reporters i.e. the Hyperty instance that created the Group Chat.\r\n     * @return {<Promise>Boolean} It returns as a Promise true if successfully closed or false otherwise.\r\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      // TODO: the dataObjectReporter.delete should be an Promise;\n\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        if (_this.controllerMode === 'reporter') {\n          _this._invitationsHandler.cleanInvitations(_this.dataObjectReporter).then(function () {\n            try {\n              delete _this._manager._reportersControllers[_this.dataObjectReporter.url];\n              _this.dataObjectReporter.delete();\n              resolve(true);\n              if (_this._onClose) _this._onClose({\n                code: 200,\n                desc: 'deleted',\n                url: _this.dataObjectReporter.url\n              });\n            } catch (e) {\n              console.error(e);\n              reject(false);\n            }\n          });\n        } else {\n          try {\n            delete _this._manager._observersControllers[_this.dataObjectObserver.url];\n            _this.dataObjectObserver.unsubscribe();\n            resolve(true);\n          } catch (e) {\n            console.error(e);\n            reject(false);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'invitationsHandler',\n    get: function get() {\n      return this._invitationsHandler;\n    }\n  }, {\n    key: 'url',\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this.dataObjectReporter.url : this.dataObjectObserver.url;\n    }\n  }, {\n    key: 'dataObjectReporter',\n    set: function set(dataObjectReporter) {\n\n      if (!dataObjectReporter) throw new Error('[ChatController] The data object reporter is necessary parameter ');\n      var _this = this;\n\n      _this.controllerMode = 'reporter';\n\n      // Handler to process received files\n\n      // dataObjectReporter.onResponse(function(event) {\n      //   console.log('[DataObjectReporter - onResponse]', event);\n      //   if (_this._onInvitationResponse) {\n      //     _this._onInvitationResponse(event);\n      //   }\n      //\n      // });\n\n      dataObjectReporter.onSubscription(function (event) {\n\n        switch (event.type) {\n          case 'subscribe':\n            _this._onSubscribe(event);break;\n          case 'unsubscribe':\n            _this._onUnsubscribe(event);break;\n        }\n      });\n\n      _this._setOnAddChildListener(dataObjectReporter);\n\n      dataObjectReporter.onRead(function (event) {\n        event.accept();\n      });\n\n      dataObjectReporter.onExecute(function (event) {\n        switch (event.method) {\n          case 'addUser':\n            _this.addUser(event.params[0]).then(function () {\n              event.accept();\n            }).catch(function (reason) {\n              console.error('Reason:', reason);\n              event.reject(reason);\n            });\n            break;\n          case 'removeUser':\n            _this.removeUser(event.params).then(function () {\n              event.accept();\n            }).catch(function (reason) {\n              console.error('Reason:', reason);\n              event.reject(reason);\n            });\n            break;\n          default:\n            event.reject('[ChatController.onExecute] Chat method execution not accepted by Reporter');\n            break;\n        }\n      });\n\n      _this._dataObjectReporter = dataObjectReporter;\n    },\n    get: function get() {\n      var _this = this;\n      return _this._dataObjectReporter;\n    }\n  }, {\n    key: 'messages',\n    get: function get() {\n\n      return this.controllerMode === 'reporter' ? this._dataObjectReporter._childrenObjects['resources'] : this._dataObjectObserver._childrenObjects['resources'];\n    }\n  }, {\n    key: 'dataObjectObserver',\n    set: function set(dataObjectObserver) {\n      var _this = this;\n\n      _this.controllerMode = 'observer';\n\n      _this._dataObjectObserver = dataObjectObserver;\n\n      dataObjectObserver.onChange('*', function (event) {\n        console.info('[ChatManager.ChatController]Observer - onChange', event);\n\n        if (event.field.includes('participants')) {\n          switch (event.cType) {\n            case 'add':\n              if (_this._onUserAdded) _this._onUserAdded(event);\n              break;\n\n            case 'remove':\n              if (_this._onUserRemoved) _this._onUserRemoved(event);\n              break;\n          }\n        }\n\n        if (_this._onChange) _this._onChange(event);\n      });\n\n      _this._setOnAddChildListener(dataObjectObserver);\n\n      // let childrens = dataObjectObserver.childrens;\n      // Object.keys(childrens).forEach((child) => {\n      //   if (_this._onMessage) _this._onMessage({\n      //     childId: child,\n      //     identity: childrens[child].identity,\n      //     value: childrens[child].data\n      //   });\n      // })\n    },\n    get: function get() {\n      var _this = this;\n      return _this._dataObjectObserver;\n    }\n  }, {\n    key: 'dataObject',\n    get: function get() {\n      return this.controllerMode === 'reporter' ? this.dataObjectReporter : this.dataObjectObserver;\n    }\n  }, {\n    key: 'closeEvent',\n    set: function set(event) {\n      var _this = this;\n      _this._closeEvent = event;\n\n      if (_this._onClose) _this._onClose(event);\n    },\n    get: function get() {\n      var _this = this;\n      return _this._closeEvent;\n    }\n  }]);\n  return ChatController;\n}(); /**\r\n     * Copyright 2016 PT Inovação e Sistemas SA\r\n     * Copyright 2016 INESC-ID\r\n     * Copyright 2016 QUOBIS NETWORKS SL\r\n     * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n     * Copyright 2016 ORANGE SA\r\n     * Copyright 2016 Deutsche Telekom AG\r\n     * Copyright 2016 Apizee\r\n     * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n     *\r\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     * you may not use this file except in compliance with the License.\r\n     * You may obtain a copy of the License at\r\n     *\r\n     *   http://www.apache.org/licenses/LICENSE-2.0\r\n     *\r\n     * Unless required by applicable law or agreed to in writing, software\r\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n     * See the License for the specific language governing permissions and\r\n     * limitations under the License.\r\n     **/\n\n/**\r\n* The Group Chat API is used to control a Group Chat instance.\r\n* @author Vitor Silva [vitor-t-silva@telecom.pt]\r\n* @version 0.1.0\r\n*/\n\nexports.default = ChatController;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///149\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserInfo = undefined;\n\nvar _defineProperty2 = __webpack_require__(171);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _utils = __webpack_require__(19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UserInfo = exports.UserInfo = function UserInfo(hypertyURL, domain, identity) {\n  var _ref;\n\n  (0, _classCallCheck3.default)(this, UserInfo);\n\n\n  var completeIdentity = (0, _utils.deepClone)(identity);\n  if (!identity.hasOwnProperty('userProfile')) {\n    completeIdentity['userProfile'] = identity;\n  }\n\n  return _ref = {\n    hypertyURL: hypertyURL,\n    domain: domain }, (0, _defineProperty3.default)(_ref, 'domain', domain), (0, _defineProperty3.default)(_ref, 'identity', completeIdentity), _ref;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhdE1hbmFnZXIvVXNlckluZm8uanM/NzdkMiJdLCJuYW1lcyI6WyJVc2VySW5mbyIsImh5cGVydHlVUkwiLCJkb21haW4iLCJpZGVudGl0eSIsImNvbXBsZXRlSWRlbnRpdHkiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7SUFFYUEsUSxXQUFBQSxRLEdBRVgsa0JBQVlDLFVBQVosRUFBd0JDLE1BQXhCLEVBQWdDQyxRQUFoQyxFQUEwQztBQUFBOztBQUFBOzs7QUFFeEMsTUFBSUMsbUJBQW1CLHNCQUFVRCxRQUFWLENBQXZCO0FBQ0EsTUFBSSxDQUFDQSxTQUFTRSxjQUFULENBQXdCLGFBQXhCLENBQUwsRUFBNkM7QUFDM0NELHFCQUFpQixhQUFqQixJQUFrQ0QsUUFBbEM7QUFDRDs7QUFFRDtBQUNFRixnQkFBWUEsVUFEZDtBQUVFQyxrQkFGRixrREFFVUEsTUFGVixtREFHWUUsZ0JBSFo7QUFNRCxDIiwiZmlsZSI6IjE1MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGh5cGVydHlVUkwsIGRvbWFpbiwgaWRlbnRpdHkpIHtcclxuXHJcbiAgICBsZXQgY29tcGxldGVJZGVudGl0eSA9IGRlZXBDbG9uZShpZGVudGl0eSk7XHJcbiAgICBpZiAoIWlkZW50aXR5Lmhhc093blByb3BlcnR5KCd1c2VyUHJvZmlsZScpKSB7XHJcbiAgICAgIGNvbXBsZXRlSWRlbnRpdHlbJ3VzZXJQcm9maWxlJ10gPSBpZGVudGl0eTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBoeXBlcnR5VVJMOiBoeXBlcnR5VVJMLFxyXG4gICAgICBkb21haW4sIGRvbWFpbixcclxuICAgICAgaWRlbnRpdHk6IGNvbXBsZXRlSWRlbnRpdHlcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY2hhdE1hbmFnZXIvVXNlckluZm8uanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///150\n")},,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.ChatController = exports.ChatManager = undefined;\n\nvar _ChatManager = __webpack_require__(168);\n\nvar _ChatManager2 = _interopRequireDefault(_ChatManager);\n\nvar _ChatController = __webpack_require__(149);\n\nvar _ChatController2 = _interopRequireDefault(_ChatController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.ChatManager = _ChatManager2.default;\nexports.ChatController = _ChatController2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvQ2hhdE1hbmFnZXIuanM/M2IzZCJdLCJuYW1lcyI6WyJDaGF0TWFuYWdlciIsIkNoYXRDb250cm9sbGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O1FBRVFBLFcsR0FBQUEscUI7UUFBYUMsYyxHQUFBQSx3QiIsImZpbGUiOiIxNjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hhdE1hbmFnZXIgZnJvbSAnLi9jaGF0TWFuYWdlci9DaGF0TWFuYWdlcic7XHJcbmltcG9ydCBDaGF0Q29udHJvbGxlciBmcm9tICcuL2NoYXRNYW5hZ2VyL0NoYXRDb250cm9sbGVyJztcclxuXHJcbmV4cG9ydCB7Q2hhdE1hbmFnZXIsIENoYXRDb250cm9sbGVyfTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0NoYXRNYW5hZ2VyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///167\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = __webpack_require__(78);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _IdentityManager = __webpack_require__(148);\n\nvar _IdentityManager2 = _interopRequireDefault(_IdentityManager);\n\nvar _Discovery = __webpack_require__(138);\n\nvar _Discovery2 = _interopRequireDefault(_Discovery);\n\nvar _Syncher = __webpack_require__(131);\n\nvar _Syncher2 = _interopRequireDefault(_Syncher);\n\nvar _utils = __webpack_require__(19);\n\nvar _Search = __webpack_require__(169);\n\nvar _Search2 = _interopRequireDefault(_Search);\n\nvar _communication = __webpack_require__(170);\n\nvar _ChatController = __webpack_require__(149);\n\nvar _ChatController2 = _interopRequireDefault(_ChatController);\n\nvar _UserInfo = __webpack_require__(150);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n* Hyperty Group Chat Manager API (HypertyChat)\r\n* @author Vitor Silva [vitor-t-silva@telecom.pt]\r\n* @version 0.1.0\r\n*/\n\n/**\r\n* Copyright 2016 PT Inovação e Sistemas SA\r\n* Copyright 2016 INESC-ID\r\n* Copyright 2016 QUOBIS NETWORKS SL\r\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n* Copyright 2016 ORANGE SA\r\n* Copyright 2016 Deutsche Telekom AG\r\n* Copyright 2016 Apizee\r\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n**/\n\n// Service Framework\nvar ChatManager = function () {\n  function ChatManager(myUrl, bus, configuration, syncher) {\n    (0, _classCallCheck3.default)(this, ChatManager);\n\n    if (!myUrl) throw new Error('[ChatManager.constructor] The myUrl is a needed parameter');\n    if (!bus) throw new Error('[ChatManager.constructor] The MiniBus is a needed parameter');\n    if (!configuration) throw new Error('[ChatManager.constructor] The configuration is a needed parameter');\n\n    var _this = this;\n    if (!syncher) {\n      syncher = new _Syncher2.default(myUrl, bus, configuration);\n    }\n\n    _this._runtimeURL = configuration.runtimeURL;\n\n    var domain = (0, _utils.divideURL)(_this._runtimeURL).domain;\n    var discovery = new _Discovery2.default(myUrl, configuration.runtimeURL, bus);\n    var identityManager = new _IdentityManager2.default(myUrl, configuration.runtimeURL, bus);\n\n    _this._objectDescURL = 'hyperty-catalogue://catalogue.' + domain + '/.well-known/dataschema/Communication';\n\n    _this._reportersControllers = {};\n    _this._observersControllers = {};\n\n    _this._myUrl = myUrl;\n    _this._bus = bus;\n    _this._syncher = syncher;\n    _this._domain = domain;\n\n    _this.discovery = discovery;\n    _this.identityManager = identityManager;\n    _this.currentIdentity;\n\n    _this.search = new _Search2.default(discovery, identityManager);\n\n    _this.communicationObject = _communication.communicationObject;\n\n    _this.communicationChildren = _communication.communicationChildren;\n\n    console.log('[ChatManager] Discover ', discovery);\n    console.log('[ChatManager] Identity Manager ', identityManager);\n  }\n\n  (0, _createClass3.default)(ChatManager, [{\n    key: 'processNotification',\n    value: function processNotification(event) {\n      var _this = this;\n      console.log('[ChatManager.processNotification: ', event);\n\n      if (event.type === 'create') {\n\n        // TODO: replace the 100 for Message.Response\n        // event.ack(200);\n\n        if (_this._onInvitation) {\n          _this._onInvitation(event);\n        }\n      }\n\n      if (event.type === 'delete') {\n        // TODO: replace the 200 for Message.Response\n        event.ack(200);\n\n        _this._observersControllers[event.url].closeEvent = event;\n\n        delete _this._observersControllers[event.url];\n\n        _this._observersControllers.closeEvent = event;\n\n        _this.communicationObject = _communication.communicationObject;\n\n        for (var url in this._reportersControllers) {\n          this._reportersControllers[url].closeEvent(event);\n        }\n\n        for (var _url in this._observersControllers) {\n          this._observersControllers[_url].closeEvent(event);\n        }\n      }\n    }\n  }, {\n    key: 'myIdentity',\n    value: function myIdentity(identity) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n        console.info('[ChatManager.myIdentity]');\n        if (identity) return resolve(identity);\n\n        if (_this._myUrl.includes('hyperty://')) {\n          _this.identityManager.discoverUserRegistered().then(function (identity) {\n            resolve(identity);\n          }).catch(function (reason) {\n            reject(reason);\n          });\n        } else {\n          _this.identityManager.discoverIdentityPerIdP().then(function (identity) {\n            resolve(identity);\n          }).catch(function (reason) {\n            reject(reason);\n          });\n        }\n      });\n    }\n\n    /**\r\n     * This function is used to create a new Group Chat providing the name and the identifiers of users to be invited.\r\n     * @param  {string}                     name  Is a string to identify the Group Chat\r\n     * @param  {array<URL.userURL>}         users Array of users to be invited to join the Group Chat. Users are identified with reTHINK User URL, like this format user://<ipddomain>/<user-identifier>\r\n     * @return {<Promise>ChatController}    A ChatController object as a Promise.\r\n     */\n\n  }, {\n    key: 'create',\n    value: function create(name, users) {\n      var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n      var _this = this;\n      var syncher = _this._syncher;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.communicationObject = _communication.communicationObject;\n        _this.communicationObject.cseq = 1;\n        _this.communicationObject.startingTime = new Date().toJSON();\n        _this.communicationObject.status = _communication.CommunicationStatus.OPEN;\n\n        var myIdentity = void 0;\n\n        _this.myIdentity().then(function (identity) {\n          myIdentity = identity;\n          console.log('[ChatManager.create ] My Identity', identity);\n\n          // let url = _this.communicationObject.reporter;\n\n          var userInfo = new _UserInfo.UserInfo(_this._myUrl, _this._domain, identity);\n\n          // Add my identity\n          _this.communicationObject.participants[identity.userURL] = userInfo;\n\n          console.log('[ChatManager.create ] participants: ', _this.communicationObject.participants);\n          console.log('[ChatManager.create ] communicationObject', _this.communicationObject);\n          console.info('[ChatManager.create] searching ' + users);\n\n          //let usersSearch = _this.search.users(users, domains, ['comm'], ['chat']);\n\n          var usersDiscovery = [];\n\n          var disconnected = [];\n          var live = {};\n          var mutual = true;\n\n          users.forEach(function (user) {\n            var userDiscoveryPromise = _this.discovery.discoverHypertiesDO(user.user, ['comm'], ['chat'], user.domain);\n            usersDiscovery.push(userDiscoveryPromise);\n\n            //if (user.user.includes('://')) mutual = false;\n          });\n\n          _promise2.default.all(usersDiscovery).then(function (userDiscoveryResults) {\n            console.log('[ChatManager.create] Users Discovery Results->', userDiscoveryResults);\n\n            var selectedHyperties = [];\n\n            userDiscoveryResults.forEach(function (userDiscoveryResult) {\n\n              userDiscoveryResult.forEach(function (discovered) {\n                if (discovered.data.status === 'live') {\n                  selectedHyperties.push(discovered.data.hypertyID);\n                  live[discovered.data.hypertyID] = discovered;\n                } else {\n                  // To control the number of subscriptions to disconnected devices\n                  if (disconnected.length < 5) {\n                    disconnected.push(discovered);\n                  }\n                }\n              });\n            });\n\n            /*        return usersSearch;\r\n            }).then((hypertiesIDs) => {\r\n            let selectedHyperties = hypertiesIDs.map((hyperty) => {\r\n            return hyperty.hypertyID;\r\n            }); */\n\n            console.info('[ChatManager] ---------------------- Syncher Create ---------------------- \\n');\n            console.info('[ChatManager] Selected Hyperties: !!! ', selectedHyperties);\n            console.info('Have ' + selectedHyperties.length + ' users;');\n\n            var input = (0, _assign2.default)({ resources: ['chat'], mutual: mutual }, extra);\n            delete input.name;\n\n            console.info('[ChatManager] input data:', input);\n            return syncher.create(_this._objectDescURL, selectedHyperties, _this.communicationObject, true, false, name, {}, input);\n          }).then(function (dataObjectReporter) {\n\n            console.info('[ChatManager] 3. Return Create Data Object Reporter', dataObjectReporter);\n\n            var chatController = new _ChatController2.default(syncher, _this.discovery, _this._domain, _this.search, myIdentity, _this);\n            chatController.dataObjectReporter = dataObjectReporter;\n\n            _this._reportersControllers[dataObjectReporter.url] = chatController;\n\n            console.log('[ChatManager] chatController invitationsHandler: ', chatController.invitationsHandler);\n\n            // process invitations to handle not received invitations\n            if (dataObjectReporter.invitations.length > 0) {\n              chatController.invitationsHandler.processInvitations(live, dataObjectReporter);\n            }\n\n            // If any invited User is disconnected let's wait until it is connected again\n            if (disconnected.length > 0) chatController.invitationsHandler.inviteDisconnectedHyperties(disconnected, dataObjectReporter);\n\n            resolve(chatController);\n          }).catch(function (reason) {\n            reject(reason);\n          });\n        }).catch(function (reason) {\n          console.log('[ChatManager.create] MyIdentity Error:', reason);\n          return reject(reason);\n        });\n      });\n    }\n\n    /**\r\n     * This function is used to handle notifications about incoming invitations to join a Group Chat.\r\n     * @param  {Function} CreateEvent The CreateEvent fired by the Syncher when an invitaion is received\r\n     */\n\n  }, {\n    key: 'onInvitation',\n    value: function onInvitation(callback) {\n      var _this = this;\n      _this._onInvitation = callback;\n    }\n\n    /**\r\n     * This function is used to join a Group Chat.\r\n     * @param  {URL.CommunicationURL} invitationURL  The Communication URL of the Group Chat to join that is provided in the invitation event\r\n     * @return {<Promise>ChatController}             It returns the ChatController object as a Promise\r\n     */\n\n  }, {\n    key: 'join',\n    value: function join(invitationURL) {\n      var mutual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var identity = arguments[2];\n\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n        var syncher = _this._syncher;\n        var myIdentity = void 0;\n\n        console.info('[ChatManager] ------------------------ Syncher subscribe ---------------------- \\n');\n        console.info('invitationURL', invitationURL);\n        _this.myIdentity(identity).then(function (identity) {\n          myIdentity = identity;\n          return syncher.subscribe(_this._objectDescURL, invitationURL, true, false, mutual, identity);\n        }).then(function (dataObjectObserver) {\n          console.info('Data Object Observer: ', dataObjectObserver);\n\n          var chatController = new _ChatController2.default(syncher, _this.discovery, _this._domain, _this.search, myIdentity, _this);\n          resolve(chatController);\n\n          chatController.dataObjectObserver = dataObjectObserver;\n\n          _this._observersControllers[dataObjectObserver.url] = chatController;\n        }).catch(function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }]);\n  return ChatManager;\n}();\n\n// Internals\n\n\n// Utils\n\n//import RegistrationStatus from '../discovery/RegistrationStatus';\n\n\nexports.default = ChatManager;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///168\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Search = function () {\n  function Search(discovery, identityManager) {\n    (0, _classCallCheck3.default)(this, Search);\n\n\n    if (!discovery) throw new Error('The discovery component is a needed parameter');\n    if (!identityManager) throw new Error('The identityManager component is a needed parameter');\n\n    var _this = this;\n\n    _this.discovery = discovery;\n    _this.identityManager = identityManager;\n  }\n\n  (0, _createClass3.default)(Search, [{\n    key: 'myIdentity',\n    value: function myIdentity() {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        _this.identityManager.discoverUserRegistered().then(function (result) {\n          resolve(result);\n        }).catch(function (reason) {\n          reject(reason);\n        });\n      });\n    }\n  }, {\n    key: 'hyperties',\n    value: function hyperties(users, schemes, resources) {\n      var globalFlag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    }\n    //TODO: reuse users or the other way around\n\n    /**\r\n     * List of usersURL to search\r\n     * @param  {array<URL.userURL>}  users List of UserUR, like this format user://<ipddomain>/<user-identifier>\r\n     * @return {Promise}\r\n     */\n\n  }, {\n    key: 'users',\n    value: function users(usersURLs, providedDomains, schemes, resources) {\n      var globalFlag = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n\n      if (!usersURLs) throw new Error('You need to provide a list of users');\n      if (!providedDomains) throw new Error('You need to provide a list of domains');\n      if (!resources) throw new Error('You need to provide a list of resources');\n      if (!schemes) throw new Error('You need to provide a list of schemes');\n\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        console.info('[Search] Users: ', usersURLs, usersURLs.length);\n        console.info('[Search] Domains: ', providedDomains, providedDomains.length);\n        if (usersURLs.length === 0) {\n          console.info('Don\\'t have users to discovery');\n          resolve(usersURLs);\n        } else {\n          var getUsers = [];\n\n          usersURLs.forEach(function (userURL, index) {\n            var currentDomain = providedDomains[index];\n            console.info('[Search] Search user ' + userURL + ' for provided domain:', currentDomain);\n            if (!globalFlag) {\n              getUsers.push(_this.discovery.discoverHyperties(userURL, schemes, resources, currentDomain));\n            } else {\n              getUsers.push(_this.discovery.discoverHypertiesPerUserProfileData(userURL, schemes, resources));\n            }\n          });\n\n          console.info('Requests promises: ', getUsers);\n\n          _promise2.default.all(getUsers.map(function (promise) {\n            return promise.then(function (hyperty) {\n              return hyperty;\n            }, function (error) {\n              return error;\n            });\n          })).then(function (hyperties) {\n\n            console.info('[Search] Hyperties from new Discovery', hyperties);\n            var result = hyperties.map(function (hyperty) {\n\n              if (hyperty.hasOwnProperty('hypertyID')) return hyperty;\n              var recent = (0, _keys2.default)(hyperty).reduceRight(function (a, b) {\n                var hypertyDate = new Date(hyperty[b].lastModified);\n                var hypertyDateP = new Date(hyperty[a].lastModified);\n                if (hypertyDateP.getTime() < hypertyDate.getTime()) {\n                  return b;\n                }\n                return a;\n              });\n\n              return hyperty[recent];\n            });\n\n            var clean = result.filter(function (hyperty) {\n              return hyperty.hasOwnProperty('hypertyID');\n            });\n\n            console.log('Requests result: ', clean);\n\n            hyperties.forEach(function (entry) {\n              if (entry !== 'No Hyperty was found') {\n                return resolve(clean);\n              }\n            });\n\n            reject('No Hyperty was found');\n          }).catch(function (reason) {\n            console.error(reason);\n            resolve(usersURLs);\n          });\n        }\n      });\n    }\n  }]);\n  return Search;\n}();\n\nexports.default = Search;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///169\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n* Copyright 2016 PT Inovação e Sistemas SA\r\n* Copyright 2016 INESC-ID\r\n* Copyright 2016 QUOBIS NETWORKS SL\r\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n* Copyright 2016 ORANGE SA\r\n* Copyright 2016 Deutsche Telekom AG\r\n* Copyright 2016 Apizee\r\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n**/\n\nvar CommunicationStatus = exports.CommunicationStatus = {\n  OPEN: 'open',\n  PENDING: 'pending',\n  CLOSED: 'closed',\n  PAUSED: 'paused',\n  FAILED: 'failed'\n};\n\nvar communicationObject = exports.communicationObject = {\n  startingTime: '',\n  status: '',\n  participants: {}\n};\n\nvar communicationChildren = exports.communicationChildren = {\n  \"parent\": \"communication\",\n  \"listener\": \"resources\",\n  \"type\": \"HypertyResource\"\n};\n\n/*\r\nexport let communicationObject = {\r\n  id: '',\r\n  name: '',\r\n  owner: '',\r\n  scheme: 'comm',\r\n  startingTime: '',\r\n  lastModified: '',\r\n  duration: '',\r\n  status: '',\r\n  participants: []\r\n};\r\n*///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhdE1hbmFnZXIvY29tbXVuaWNhdGlvbi5qcz9hMzgyIl0sIm5hbWVzIjpbIkNvbW11bmljYXRpb25TdGF0dXMiLCJPUEVOIiwiUEVORElORyIsIkNMT1NFRCIsIlBBVVNFRCIsIkZBSUxFRCIsImNvbW11bmljYXRpb25PYmplY3QiLCJzdGFydGluZ1RpbWUiLCJzdGF0dXMiLCJwYXJ0aWNpcGFudHMiLCJjb21tdW5pY2F0aW9uQ2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJPLElBQU1BLG9EQUFzQjtBQUNqQ0MsUUFBTSxNQUQyQjtBQUVqQ0MsV0FBUyxTQUZ3QjtBQUdqQ0MsVUFBUSxRQUh5QjtBQUlqQ0MsVUFBUSxRQUp5QjtBQUtqQ0MsVUFBUTtBQUx5QixDQUE1Qjs7QUFRQSxJQUFJQyxvREFBc0I7QUFDL0JDLGdCQUFjLEVBRGlCO0FBRS9CQyxVQUFRLEVBRnVCO0FBRy9CQyxnQkFBYztBQUhpQixDQUExQjs7QUFNQSxJQUFJQyx3REFBd0I7QUFDakMsWUFBVyxlQURzQjtBQUVqQyxjQUFhLFdBRm9CO0FBR2pDLFVBQVM7QUFId0IsQ0FBNUI7O0FBTVAiLCJmaWxlIjoiMTcwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xyXG5cclxuZXhwb3J0IGNvbnN0IENvbW11bmljYXRpb25TdGF0dXMgPSB7XHJcbiAgT1BFTjogJ29wZW4nLFxyXG4gIFBFTkRJTkc6ICdwZW5kaW5nJyxcclxuICBDTE9TRUQ6ICdjbG9zZWQnLFxyXG4gIFBBVVNFRDogJ3BhdXNlZCcsXHJcbiAgRkFJTEVEOiAnZmFpbGVkJ1xyXG59O1xyXG5cclxuZXhwb3J0IGxldCBjb21tdW5pY2F0aW9uT2JqZWN0ID0ge1xyXG4gIHN0YXJ0aW5nVGltZTogJycsXHJcbiAgc3RhdHVzOiAnJyxcclxuICBwYXJ0aWNpcGFudHM6IHt9XHJcbn07XHJcblxyXG5leHBvcnQgbGV0IGNvbW11bmljYXRpb25DaGlsZHJlbiA9IHtcclxuICBcInBhcmVudFwiIDogXCJjb21tdW5pY2F0aW9uXCIsXHJcbiAgXCJsaXN0ZW5lclwiIDogXCJyZXNvdXJjZXNcIixcclxuICBcInR5cGVcIiA6IFwiSHlwZXJ0eVJlc291cmNlXCJcclxufTtcclxuXHJcbi8qXHJcbmV4cG9ydCBsZXQgY29tbXVuaWNhdGlvbk9iamVjdCA9IHtcclxuICBpZDogJycsXHJcbiAgbmFtZTogJycsXHJcbiAgb3duZXI6ICcnLFxyXG4gIHNjaGVtZTogJ2NvbW0nLFxyXG4gIHN0YXJ0aW5nVGltZTogJycsXHJcbiAgbGFzdE1vZGlmaWVkOiAnJyxcclxuICBkdXJhdGlvbjogJycsXHJcbiAgc3RhdHVzOiAnJyxcclxuICBwYXJ0aWNpcGFudHM6IFtdXHJcbn07XHJcbiovXHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jaGF0TWFuYWdlci9jb21tdW5pY2F0aW9uLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///170\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(59);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzPzZjZTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMTcxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZmluZVByb3BlcnR5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgICgwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzXG4vLyBtb2R1bGUgaWQgPSAxNzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///171\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(42);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = __webpack_require__(18);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _classCallCheck2 = __webpack_require__(3);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n* Copyright 2016 PT Inovação e Sistemas SA\r\n* Copyright 2016 INESC-ID\r\n* Copyright 2016 QUOBIS NETWORKS SL\r\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\r\n* Copyright 2016 ORANGE SA\r\n* Copyright 2016 Deutsche Telekom AG\r\n* Copyright 2016 Apizee\r\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n**/\n\n/**\r\n* To manage Group Chat Invitations\r\n* @author Paulo Chainho [paulo-g-chainho@alticelabs.com]\r\n* @version 0.1.0\r\n*/\n\n// TODO: have an instance per ChatController\n\nvar InvitationsHandler = function () {\n  function InvitationsHandler(hypertyURL) {\n    (0, _classCallCheck3.default)(this, InvitationsHandler);\n\n\n    if (!hypertyURL) throw Error('hypertyURL is a necessary dependecy');\n\n    var _this = this;\n    _this._hypertyURL = hypertyURL;\n\n    _this._pending = {}; // All pending invitations\n  }\n\n  (0, _createClass3.default)(InvitationsHandler, [{\n    key: 'inviteDisconnectedHyperties',\n\n\n    /**\r\n     * This function is used to handle notifications for disconnected Hy+erties.\r\n     * @param  {DiscoveredObject[]}    disconnected  array of discovered hyperties that are disconnected\r\n     * @param  {DataObjectReporter}    DataObjectReporter   Data Object Reporter addressed by invitations\r\n     */\n\n    value: function inviteDisconnectedHyperties(disconnected, dataObjectReporter) {\n\n      var _this = this;\n      console.log('[GroupChatManager.InvitationsHandler.inviteDisconnectedHyperties] lets invite ', disconnected);\n\n      disconnected.forEach(function (disconnectedHyperty) {\n\n        if (!_this._pending[dataObjectReporter]) {\n          _this._pending[dataObjectReporter] = {};\n        }\n\n        _this._pending[dataObjectReporter][disconnectedHyperty.data.hypertyID] = disconnectedHyperty;\n\n        disconnectedHyperty.onLive(_this._hypertyURL, function () {\n          console.log('[GroupChatManager.create] disconnected Hyperty is back to live', disconnectedHyperty);\n\n          dataObjectReporter.inviteObservers([disconnectedHyperty.data.hypertyID]);\n\n          disconnectedHyperty.unsubscribeLive(_this._hypertyURL);\n\n          delete _this._pending[dataObjectReporter][disconnectedHyperty.data.hypertyID];\n        });\n      });\n    }\n\n    /**\r\n     * This function is used to process sent invitations. In case invitations are not acknowledge by recipient it will be handled as a disconnected hyperty\r\n     * @param  {DiscoveredObject[]}    live  array of discovered hyperties that are or were live\r\n     * @param  {DataObjectReporter}    DataObjectReporter   Data Object Reporter addressed by invitations\r\n     */\n\n  }, {\n    key: 'processInvitations',\n    value: function processInvitations(live, dataObjectReporter) {\n      var _this2 = this;\n\n      var _this = this;\n\n      var invitations = dataObjectReporter.invitations || [];\n\n      console.log('[GroupChatManager.InvitationsHandler.processInvitations] waiting for replies ', invitations, this._invitationsResponse);\n\n      invitations.forEach(function (invitation) {\n        invitation.then(function (result) {\n          console.log('[GroupChatManager.InvitationsHandler.processInvitations] - OK: ', result, _this2._invitationsResponse);\n          if (_this2._invitationsResponse) {\n            _this2._invitationsResponse(result);\n          }\n        }).catch(function (result) {\n          console.log('[GroupChatManager.InvitationsHandler.processInvitations] - NOT OK: ', result, _this2._invitationsResponse);\n          if (_this2._invitationsResponse) {\n            _this2._invitationsResponse(result);\n          }\n          _this.inviteDisconnectedHyperties([live[result.invited]], dataObjectReporter);\n        });\n      });\n    }\n  }, {\n    key: 'resumeDiscoveries',\n    value: function resumeDiscoveries(discoveryEngine, groupChat) {\n      var _this = this;\n\n      return new _promise2.default(function (resolve, reject) {\n\n        var live = {};\n        var liveHyperties = [];\n        var disconnected = [];\n        var unsubscriptonPromises = [];\n\n        discoveryEngine.resumeDiscoveries().then(function (discoveries) {\n\n          console.log('[GroupChatManager.InvitationsHandler.resumeDiscoveries] found: ', discoveries);\n\n          discoveries.forEach(function (discovery) {\n\n            if (discovery.data.resources && discovery.data.resources[0] === 'chat') {\n              console.log('[GroupChatManager.InvitationsHandler.resumeDiscoveries] resuming: ', discovery);\n\n              if (discovery.data.status === 'live') {\n                // previously discovered object is now live\n                live[discovery.data.hypertyID] = discovery;\n                liveHyperties.push(discovery.data.hypertyID);\n                unsubscriptonPromises.push(discovery.unsubscribeLive(_this._hypertyURL));\n              } else {\n                // previously discovered object is still disconnected\n                disconnected.push(discovery);\n              }\n            }\n          });\n          if (disconnected.length > 0) _this.inviteDisconnectedHyperties(disconnected, groupChat);\n\n          if ((0, _keys2.default)(live).length > 0) {\n            groupChat.inviteObservers(liveHyperties);\n\n            if (groupChat.invitations.length > 0) _this.processInvitations(live, groupChat);\n\n            _promise2.default.all(unsubscriptonPromises).then(function () {\n              resolve();\n            });\n          } else resolve();\n        });\n      }).catch(function (reason) {\n        reject('[GroupChatManager.InvitationsHandler.resumeDiscoveries] failed | ', reason);\n      });\n    }\n\n    /**\r\n     * This function is used to remove and clean all pending invitations.\r\n     * @param  {DataObjectReporter}    DataObjectReporter   Data Object Reporter addressed by invitations\r\n     * @return {Promise} return a promise when all unsubscriptons for pending invitations are finished\r\n     */\n\n  }, {\n    key: 'cleanInvitations',\n    value: function cleanInvitations(dataObjectReporter) {\n      var _this = this;\n\n      var chatInvitations = _this._pending[dataObjectReporter];\n\n      console.log('[GroupChatManager.InvitationsHandler.cleanInvitations] ', chatInvitations);\n\n      if (chatInvitations) {\n\n        return new _promise2.default(function (resolve, reject) {\n          var pendingInvitations = (0, _keys2.default)(chatInvitations);\n\n          var unsubscriptonPromises = [];\n\n          pendingInvitations.forEach(function (invitation) {\n            unsubscriptonPromises.push(chatInvitations[invitation].unsubscribeLive(_this._hypertyURL));\n          });\n\n          _promise2.default.all(pendingInvitations).then(function () {\n            resolve();\n          });\n        });\n      } else return _promise2.default.resolve();\n    }\n  }, {\n    key: 'invitationResponse',\n    set: function set(callback) {\n      this._invitationsResponse = callback;\n    }\n  }]);\n  return InvitationsHandler;\n}();\n\nexports.default = InvitationsHandler;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///172\n")}])});